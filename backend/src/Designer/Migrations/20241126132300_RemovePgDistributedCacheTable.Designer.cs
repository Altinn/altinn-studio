// <auto-generated />
using System;
using Altinn.Studio.Designer.Repository.ORMImplementation.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Altinn.Studio.Designer.Migrations
{
    [DbContext(typeof(DesignerdbContext))]
    [Migration("20241126132300_RemovePgDistributedCacheTable")]
    partial class RemovePgDistributedCacheTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseSerialColumns(modelBuilder);

            modelBuilder.Entity("Altinn.Studio.Designer.Repository.ORMImplementation.Models.AppScopesDbObject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("App")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("app");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamptz")
                        .HasColumnName("created");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("character varying")
                        .HasColumnName("created_by");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("character varying")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Org")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("org");

                    b.Property<string>("Scopes")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("scopes");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.HasKey("Id")
                        .HasName("app_scopes_pkey");

                    b.HasIndex(new[] { "Org", "App" }, "idx_app_scopes_org_app")
                        .IsUnique();

                    b.ToTable("app_scopes", "designer");
                });

            modelBuilder.Entity("Altinn.Studio.Designer.Repository.ORMImplementation.Models.Deployment", b =>
                {
                    b.Property<long>("Sequenceno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGSERIAL")
                        .HasColumnName("sequenceno");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<long>("Sequenceno"));

                    b.Property<string>("App")
                        .HasColumnType("character varying")
                        .HasColumnName("app");

                    b.Property<string>("Buildid")
                        .HasColumnType("character varying")
                        .HasColumnName("buildid");

                    b.Property<string>("Buildresult")
                        .HasColumnType("character varying")
                        .HasColumnName("buildresult");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamptz")
                        .HasColumnName("created");

                    b.Property<string>("Entity")
                        .HasColumnType("text")
                        .HasColumnName("entity");

                    b.Property<string>("Org")
                        .HasColumnType("character varying")
                        .HasColumnName("org");

                    b.Property<string>("Tagname")
                        .HasColumnType("character varying")
                        .HasColumnName("tagname");

                    b.HasKey("Sequenceno")
                        .HasName("deployments_pkey");

                    b.HasIndex(new[] { "Org", "App" }, "idx_deployments_org_app");

                    b.ToTable("deployments", "designer");
                });

            modelBuilder.Entity("Altinn.Studio.Designer.Repository.ORMImplementation.Models.Release", b =>
                {
                    b.Property<long>("Sequenceno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGSERIAL")
                        .HasColumnName("sequenceno");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<long>("Sequenceno"));

                    b.Property<string>("App")
                        .HasColumnType("character varying")
                        .HasColumnName("app");

                    b.Property<string>("Buildid")
                        .HasColumnType("character varying")
                        .HasColumnName("buildid");

                    b.Property<string>("Buildresult")
                        .HasColumnType("character varying")
                        .HasColumnName("buildresult");

                    b.Property<string>("Buildstatus")
                        .HasColumnType("character varying")
                        .HasColumnName("buildstatus");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamptz")
                        .HasColumnName("created");

                    b.Property<string>("Entity")
                        .HasColumnType("text")
                        .HasColumnName("entity");

                    b.Property<string>("Org")
                        .HasColumnType("character varying")
                        .HasColumnName("org");

                    b.Property<string>("Tagname")
                        .HasColumnType("character varying")
                        .HasColumnName("tagname");

                    b.HasKey("Sequenceno")
                        .HasName("releases_pkey");

                    b.HasIndex(new[] { "Org", "App" }, "idx_releases_org_app");

                    b.ToTable("releases", "designer");
                });
#pragma warning restore 612, 618
        }
    }
}

<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <IsPackable>false</IsPackable>

    <IncludeBuildOutput>false</IncludeBuildOutput>
    <NoPackageAnalysis>true</NoPackageAnalysis>
    <DevelopmentDependency>true</DevelopmentDependency>
    <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
    <NoWarn>$(NoWarn);CS1591</NoWarn>
  </PropertyGroup>

  <ItemGroup>
    <Using Include="System.Collections.Immutable" />
    <Using Include="Microsoft.CodeAnalysis" />
    <Using Include="Microsoft.CodeAnalysis.CSharp" />
    <Using Include="Microsoft.CodeAnalysis.Diagnostics" />
    <Using Include="Microsoft.CodeAnalysis.CSharp.Syntax" />

    <AdditionalFiles Include="AnalyzerReleases.Shipped.md" />
    <AdditionalFiles Include="AnalyzerReleases.Unshipped.md" />
  </ItemGroup>

  <!--
    NOTE:
    InternalsVisibleTo messes with PolySharp, which we use to support newer C# features in analyzer code (such as records)
    So it is disabled currently and relevant members in analyzer code are public instead
   -->
  <!-- <ItemGroup>
    <InternalsVisibleTo Include="Altinn.App.Analyzers.Tests" />
  </ItemGroup> -->

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.11.0" PrivateAssets="all" />
    <PackageReference Include="PolySharp" Version="1.15.0" PrivateAssets="all" IncludeAssets="runtime; build; native; contentfiles; analyzers; buildtransitive" />
  </ItemGroup>
</Project>

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`>>> XSDUploader.tsx +++ Should match snapshot with the least amount of params 1`] = `
<XSDUploader
  language={
    Object {
      "administration": Object {},
    }
  }
  onXSDUploaded={[MockFunction]}
>
  <TopToolbarButton
    disabled={false}
    faIcon="fa fa-upload"
    hideText={true}
    iconSize={38}
    onClick={[Function]}
    warning={false}
  >
    <WithStyles(ForwardRef(IconButton))
      aria-label="app_data_modelling.upload_xsd"
      className="makeStyles-toolbarButton-1 makeStyles-iconButton-2"
      color="primary"
      disabled={false}
      onClick={[Function]}
    >
      <ForwardRef(IconButton)
        aria-label="app_data_modelling.upload_xsd"
        className="makeStyles-toolbarButton-1 makeStyles-iconButton-2"
        classes={
          Object {
            "colorInherit": "MuiIconButton-colorInherit",
            "colorPrimary": "MuiIconButton-colorPrimary",
            "colorSecondary": "MuiIconButton-colorSecondary",
            "disabled": "Mui-disabled",
            "edgeEnd": "MuiIconButton-edgeEnd",
            "edgeStart": "MuiIconButton-edgeStart",
            "label": "MuiIconButton-label",
            "root": "MuiIconButton-root",
            "sizeSmall": "MuiIconButton-sizeSmall",
          }
        }
        color="primary"
        disabled={false}
        onClick={[Function]}
      >
        <WithStyles(ForwardRef(ButtonBase))
          aria-label="app_data_modelling.upload_xsd"
          centerRipple={true}
          className="MuiIconButton-root makeStyles-toolbarButton-1 makeStyles-iconButton-2 MuiIconButton-colorPrimary"
          disabled={false}
          focusRipple={true}
          onClick={[Function]}
        >
          <ForwardRef(ButtonBase)
            aria-label="app_data_modelling.upload_xsd"
            centerRipple={true}
            className="MuiIconButton-root makeStyles-toolbarButton-1 makeStyles-iconButton-2 MuiIconButton-colorPrimary"
            classes={
              Object {
                "disabled": "Mui-disabled",
                "focusVisible": "Mui-focusVisible",
                "root": "MuiButtonBase-root",
              }
            }
            disabled={false}
            focusRipple={true}
            onClick={[Function]}
          >
            <button
              aria-label="app_data_modelling.upload_xsd"
              className="MuiButtonBase-root MuiIconButton-root makeStyles-toolbarButton-1 makeStyles-iconButton-2 MuiIconButton-colorPrimary"
              disabled={false}
              onBlur={[Function]}
              onClick={[Function]}
              onDragLeave={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
              onMouseLeave={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
              tabIndex={0}
              type="button"
            >
              <span
                className="MuiIconButton-label"
              >
                <i
                  aria-hidden={true}
                  className="fa fa-upload"
                  style={
                    Object {
                      "fontSize": 38,
                    }
                  }
                />
              </span>
              <WithStyles(memo)
                center={true}
              >
                <ForwardRef(TouchRipple)
                  center={true}
                  classes={
                    Object {
                      "child": "MuiTouchRipple-child",
                      "childLeaving": "MuiTouchRipple-childLeaving",
                      "childPulsate": "MuiTouchRipple-childPulsate",
                      "ripple": "MuiTouchRipple-ripple",
                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                      "root": "MuiTouchRipple-root",
                    }
                  }
                >
                  <span
                    className="MuiTouchRipple-root"
                  >
                    <TransitionGroup
                      childFactory={[Function]}
                      component={null}
                      exit={true}
                    />
                  </span>
                </ForwardRef(TouchRipple)>
              </WithStyles(memo)>
            </button>
          </ForwardRef(ButtonBase)>
        </WithStyles(ForwardRef(ButtonBase))>
      </ForwardRef(IconButton)>
    </WithStyles(ForwardRef(IconButton))>
  </TopToolbarButton>
</XSDUploader>
`;

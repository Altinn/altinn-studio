<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Altinn.Platform.Storage.Interface</name>
    </assembly>
    <members>
        <member name="T:Altinn.Platform.Storage.Clients.ApplicationClient">
            <summary>
            Client for managing application metadata.
            </summary>
        </member>
        <member name="M:Altinn.Platform.Storage.Clients.ApplicationClient.#ctor(System.Net.Http.HttpClient,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="client">the http client to use</param>
            <param name="enpointUrl">the url of the endpoint</param>
        </member>
        <member name="M:Altinn.Platform.Storage.Clients.ApplicationClient.CreateApplication(System.String,Altinn.Platform.Storage.Interface.Models.LanguageString)">
            <summary>
            Creates and stores an application with an appId and a title.
            </summary>
            <param name="appId">the application id, e.g. test/app42</param>
            <param name="title">the title of the application</param>
            <returns></returns>
        </member>
        <member name="M:Altinn.Platform.Storage.Clients.ApplicationClient.CreateApplication(Altinn.Platform.Storage.Interface.Models.Application)">
            <summary>
            Stores application from an application instance.
            </summary>
            <param name="application">the application to store</param>
            <returns></returns>
        </member>
        <member name="M:Altinn.Platform.Storage.Clients.ApplicationClient.UpdateApplication(Altinn.Platform.Storage.Interface.Models.Application)">
            <summary>
            Updates and application
            </summary>
            <param name="application">the application that should be updated</param>
            <returns>the updated application</returns>
        </member>
        <member name="M:Altinn.Platform.Storage.Clients.ApplicationClient.GetApplication(System.String)">
            <summary>
            Fetches the application with a given id.
            </summary>
            <param name="appId">the application id</param>
            <returns>the application object</returns>
        </member>
        <member name="M:Altinn.Platform.Storage.Clients.ApplicationClient.DeleteApplication(System.String)">
            <summary>
            Deletes an application in storage.
            </summary>
            <param name="appId">the application ied</param>
            <returns>the application object that was deleted</returns>
        </member>
        <member name="T:Altinn.Platform.Storage.Clients.Extensions">
            <summary>
            Class to wrap a json object into a StringContent with correct encoding and content type.
            </summary>
        </member>
        <member name="M:Altinn.Platform.Storage.Clients.Extensions.AsJson(System.Object)">
            <summary>
             Wrapper method.
            </summary>
            <param name="o">the json object to wrap.</param>
            <returns>a StringContent object.</returns>
        </member>
        <member name="T:Altinn.Platform.Storage.Clients.InstanceClient">
            <summary>
            Storage client methods.
            </summary>
        </member>
        <member name="M:Altinn.Platform.Storage.Clients.InstanceClient.#ctor(System.Net.Http.HttpClient,System.String)">
            <summary>
            Create a client.
            </summary>
            <param name="client">the http client</param>
            <param name="hostName">the host name</param>
        </member>
        <member name="M:Altinn.Platform.Storage.Clients.InstanceClient.GetInstances(System.String)">
            <summary>
            Get an instance.
            </summary>
            <param name="instanceId">the instance id</param>
            <returns>the instance object</returns>
        </member>
        <member name="M:Altinn.Platform.Storage.Clients.InstanceClient.GetInstancesForOrg(System.String,System.Int32)">
            <summary>
            Get all instances for an org.
            </summary>
            <param name="org">the org id</param>
            <param name="size">the size of the collection to return.</param>
            <returns>the instance object</returns>
        </member>
        <member name="M:Altinn.Platform.Storage.Clients.InstanceClient.PostInstances(System.String,System.Int32)">
            <summary>
            Creates an instance
            </summary>
            <param name="appId">application id of the instance (must be registered in platform storage)</param>
            <param name="instanceOwnerPartyId">the instance owner id</param>
            <returns>the instance just created</returns>
        </member>
        <member name="M:Altinn.Platform.Storage.Clients.InstanceClient.PostInstances(System.String,Altinn.Platform.Storage.Interface.Models.Instance)">
            <summary>
            Creates an instance
            </summary>
            <param name="appId">application id of the instance (must be registered in platform storage)</param>
            <param name="instanceTemplate">the instance template to base the instance on</param>
            <returns>the instance just created</returns>
        </member>
        <member name="M:Altinn.Platform.Storage.Clients.InstanceClient.GetInstanceEvents(System.String,System.String[],System.String,System.String)">
            <summary>
            Retrieves all instance events related to given instance, listed event types and given time frame from instanceEvent collection.
            </summary>
            <param name="instanceId"> Id of instance to retrieve events for. </param>
            <param name="eventTypes">List of event types to filter the events by.</param>
            <param name="from"> Lower bound for DateTime span to filter events by. Utc format and invariantCulture. </param>
            <param name="to"> Upper bound for DateTime span to filter events by. Utc format and invariantCulture. </param>
            <returns>List of intance events.</returns>
        </member>
        <member name="M:Altinn.Platform.Storage.Clients.InstanceClient.PostInstanceEvent(Altinn.Platform.Storage.Interface.Models.InstanceEvent)">
            <summary>
            Inserts new instance event into the instanceEvent collection.
            </summary>
            <param name="instanceEvent">Instance event to be stored. </param>
            <returns>The stored instance event.</returns>
        </member>
        <member name="M:Altinn.Platform.Storage.Clients.InstanceClient.DeleteInstance(System.String)">
            <summary>
            Deletes an instance (for testing purposes)
            </summary>
            <param name="instanceId">the id of the instance.</param>
            <returns>tru if deletion was successfull otherwise throws an exception</returns>
        </member>
        <member name="M:Altinn.Platform.Storage.Clients.InstanceClient.DeleteInstanceEvents(System.String)">
            <summary>
            Deletes all events related to an instance id.
            </summary>
            <param name="instanceId">Id of instance to retrieve events for. </param>
            <returns>True if instance events were successfully deleted.</returns>
        </member>
        <member name="M:Altinn.Platform.Storage.Clients.InstanceClient.PostFileAsAttachment(Altinn.Platform.Storage.Interface.Models.Instance,System.String,System.String,System.String)">
            <summary>
            Post a file as an atachment to storage.
            </summary>
            <returns>The HttpResponseMessage</returns>
        </member>
        <member name="M:Altinn.Platform.Storage.Clients.InstanceClient.PostFileAsStream(Altinn.Platform.Storage.Interface.Models.Instance,System.String,System.String,System.String)">
            <summary>
            Post a data file as a stream content to storage.
            </summary>
            <returns>http response message</returns>
        </member>
        <member name="M:Altinn.Platform.Storage.Clients.InstanceClient.PostFileAsAttachmentAndReturnMetadata(Altinn.Platform.Storage.Interface.Models.Instance,System.String,System.String,System.String)">
            <summary>
            Post file as attachment.
            </summary>
            <returns>the data element</returns>
        </member>
        <member name="T:Altinn.Platform.Storage.Clients.StorageClientException">
            <summary>
            Exception class for storage exceptions.
            </summary>
        </member>
        <member name="M:Altinn.Platform.Storage.Clients.StorageClientException.#ctor(System.String)">
            <summary>
            Exception with plain message.
            </summary>
            <param name="message">the message</param>
        </member>
        <member name="M:Altinn.Platform.Storage.Clients.StorageClientException.#ctor(System.String,System.Exception)">
            <summary>
            Exception with message and inner exception
            </summary>
            <param name="message">the message</param>
            <param name="inner">the exception</param>
        </member>
        <member name="M:Altinn.Platform.Storage.Clients.StorageClientException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialise this
            </summary>
        </member>
        <member name="M:Altinn.Platform.Storage.Clients.StorageClientException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data
            </summary>
            <param name="info">info</param>
            <param name="context">context</param>
        </member>
        <member name="T:Altinn.Platform.Storage.Interface.Enums.InstanceEventType">
            <summary>
            This enum defines the Instance event types supported by the AltinnCore platform.
            </summary>
        </member>
        <member name="F:Altinn.Platform.Storage.Interface.Enums.InstanceEventType.None">
            <summary>
            Unkown instance event.
            </summary>
        </member>
        <member name="F:Altinn.Platform.Storage.Interface.Enums.InstanceEventType.Created">
            <summary>
            Instance created event.
            </summary>
        </member>
        <member name="F:Altinn.Platform.Storage.Interface.Enums.InstanceEventType.Saved">
            <summary>
            Instance saved event.
            </summary>
        </member>
        <member name="F:Altinn.Platform.Storage.Interface.Enums.InstanceEventType.Submited">
            <summary>
            Instance submited event.
            </summary>
        </member>
        <member name="F:Altinn.Platform.Storage.Interface.Enums.InstanceEventType.Deleted">
            <summary>
            Instance deleted event.
            </summary>
        </member>
        <member name="F:Altinn.Platform.Storage.Interface.Enums.InstanceEventType.Undeleted">
            <summary>
            Instance deleted event.
            </summary>
        </member>
        <member name="T:Altinn.Platform.Storage.Interface.Models.Application">
            <summary>
            Model for application metadata.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.Application.Id">
            <summary>
            Unique id of the application, e.g. test/app-34
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.Application.VersionId">
            <summary>
            the application version id.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.Application.Org">
            <summary>
            Service owner code for the service, e.g. nav.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.Application.Title">
            <summary>
            Title of the application with language codes.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.Application.ValidFrom">
            <summary>
            application is valid from this date-time
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.Application.ValidTo">
            <summary>
            application is valid to this date-time
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.Application.ProcessId">
            <summary>
            Identifier of the prosess model that is used by the application.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.Application.MaxSize">
            <summary>
            Maximum allowed size of all the data element files of an application instance in bytes.
            If not set there is no limit on file size.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.Application.DataTypes">
            <summary>
            Gets or sets the data types, the allowed elements of an application instance.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.Application.PartyTypesAllowed">
            <summary>
            Gets of sets the different party types allowed to instantiate the application
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.Application.SubscriptionHook">
            <summary>
            Gets or sets the subscription hook attached to the application
            </summary>
        </member>
        <member name="M:Altinn.Platform.Storage.Interface.Models.Application.ToString">
            <inheritdoc/>
        </member>
        <member name="F:Altinn.Platform.Storage.Interface.Models.ApplicationLogic.AutoCreate">
            <summary>
            If true the app-backend will attemt to automatically create (or prefill) this data element when the task referred by taskId starts.
            </summary>
        </member>
        <member name="F:Altinn.Platform.Storage.Interface.Models.ApplicationLogic.ClassRef">
            <summary>
            Reference to the class that is started to instantiate the data type.
            </summary>
        </member>
        <member name="F:Altinn.Platform.Storage.Interface.Models.ApplicationLogic.SchemaRef">
            <summary>
            Reference to the schema that defines the data type.
            </summary>
        </member>
        <member name="T:Altinn.Platform.Storage.Interface.Models.ApplicationOwnerDataState">
            <summary>
            Model to hold application owner state for a specific data element
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.ApplicationOwnerDataState.Downloaded">
            <summary>
            List of date-timestamps for when the application owner has downloaded data
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.ApplicationOwnerDataState.DownloadConfirmed">
            <summary>
            List of date-timestamps when application owner has confirmed the download
            </summary>
        </member>
        <member name="T:Altinn.Platform.Storage.Interface.Models.ApplicationOwnerState">
            <summary>
            Various fields that application owner can set. Some can be displayed to the user. Others dictate beahviour.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.ApplicationOwnerState.Labels">
            <summary>
            Label mechanism, can be used to set external system references
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.ApplicationOwnerState.Messages">
            <summary>
            List of messages that may be shown to user.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.ApplicationOwnerState.CanBeDeletedAfter">
            <summary>
            The date and time for when the system can delete the instance if user chose to do so.
            Should only be set if application owner has downloaded the instance and its data elements and
            processed them successfully.
            </summary>
        </member>
        <member name="T:Altinn.Platform.Storage.Interface.Models.ChangableElement">
            <summary>
            Abstract supertype for holding change attributes.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.ChangableElement.Created">
            <summary>
            Creation time for the element.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.ChangableElement.CreatedBy">
            <summary>
            User id of the user who created it.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.ChangableElement.LastChanged">
            <summary>
            Last changed date/time for the element.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.ChangableElement.LastChangedBy">
            <summary>
            User id of the user who last changed it.
            </summary>
        </member>
        <member name="T:Altinn.Platform.Storage.Interface.Models.DataElement">
            <summary>
            Model to hold a data element.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.DataElement.Id">
            <summary>
            The data element id, a guid.
            </summary>
        </member>
        <member name="F:Altinn.Platform.Storage.Interface.Models.DataElement.instanceGuid">
            <summary>
            The guid of the instance which the data element belongs to. This field is normally not populated if data element is part of instance metadata.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.DataElement.DataType">
            <summary>
            the data type, must be equal to the ones defined in application data types.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.DataElement.FileName">
            <summary>
            the name of the data element (file)
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.DataElement.ContentType">
            <summary>
            contentType of data element (file) stored
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.DataElement.BlobStoragePath">
            <summary>
            path to blob storage. Might be nullified in export.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.DataElement.SelfLinks">
            <summary>
            Links to access the data elements
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.DataElement.FileSize">
            <summary>
            Size of file in bytes
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.DataElement.IsLocked">
            <summary>
            Indicates that the instance owner no longer can update the data element
            </summary>
        </member>
        <member name="F:Altinn.Platform.Storage.Interface.Models.DataElement.AppOwner">
            <summary>
            Holds information about when the application owner has downloaded and confirmed download of the element.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.DataElement.Refs">
            <summary>
            an optional array of data element references.
            </summary>
        </member>
        <member name="M:Altinn.Platform.Storage.Interface.Models.DataElement.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Altinn.Platform.Storage.Interface.Models.DataType">
            <summary>
            Model for applications data type.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.DataType.Id">
            <summary>
            The data type id. It must be unique within the scope of an application.
            Logical name of the schema of which data elements should be validated against.
            Should be in lower case and can only contain letters, dash and numbers. No space or slashes are allowed.
            Examples are: main, subschema-x, cv, attachement
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.DataType.Description">
            <summary>
            Description of the element type with language description.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.DataType.AllowedContentTypes">
            <summary>
            List of allowed content types (Mime types).
            If null or empty all content types are allowed.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.DataType.AppLogic">
            <summary>
            If the data element require application logic this field has value. Otherwise data will be streamed directly to storage.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.DataType.TaskId">
            <summary>
            A reference to the process element id of the task where this data element should be updated.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.DataType.MaxSize">
            <summary>
            Maximum allowed size of the file in bytes. If missing there is no limit on file size.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.DataType.MaxCount">
            <summary>
            Maximum number of allowed elements of this type on the same application instance. Default is 1.
            </summary>
            <remarks>
            Zero or below indicate unbounded maximum number of elements.
            </remarks>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.DataType.MinCount">
            <summary>
            Minimum number of required elements of this type on the same application instance. Default is 1.
            </summary>
            <remarks>
            Zero or below indicate that the element type is optional.
            </remarks>
        </member>
        <member name="T:Altinn.Platform.Storage.Interface.Models.Instance">
            <summary>
            Holds metadata of an application instance for a particular instance owner.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.Instance.Id">
            <summary>
            The unique id of the instance {instanceOwnerId}/{instanceGuid}.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.Instance.InstanceOwner">
            <summary>
            instance owner information. 
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.Instance.AppId">
            <summary>
            id of the application this is an instance of, e.g. {org}/{app22}.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.Instance.Org">
            <summary>
            application owner identifier, usually a abbreviation of organisation name. All in lower case.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.Instance.SelfLinks">
            <summary>
            Links to access the instance metadata resource.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.Instance.DueBefore">
            <summary>
            Due date to submit the instance to application owner.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.Instance.VisibleAfter">
            <summary>
            The visible attribute controls when the instance should be visible for the party.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.Instance.Title">
            <summary>
            The title of the instance, can be shown in message box.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.Instance.Process">
            <summary>
            Process state section
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.Instance.Status">
            <summary>
            Section for status properties
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.Instance.AppOwner">
            <summary>
            Section for app owner properties.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.Instance.Data">
            <summary>
            the data elements associated with the instance
            </summary>
        </member>
        <member name="M:Altinn.Platform.Storage.Interface.Models.Instance.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Altinn.Platform.Storage.Interface.Models.InstanceEvent">
            <summary>
            Model for the instance event.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.InstanceEvent.Id">
            <summary>
            unique identifier of the event.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.InstanceEvent.InstanceId">
            <summary>
            the instance the event refers to {instanceOwnerId}/{instanceGuid}.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.InstanceEvent.DataId">
            <summary>
            the data element which the event refers to, or null.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.InstanceEvent.Created">
            <summary>
            event creation date-time
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.InstanceEvent.EventType">
            <summary>
            the event type, e.g. created, saved, process-change.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.InstanceEvent.InstanceOwnerPartyId">
            <summary>
            the instance owner party id.
            </summary>
        </member>
        <member name="F:Altinn.Platform.Storage.Interface.Models.InstanceEvent.User">
            <summary>
            the user who triggered the event.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.InstanceEvent.ProcessInfo">
            <summary>
            More information about the process event.
            Contains a snapshot of the changed currentTask element of the instance.
            If event type does not start with process: this field is not present.
            </summary>
        </member>
        <member name="M:Altinn.Platform.Storage.Interface.Models.InstanceEvent.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Altinn.Platform.Storage.Interface.Models.InstanceOwner">
            <summary>
            Model to hold an instance owner element.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.InstanceOwner.PartyId">
            <summary>
            The party id of the instance owner (also called instance owner party id). 
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.InstanceOwner.PersonNumber">
            <summary>
            Person number (national identification number) of the party. Null if the party is not a person.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.InstanceOwner.OrganisationNumber">
            <summary>
            Organisation number of the party. Null if the party is not an organisation.
            </summary>
        </member>
        <member name="T:Altinn.Platform.Storage.Interface.Models.InstanceStatus">
            <summary>
            Holds the state of an instance with respect to the Altinn inbox.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.InstanceStatus.Archived">
            <summary>
            The date the instance was archived.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.InstanceStatus.SoftDeleted">
            <summary>
            The date the instance was deleted. 
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.InstanceStatus.HardDeleted">
            <summary>
            The data the instance was marked for hard delete by user.
            </summary>
        </member>
        <member name="T:Altinn.Platform.Storage.Interface.Models.LanguageString">
            <summary>
            Convenience type to handle multiple languages in a string.
            </summary>
            
        </member>
        <member name="M:Altinn.Platform.Storage.Interface.Models.LanguageString.#ctor">
            <summary>
            public constructor
            </summary>
        </member>
        <member name="T:Altinn.Platform.Storage.Interface.Models.PartyTypesAllowed">
            <summary>
            Model for the different party types which are allowed to instantiate an application
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.PartyTypesAllowed.BankruptcyEstate">
            <summary>
            Should a bankruptcy estate be allowed to instantiate
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.PartyTypesAllowed.Organisation">
            <summary>
            Should a organisation be allowed to instantiate
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.PartyTypesAllowed.Person">
            <summary>
            Should a person be allowed to instantiate
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.PartyTypesAllowed.SubUnit">
            <summary>
            Should a sub unit be allowed to instantiate
            </summary>
        </member>
        <member name="T:Altinn.Platform.Storage.Interface.Models.PlatformUser">
            <summary>
            Information about the platform user, that is the identity of the client doing the action and his/hers authentication level.
            It can be a person (UserId) or an organisation (OrgId). And the user can have logged in via an end user system or not.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.PlatformUser.UserId">
            <summary>
            The identifier of the user as given by Altinn, or null if the user is a organisation user.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.PlatformUser.OrgId">
            <summary>
            The altinn org identifier of the organisation that were identified by maskinporten. 
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.PlatformUser.AuthenticationLevel">
            <summary>
            the authentication level for the user which triggered the event
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.PlatformUser.EndUserSystemId">
            <summary>
            the end user system that were used triggered the event.
            </summary>
        </member>
        <member name="T:Altinn.Platform.Storage.Interface.Models.ProcessElementInfo">
            <summary>
            Contains information about the current task/event element of a process
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.ProcessElementInfo.Flow">
            <summary>
            The sequence number of the various tasks and event elements that have been reached by this process.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.ProcessElementInfo.Started">
            <summary>
            Date and time when the task was started.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.ProcessElementInfo.ElementId">
            <summary>
            Reference to the current task/event element id as given in the process definition.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.ProcessElementInfo.Name">
            <summary>
            The name of the process element
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.ProcessElementInfo.AltinnTaskType">
            <summary>
            An altinn specific task type which specifies the wanted behaviour of the task.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.ProcessElementInfo.Ended">
            <summary>
            Date and time when the task was ended (closed/completed)
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.ProcessElementInfo.Validated">
            <summary>
            Validation status.
            </summary>
        </member>
        <member name="T:Altinn.Platform.Storage.Interface.Models.ValidationStatus">
            <summary>
            Validation status section.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.ValidationStatus.Timestamp">
            <summary>
            The date and time of the last validation of task.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.ValidationStatus.CanCompleteTask">
            <summary>
            Indicates if the validation was successfull and that the task can be completed.
            </summary>
        </member>
        <member name="T:Altinn.Platform.Storage.Interface.Models.ProcessState">
            <summary>
            Holds the process state of an application instance.
            The process is defined by the application's process specification BPMN file. 
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.ProcessState.Started">
            <summary>
            Indicates the date and time when the process was initialized
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.ProcessState.StartEvent">
            <summary>
            The start event that was used to start the process. 
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.ProcessState.CurrentTask">
            <summary>
            Contains the task info of the currentTask of an ongoing process.
            If process is not started or ended this field will not have value. 
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.ProcessState.Ended">
            <summary>
            The date time the process was ended/completed. 
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.ProcessState.EndEvent">
            <summary>
            The end event of the process. 
            </summary>
        </member>
        <member name="T:Altinn.Platform.Storage.Interface.Models.ResourceLinks">
            <summary>
            represent actual links to resources in various enpoints
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.ResourceLinks.Apps">
            <summary>
            Application resource link. It is null if data is fetched from platform storage.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.ResourceLinks.Platform">
            <summary>
            platform resource link.
            </summary>
        </member>
        <member name="T:Altinn.Platform.Storage.Interface.Models.SubscriptionHook">
            <summary>
            A subscription hook uses an existing T2 service to evaluate if the instance owner can instantiate the app.
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.SubscriptionHook.ServiceCode">
            <summary>
            The service code
            </summary>
        </member>
        <member name="P:Altinn.Platform.Storage.Interface.Models.SubscriptionHook.EditionCode">
            <summary>
             The edition code
            </summary>
        </member>
    </members>
</doc>

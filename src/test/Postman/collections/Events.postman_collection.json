{
	"info": {
		"_postman_id": "64ab096a-f011-4969-9299-3f9eb71c6f1c",
		"name": "Events",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Add instance event",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "59eb307d-9e00-43b3-a209-0b3b02ead6a8",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"New instance is created\", function () {",
							"    var jsonData = pm.response.json();",
							"    if(pm.expect(jsonData.id).not.eql(null))",
							"    {",
							"        pm.environment.set('EventId', jsonData.id);",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{    \n   \"instanceOwnerId\": \"123\",\n   \"instanceId\": \"20105050\",\n   \"eventType\": \"created\",\n   \"userId\": 3,\n   \"authenticationLevel\": 1,\n   \"workflowStep\": \"8\",\n   \"enduserSystemId\": 2\n}"
				},
				"url": {
					"raw": "{{envURL}}/storage/api/v1/instances/{{instanceId}}/events",
					"host": [
						"{{envURL}}"
					],
					"path": [
						"storage",
						"api",
						"v1",
						"instances",
						"{{instanceId}}",
						"events"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET All Events",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "357288ce-372f-4b00-9b7a-42dc94990430",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Newly created instance is retrieved\", function () {",
							"    var jsonData = pm.response.json();",
							"    var eventIdFound = 'false';",
							"    for(var i =0; i<jsonData.length; i++)",
							"    {",
							"        var createdEventId = pm.environment.get(\"EventId\");",
							"        if(jsonData[i].id == createdEventId)",
							"        {",
							"            eventIdFound = 'true';",
							"            break;",
							"        }",
							"    }",
							"    if(eventIdFound != 'true')",
							"    {",
							"        pm.expect(eventIdFound).to.equal(true);",
							"    }",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{envURL}}/storage/api/v1/instances/{{instanceId}}/events",
					"host": [
						"{{envURL}}"
					],
					"path": [
						"storage",
						"api",
						"v1",
						"instances",
						"{{instanceId}}",
						"events"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Events with type",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "04584cdf-bdf6-45e3-85f2-e5768b49208a",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Events of type created are fetched\", function () {",
							"    var jsonData = pm.response.json();",
							"    var eventTypeCreated = 'true';",
							"    for(var i =0; i<jsonData.length; i++)",
							"    {",
							"        if(jsonData[i].eventType != 'created')",
							"        {",
							"            eventTypeCreated = 'false';",
							"            break;    ",
							"        }",
							"    }",
							"    if(eventTypeCreated != 'true')",
							"    {",
							"        pm.expect(eventIdFound).to.equal(true);",
							"    }",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{envURL}}/storage/api/v1/instances/{{instanceId}}/events/?eventTypes=created",
					"host": [
						"{{envURL}}"
					],
					"path": [
						"storage",
						"api",
						"v1",
						"instances",
						"{{instanceId}}",
						"events",
						""
					],
					"query": [
						{
							"key": "eventTypes",
							"value": "created"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Events not retrieved by wrong time",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "546d0678-0ca9-44bd-a160-ebfc385882e7",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Did not find any instance events\");",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "8aa76d9e-95b4-4db6-a5d0-4b13afe1339d",
						"exec": [
							"var currentDate = new Date();",
							"var hoursToMinus = currentDate.getHours() - 1;",
							"currentDate.setHours(hoursToMinus);",
							"pm.environment.set(\"fromDate\", currentDate);",
							"var currentDate1 = new Date();",
							"var hoursToAdd = currentDate1.getHours() + 5;",
							"console.log(hoursToAdd);",
							"currentDate1.setHours(hoursToAdd);",
							"pm.environment.set(\"toDate\", currentDate1);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{envURL}}/storage/api/v1/instances/{{instanceId}}/events/?from=2018-05-22T08:42:53&to=2018-06-22T08:42:53",
					"host": [
						"{{envURL}}"
					],
					"path": [
						"storage",
						"api",
						"v1",
						"instances",
						"{{instanceId}}",
						"events",
						""
					],
					"query": [
						{
							"key": "from",
							"value": "2018-05-22T08:42:53"
						},
						{
							"key": "to",
							"value": "2018-06-22T08:42:53"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE events",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "686160fc-c6de-4c3f-904a-fe9528f346a7",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"succesfully deleted\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{envURL}}/storage/api/v1/instances/{{instanceId}}/events",
					"host": [
						"{{envURL}}"
					],
					"path": [
						"storage",
						"api",
						"v1",
						"instances",
						"{{instanceId}}",
						"events"
					]
				}
			},
			"response": []
		}
	]
}
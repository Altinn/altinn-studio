{
	"info": {
		"_postman_id": "a4d55d0a-1630-4915-922d-13d81bf17935",
		"name": "App",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "SetUp Cookies",
			"item": [
				{
					"name": "Authenticate user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var current_timestamp = new Date();\r",
									"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const jar = pm.cookies.jar();",
									"const domain = `https://${pm.environment.get(\"envUrl\")}`;",
									"jar.clear(domain, function (error){",
									"    if(error)",
									"    {",
									"        console.log(\"error\",error);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/hal+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"UserName\": \"{{testUserName}}\",\r\n    \"UserPassword\": \"{{testUserPassword}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{envUrl}}/api/authentication/authenticatewithpassword",
							"protocol": "https",
							"host": [
								"{{envUrl}}"
							],
							"path": [
								"api",
								"authentication",
								"authenticatewithpassword"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Runtime Cookie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code === 200) pm.environment.set(\"AltinnStudioRuntime\", pm.response.text());",
									"",
									"const cookieJar = pm.cookies.jar();",
									"const domain = `https://${pm.environment.get(\"envUrl\")}`;",
									"",
									"cookieJar.clear(domain, function (error){",
									"    if(error)",
									"    {",
									"        console.log(\"error\",error);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"AltinnStudioRuntime\",\"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://platform.{{envUrl}}/authentication/api/v1/authentication?goto=https://platform.{{envUrl}}/authentication/api/v1/refresh",
							"protocol": "https",
							"host": [
								"platform",
								"{{envUrl}}"
							],
							"path": [
								"authentication",
								"api",
								"v1",
								"authentication"
							],
							"query": [
								{
									"key": "goto",
									"value": "https://platform.{{envUrl}}/authentication/api/v1/refresh"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Party info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 200)",
									"{",
									"    var jsonData = pm.response.json();",
									"    var partyId = jsonData.partyId;",
									"    var ssn = jsonData.party.ssn;",
									"    pm.environment.set(\"instanceOwnerId\",partyId);",
									"    pm.environment.set(\"SSN\",ssn);",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/api/v1/profile/user",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"api",
								"v1",
								"profile",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AttachmentType Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code == 200) {\r",
									"    var jsonData = pm.response.json();\r",
									"    var dataTypes = jsonData.dataTypes;\r",
									"    var dataTypesCount = dataTypes.length;\r",
									"    for(var i=0; i<dataTypesCount; i++){\r",
									"        if (isGuid(dataTypes[i].id)){\r",
									"            pm.environment.set(\"attachmentElementType\", dataTypes[i].id);\r",
									"            break;\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    var regexGuid = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://platform.{{envUrl}}/storage/api/v1/applications/{{org}}/{{app}}",
							"protocol": "https",
							"host": [
								"platform",
								"{{envUrl}}"
							],
							"path": [
								"storage",
								"api",
								"v1",
								"applications",
								"{{org}}",
								"{{app}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Texts",
			"item": [
				{
					"name": "GET NB text",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"App Api - Texts - Get app NB texts - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);     \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/api/v1/texts/nb",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"api",
								"v1",
								"texts",
								"nb"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Instances",
			"item": [
				{
					"name": "POST Create Instances",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"App Api - Instances - Add app instance - Status - 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    var jsonData = pm.response.json();\r",
									"    if(pm.expect(jsonData.instanceOwnerId).not.eql(null))\r",
									"    {\r",
									"        pm.environment.set('instanceOwnerId', jsonData.instanceOwner.partyId);\r",
									"        var instanceId = jsonData.id;\r",
									"        instanceId = instanceId.toString();\r",
									"        instanceId = instanceId.split('/');\r",
									"        instanceId = instanceId[1];\r",
									"        var dataId = jsonData.data[0].id;\r",
									"        pm.environment.set('instanceId',instanceId);\r",
									"        pm.environment.set('dataGuid',dataId);\r",
									"        var processElementId = jsonData.process.currentTask.elementId;\r",
									"        pm.environment.set(\"processElementId\",processElementId);\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"instanceId\",\"\");",
									"pm.environment.set(\"dataGuid\",\"\");",
									"pm.environment.set(\"processElementId\",\"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instanceOwner\": {\n    \t\"partyId\": \"{{instanceOwnerId}}\"\n    },\n    \"appId\" : \"{{org}}/{{app}}\",\n    \"dueBefore\": \"2021-06-01T12:00:00Z\",\n    \"visibleAfter\": \"2021-05-20T00:00:00Z\",\n    \"title\": { \"nb\": \"test\" }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Instance by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"App Api - Instances - Get app instance by ID - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"App Api - Instances - Get app instance by ID - Content - matches\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var envInstanceId = pm.environment.get(\"instanceId\");\r",
									"    var responseInstanceId = jsonData.id;\r",
									"    responseInstanceId = responseInstanceId.toString();\r",
									"    responseInstanceId = responseInstanceId.split(\"/\");\r",
									"    responseInstanceId = responseInstanceId[1];\r",
									"    pm.expect(responseInstanceId).to.equal(envInstanceId);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET active Instances",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"App Api - Instances - Get app instance by ID - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/active",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"active"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT substatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User cannot updated sub status - Status - 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"label\": \"abc\",\r\n  \"description\": \"teklls tests\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/substatus",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"substatus"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Instance by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}?hard=false",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}"
							],
							"query": [
								{
									"key": "hard",
									"value": "false"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Simple instantiation with prefill",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 201)\r",
									"{\r",
									"    var jsonData = pm.response.json();\r",
									"    if(pm.expect(jsonData.instanceOwnerId).not.eql(null))\r",
									"    {\r",
									"        pm.environment.set('instanceOwnerId', jsonData.instanceOwner.partyId);\r",
									"        var instanceId = jsonData.id;\r",
									"        instanceId = instanceId.toString();\r",
									"        instanceId = instanceId.split('/');\r",
									"        instanceId = instanceId[1];\r",
									"        pm.environment.set('instanceId',instanceId);\r",
									"        var dataId = jsonData.data[0].id;\r",
									"        pm.environment.set('dataGuid',dataId);\r",
									"    }\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"instanceOwner\": {\r\n        \"partyId\": \"{{instanceOwnerId}}\"\r\n    },    \r\n    \"prefill\": {\r\n    \"email\": \"test@test.com\"\r\n  }    \r\n}"
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/create",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"create"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Data",
			"item": [
				{
					"name": "GET Form Data by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"App Api - Data - Get Form Data by id - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/data/{{dataGuid}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"data",
								"{{dataGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Edit Form Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"App Api - Data - Edit Form Data - Status - 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    var jsonData = pm.response.json();\r",
									"    var envDataId = pm.environment.get(\"dataGuid\");\r",
									"    pm.expect(jsonData.id).to.equal(envDataId);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\"?>\r\n<Skjema xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" skjemanummer=\"1472\" spesifikasjonsnummer=\"9812\" blankettnummer=\"AFP-01\" tittel=\"Arbeidsgiverskjema AFP\" gruppeid=\"8818\">\r\n  <OpplysningerOmArbeidstakeren-grp-8819 gruppeid=\"8819\">\r\n    <Skjemainstans-grp-8854 gruppeid=\"8854\">\r\n      <Journalnummer-datadef-33316 orid=\"33316\">9827</Journalnummer-datadef-33316>\r\n    </Skjemainstans-grp-8854>\r\n  </OpplysningerOmArbeidstakeren-grp-8819>\r\n</Skjema>"
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/data/{{dataGuid}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"data",
								"{{dataGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Form Data - Negative",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"App Api - Data - Delete Form Data - Status - 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\"?>\r\n<Enkeltpersonforetakregistrering xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n    <UserFirstName>45678</UserFirstName>\r\n</Enkeltpersonforetakregistrering>"
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/data/{{dataGuid}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"data",
								"{{dataGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Add attachment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"App Api - Data - Add attachment - Status - 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    var jsonData = pm.response.json();\r",
									"    if(pm.expect(jsonData.id).not.eql(null))\r",
									"    {\r",
									"        pm.environment.set('dataGuid', jsonData.id);\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"dataGuid\",\"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Disposition",
								"name": "Content-Type",
								"value": "attachment; filename=test.pdf",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/octet-stream",
								"type": "text"
							}
						],
						"body": {
							"mode": "file",
							"file": {
								"src": "/C:/Repos/altinn-studio/src/test/Postman/test_file_pdf.pdf"
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/data?dataType={{attachmentElementType}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"data"
							],
							"query": [
								{
									"key": "dataType",
									"value": "{{attachmentElementType}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Attachment Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"App Api - Data - Get Attachment Data - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    var responseHeader = pm.response.headers.get(\"Content-Disposition\");\r",
									"    responseHeader = responseHeader.toString();\r",
									"    pm.expect(responseHeader).to.have.string('test.pdf');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/data/{{dataGuid}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"data",
								"{{dataGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Edit Attachment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"App Api - Data - Edit Attachment Data - Status - 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    var jsonData = pm.response.json();\r",
									"    var envDataId = pm.environment.get(\"dataGuid\");\r",
									"    pm.expect(jsonData.id).to.equal(envDataId);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/octet-stream"
							},
							{
								"key": "Content-Disposition",
								"value": "attachment; filename=test12.pdf",
								"type": "text"
							}
						],
						"body": {
							"mode": "file",
							"file": {
								"src": "test_file_pdf.pdf"
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/data/{{dataGuid}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"data",
								"{{dataGuid}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Datatags",
			"item": [
				{
					"name": "Create data tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"App Api - Data tags - create - status - 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\"åøæ\"",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/data/{{dataGuid}}/tags",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"data",
								"{{dataGuid}}",
								"tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get data tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"App Api - Data tags - get - status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/data/{{dataGuid}}/tags",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"data",
								"{{dataGuid}}",
								"tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete data tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"App Api - Data tags - delete - status - 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/data/{{dataGuid}}/tags/åøæ",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"data",
								"{{dataGuid}}",
								"tags",
								"åøæ"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Process",
			"item": [
				{
					"name": "POST Start Process again - Negative",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"App Api - Process - Start Process again - negative test - Status - 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"    pm.expect(pm.response.text()).contains('Process is already started');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/process/start",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"process",
								"start"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Current Process",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"App Api - Process - Get Current Process - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    var elementId = pm.response.json().currentTask.elementId;\r",
									"    pm.environment.set(\"processElementId\",elementId);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/process",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"process"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Move process to same element  - Negative",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"App Api - Process - Start Process again - negative test - Status - 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"    pm.expect(pm.response.text()).contains('Cannot change process');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/process/next?elementId={{processElementId}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"process",
								"next"
							],
							"query": [
								{
									"key": "elementId",
									"value": "{{processElementId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Next Process",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"App Api - Process - Get Next Process - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    var jsonData = pm.response.json();\r",
									"    var nextProcessElementId = jsonData[0];\r",
									"    pm.environment.set(\"processElementId\", nextProcessElementId);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/process/next",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"process",
								"next"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Complete Process",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"App Api - Instances - Complete process - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/process/completeprocess",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"process",
								"completeprocess"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Complete Process again - Negative",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"App Api - Instances - Complete process again - negative test - Status - 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"    pm.expect(pm.response.text()).contains(\"cannot be restarted\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/process/completeProcess",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"process",
								"completeProcess"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Process history",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"App Api - Process - Get Process History - Status - 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/process/history",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"process",
								"history"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Multipart",
			"item": [
				{
					"name": "POST Create Instances with mulipart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"App Api - Instances - Create app instance with multipart data - Status - 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    if (pm.response.code == 201)\r",
									"    {\r",
									"        var jsonData = pm.response.json();\r",
									"        if(pm.expect(jsonData.instanceOwnerId).not.eql(null))\r",
									"        {\r",
									"            var instanceId = jsonData.id;\r",
									"            instanceId = instanceId.toString();\r",
									"            instanceId = instanceId.split('/');\r",
									"            instanceId = instanceId[1];\r",
									"            pm.environment.set('instanceId',instanceId);\r",
									"        }\r",
									"        if (pm.expect(jsonData.data[0].id).not.eql(null))\r",
									"        {\r",
									"            var dataId = jsonData.data[0].id;\r",
									"            pm.environment.set('dataGuid',dataId);\r",
									"        }\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"instanceId\",\"\");",
									"pm.environment.set(\"dataGuid\",\"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "multipart/form-data; boundary=\"abcdefg\"",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "--abcdefg\r\nContent-Type: application/json; charset=utf-8\r\nContent-Disposition: form-data; name=\"instance\"\r\n\r\n{\r\n    \"instanceOwner\": {\r\n        \"personNumber\": \"{{SSN}}\"\r\n    }\r\n}\r\n\r\n--abcdefg\r\nContent-Type: application/xml\r\nContent-Disposition: form-data; name=\"default\"\r\n\r\n<?xml version=\"1.0\"?>\r\n<Skjema xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" skjemanummer=\"1472\" spesifikasjonsnummer=\"9812\" blankettnummer=\"AFP-01\" tittel=\"Arbeidsgiverskjema AFP\" gruppeid=\"8818\">\r\n  <OpplysningerOmArbeidstakeren-grp-8819 gruppeid=\"8819\">\r\n    <Skjemainstans-grp-8854 gruppeid=\"8854\">\r\n      <Journalnummer-datadef-33316 orid=\"33316\">9827</Journalnummer-datadef-33316>\r\n    </Skjemainstans-grp-8854>\r\n  </OpplysningerOmArbeidstakeren-grp-8819>\r\n</Skjema>\r\n\r\n--abcdefg--\r\n",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Multipart instance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"App Api - Instances - Get multipart app instance by ID - Status - 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"App Api - Instances - Get multipart app instance by ID - Content - matches\", function() {",
									"    var jsonData = pm.response.json();",
									"    var envInstanceId = pm.environment.get(\"instanceId\");",
									"    var responseInstanceId = jsonData.id;",
									"    responseInstanceId = responseInstanceId.toString();",
									"    responseInstanceId = responseInstanceId.split(\"/\");",
									"    responseInstanceId = responseInstanceId[1];",
									"    pm.expect(responseInstanceId).to.equal(envInstanceId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Form Data created by mulipart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"App Api - Data - GET Form Data created by mulipart - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/data/{{dataGuid}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"data",
								"{{dataGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create instance with  multipart attachment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"App Api - Instances - Create app instance with multipart data - Status - 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    if (pm.response.code == 201)\r",
									"    {\r",
									"        var jsonData = pm.response.json();\r",
									"        if(pm.expect(jsonData.instanceOwnerId).not.eql(null))\r",
									"        {\r",
									"            var instanceId = jsonData.id;\r",
									"            instanceId = instanceId.toString();\r",
									"            instanceId = instanceId.split('/');\r",
									"            instanceId = instanceId[1];\r",
									"            pm.environment.set('instanceId',instanceId);\r",
									"        }\r",
									"        if (pm.expect(jsonData.data[0].id).not.eql(null))\r",
									"        {\r",
									"            var dataId = jsonData.data[0].id;\r",
									"            pm.environment.set('dataGuid',dataId);\r",
									"        }\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"instanceId\",\"\");",
									"pm.environment.set(\"dataGuid\",\"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "multipart/form-data; boundary=\"abcdefg\"",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "--abcdefg\r\nContent-Type: application/json; charset=utf-8\r\nContent-Disposition: form-data; name=\"instance\"\r\n\r\n{\r\n    \"instanceOwner\": {\r\n        \"personNumber\": \"{{SSN}}\"\r\n    }\r\n}\r\n\r\n--abcdefg\r\nContent-Type: application/xml\r\nContent-Disposition: form-data; name=\"default\"\r\n\r\n<?xml version=\"1.0\"?>\r\n<Skjema xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" skjemanummer=\"1472\" spesifikasjonsnummer=\"9812\" blankettnummer=\"AFP-01\" tittel=\"Arbeidsgiverskjema AFP\" gruppeid=\"8818\">\r\n  <OpplysningerOmArbeidstakeren-grp-8819 gruppeid=\"8819\">\r\n    <Skjemainstans-grp-8854 gruppeid=\"8854\">\r\n      <Journalnummer-datadef-33316 orid=\"33316\">9827</Journalnummer-datadef-33316>\r\n    </Skjemainstans-grp-8854>\r\n  </OpplysningerOmArbeidstakeren-grp-8819>\r\n</Skjema>\r\n\r\n--abcdefg\r\nContent-Type: application/octet-stream\r\nContent-Disposition: attachment; filename=\"test.xml\"; name=\"{{attachmentElementType}}\"\r\n\r\n<?xml version=\"1.0\"?>\r\n<Skjema xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" skjemanummer=\"1472\" spesifikasjonsnummer=\"9812\" blankettnummer=\"AFP-01\" tittel=\"Arbeidsgiverskjema AFP\" gruppeid=\"8818\">\r\n  <OpplysningerOmArbeidstakeren-grp-8819 gruppeid=\"8819\">\r\n    <Skjemainstans-grp-8854 gruppeid=\"8854\">\r\n      <Journalnummer-datadef-33316 orid=\"33316\">9827</Journalnummer-datadef-33316>\r\n    </Skjemainstans-grp-8854>\r\n  </OpplysningerOmArbeidstakeren-grp-8819>\r\n</Skjema>\r\n\r\n--abcdefg--\r\n",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "End2End Test",
			"item": [
				{
					"name": "POST Create Instance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 201)\r",
									"{\r",
									"    var jsonData = pm.response.json();\r",
									"    if(pm.expect(jsonData.instanceOwnerId).not.eql(null))\r",
									"    {\r",
									"        pm.environment.set('instanceOwnerId', jsonData.instanceOwner.partyId);\r",
									"        var instanceId = jsonData.id;\r",
									"        instanceId = instanceId.toString();\r",
									"        instanceId = instanceId.split('/');\r",
									"        instanceId = instanceId[1];\r",
									"        pm.environment.set('instanceId',instanceId);\r",
									"        var dataId = jsonData.data[0].id;\r",
									"        pm.environment.set('dataGuid',dataId);\r",
									"    }\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"instanceId\",\"\");",
									"pm.environment.set(\"dataGuid\",\"\");",
									"pm.environment.set(\"processElementId\",\"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances?instanceOwnerPartyId={{instanceOwnerId}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances"
							],
							"query": [
								{
									"key": "instanceOwnerPartyId",
									"value": "{{instanceOwnerId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Current Process",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"App Api - Process - Get Current Process - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    var jsonData = pm.response.json();\r",
									"    var elementId = jsonData.currentTask.elementId;\r",
									"    pm.environment.set(\"processElementId\", elementId);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/process",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"process"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Validate Instance - Not OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"App Api - Instances - Get Validate Instance - Not OK - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"App Api - Instances - Get Validate Instance - Not OK - Content - Matches\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData[0].code).to.equal(\"TooFewDataElementsOfType\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/validate",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"validate"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Edit Form Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code == 201)\r",
									"{\r",
									"    var jsonData = pm.response.json();\r",
									"    var dataGuid = pm.environment.get(\"dataGuid\");\r",
									"    pm.expect(jsonData.id).to.equal(dataGuid);\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/xml",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\"?>\r\n<Skjema xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" skjemanummer=\"1472\" spesifikasjonsnummer=\"9812\" blankettnummer=\"AFP-01\" tittel=\"Arbeidsgiverskjema AFP\" gruppeid=\"8818\">\r\n  <OpplysningerOmArbeidstakeren-grp-8819 gruppeid=\"8819\">\r\n    <Skjemainstans-grp-8854 gruppeid=\"8854\">\r\n      <Journalnummer-datadef-33316 orid=\"33316\">9827</Journalnummer-datadef-33316>\r\n    </Skjemainstans-grp-8854>\r\n  </OpplysningerOmArbeidstakeren-grp-8819>\r\n</Skjema>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/data/{{dataGuid}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"data",
								"{{dataGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Add Big attachment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code == 201)\r",
									"{\r",
									"    var jsonData = pm.response.json();\r",
									"    if(pm.expect(jsonData.id).not.eql(null))\r",
									"    {\r",
									"        pm.environment.set('dataGuid', jsonData.id);\r",
									"    }\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"dataGuid\",\"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Disposition",
								"name": "Content-Type",
								"value": "attachment; filename=test.txt",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/octet-stream",
								"type": "text"
							}
						],
						"body": {
							"mode": "file",
							"file": {
								"src": "/C:/Repos/altinn-studio/src/test/Postman/test_file_morethan_1mb.txt"
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/data?dataType={{attachmentElementType}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"data"
							],
							"query": [
								{
									"key": "dataType",
									"value": "{{attachmentElementType}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Validate Data - Not OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"App Api - Instances - Get Validate Instance Data - Not OK - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"App Api - Instances - Get Validate Instance Data - Not OK - Content - Matches\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData[0].code).to.equal(\"DataElementTooLarge\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/data/{{dataGuid}}/validate",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"data",
								"{{dataGuid}}",
								"validate"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Big Attachment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/octet-stream"
							}
						],
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/data/{{dataGuid}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"data",
								"{{dataGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Add attachment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code == 201)\r",
									"{\r",
									"    var jsonData = pm.response.json();\r",
									"    if(pm.expect(jsonData.id).not.eql(null))\r",
									"    {\r",
									"        pm.environment.set('dataGuid', jsonData.id);\r",
									"    }\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"dataGuid\",\"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Disposition",
								"name": "Content-Type",
								"type": "text",
								"value": "attachment; filename=\"arq - Copy (20).pdf\""
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/pdf"
							},
							{
								"key": "Content-Type",
								"value": "text/xml",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "file",
							"file": {
								"src": "attachment       ۝܏ ﾟ･✿ヾ╲(｡◕‿◕｡)╱✿･ﾟ Powerلُلُصّبُلُلصّبُررً ॣ.pdf"
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/data?dataType={{attachmentElementType}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"data"
							],
							"query": [
								{
									"key": "dataType",
									"value": "{{attachmentElementType}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Validate Data - OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"App Api - Instances - Get Validate Instance Data - OK - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"App Api - Instances - Get Validate Instance Data - OK - Content - Matches\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.empty;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/data/{{dataGuid}}/validate",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"data",
								"{{dataGuid}}",
								"validate"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Validate Instance - OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"App Api - Instances - Get Validate Instance - OK - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"App Api - Instances - Get Validate Instance - OK - Content - Matches\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.empty;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/validate",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"validate"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Next Process",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"App Api - E2E Test - Get Next Process - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    var jsonData = pm.response.json();\r",
									"    var nextProcessElementId = jsonData[0];\r",
									"    pm.environment.set(\"processElementId\", nextProcessElementId);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"processElementId\",\"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/process/next",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"process",
								"next"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Move to Next Process",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"App Api - Process - next process - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/process/next",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"process",
								"next"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Instance by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Copy archived instance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 201)\r",
									"{\r",
									"    var jsonData = pm.response.json();\r",
									"    if(pm.expect(jsonData.instanceOwnerId).not.eql(null))\r",
									"    {\r",
									"        pm.environment.set('instanceOwnerId', jsonData.instanceOwner.partyId);\r",
									"        var instanceId = jsonData.id;\r",
									"        instanceId = instanceId.toString();\r",
									"        instanceId = instanceId.split('/');\r",
									"        instanceId = instanceId[1];\r",
									"        pm.environment.set('instanceId',instanceId);\r",
									"        var dataId = jsonData.data[0].id;\r",
									"        pm.environment.set('dataGuid',dataId);\r",
									"    }\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"instanceOwner\": {\r\n        \"partyId\": \"{{instanceOwnerId}}\"\r\n    },\r\n    \"sourceInstanceId\": \"{{instanceOwnerId}}/{{instanceId}}\"\r\n}"
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/create",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"create"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Redirect",
			"item": [
				{
					"name": "Validate redirect url",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/api/v1/redirect?url=https%3A%2F%2Fttd.apps.{{envUrl}}%2Fttd%2Fapps-test%2F%23%2Finstance%2F50013135%2Fde57cab8-4e46-49b8-8dcf-7c8d86ddeaeb",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"api",
								"v1",
								"redirect"
							],
							"query": [
								{
									"key": "url",
									"value": "https://altinn3local.no",
									"disabled": true
								},
								{
									"key": "url",
									"value": "https://.apps.at21.altinn.cloud",
									"disabled": true
								},
								{
									"key": "url",
									"value": "https%3A%2F%2Fttd.apps.{{envUrl}}%2Fttd%2Fapps-test%2F%23%2Finstance%2F50013135%2Fde57cab8-4e46-49b8-8dcf-7c8d86ddeaeb"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Stateless",
			"item": [
				{
					"name": "POST create stateless data",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "party",
								"value": "partyid:{{instanceOwnerId}}",
								"type": "text"
							},
							{
								"key": "party",
								"value": "person:{{SSN}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "party",
								"value": "org:{{orgNr}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\"?>\r\n<Skjema xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" skjemanummer=\"1472\" spesifikasjonsnummer=\"9812\" blankettnummer=\"AFP-01\" tittel=\"Arbeidsgiverskjema AFP\" gruppeid=\"8818\">\r\n  <OpplysningerOmArbeidstakeren-grp-8819 gruppeid=\"8819\">\r\n    <Skjemainstans-grp-8854 gruppeid=\"8854\">\r\n      <Journalnummer-datadef-33316 orid=\"33316\">98274</Journalnummer-datadef-33316>\r\n      <IdentifikasjonsnummerKrav-datadef-33317>1337</IdentifikasjonsnummerKrav-datadef-33317>\r\n    </Skjemainstans-grp-8854>\r\n  </OpplysningerOmArbeidstakeren-grp-8819>\r\n</Skjema>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/v1/data?dataType=default",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"v1",
								"data"
							],
							"query": [
								{
									"key": "dataType",
									"value": "default"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET stateless data",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "party",
								"value": "person:{{SSN}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "party",
								"value": "org:{{orgNr}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "party",
								"value": "partyid:{{instanceOwnerId}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\"?>\r\n<Skjema xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" skjemanummer=\"1472\" spesifikasjonsnummer=\"9812\" blankettnummer=\"AFP-01\" tittel=\"Arbeidsgiverskjema AFP\" gruppeid=\"8818\">\r\n  <OpplysningerOmArbeidstakeren-grp-8819 gruppeid=\"8819\">\r\n    <Skjemainstans-grp-8854 gruppeid=\"8854\">\r\n      <Journalnummer-datadef-33316 orid=\"33316\">98274</Journalnummer-datadef-33316>\r\n      <IdentifikasjonsnummerKrav-datadef-33317>1337</IdentifikasjonsnummerKrav-datadef-33317>\r\n    </Skjemainstans-grp-8854>\r\n  </OpplysningerOmArbeidstakeren-grp-8819>\r\n</Skjema>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/v1/data?dataType=default",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"v1",
								"data"
							],
							"query": [
								{
									"key": "dataType",
									"value": "default"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "UI",
			"item": [
				{
					"name": "Authenticate user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var current_timestamp = new Date();\r",
									"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const jar = pm.cookies.jar();",
									"var domain = pm.environment.get(\"envUrl\");",
									"jar.clear(domain, function (error){",
									"    if(error)",
									"    {",
									"        console.log(\"error\",error);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/hal+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"UserName\": \"{{testUserName}}\",\r\n    \"UserPassword\": \"{{testUserPassword}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{envUrl}}/api/authentication/authenticatewithpassword",
							"protocol": "https",
							"host": [
								"{{envUrl}}"
							],
							"path": [
								"api",
								"authentication",
								"authenticatewithpassword"
							]
						}
					},
					"response": []
				},
				{
					"name": "messagebox/search",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "ElementSearch.Title",
									"value": "test appli",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{envUrl}}/ui/messagebox/search",
							"protocol": "https",
							"host": [
								"{{envUrl}}"
							],
							"path": [
								"ui",
								"messagebox",
								"search"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}
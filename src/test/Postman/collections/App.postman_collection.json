{
	"info": {
		"_postman_id": "f5ccfcdf-441a-4513-bea0-8dd2816ed48e",
		"name": "App",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "SetUp Cookies",
			"item": [
				{
					"name": "Authenticate user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "405f0af9-b1dd-42cb-acad-8835c9f15dd3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b4c59095-e73f-4b65-9290-a748b25c7357",
								"exec": [
									"const jar = pm.cookies.jar();",
									"var domain = pm.environment.get(\"envUrl\");",
									"jar.clear(domain, function (error){",
									"    if(error)",
									"    {",
									"        console.log(\"error\",error);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/hal+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"UserName\": \"{{testUserName}}\",\r\n    \"UserPassword\": \"{{testUserPassword}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{envUrl}}/api/authentication/authenticatewithpassword",
							"protocol": "https",
							"host": [
								"{{envUrl}}"
							],
							"path": [
								"api",
								"authentication",
								"authenticatewithpassword"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Runtime Cookie",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://platform.{{envUrl}}/authentication/api/v1/authentication?goto=https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/",
							"protocol": "https",
							"host": [
								"platform",
								"{{envUrl}}"
							],
							"path": [
								"authentication",
								"api",
								"v1",
								"authentication"
							],
							"query": [
								{
									"key": "goto",
									"value": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Party Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6505cb59-4588-4d0c-af60-b5faa7dcb8c1",
								"exec": [
									"if(pm.response.code == 200)",
									"{",
									"    var jsonData = pm.response.json();",
									"    var partyId = jsonData.partyId;",
									"    pm.environment.set(\"instanceOwnerId\",partyId);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/api/v1/profile/user",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"api",
								"v1",
								"profile",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AttachmentType Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ce37f250-8e44-4034-9ec3-b9ee5feac332",
								"exec": [
									"if (pm.response.code == 200) {\r",
									"    var jsonData = pm.response.json();\r",
									"    var dataTypes = jsonData.dataTypes;\r",
									"    var dataTypesCount = dataTypes.length;\r",
									"    for(var i=0; i<dataTypesCount; i++){\r",
									"        if (dataTypes[i].id !== \"default\" && dataTypes[i].id !== \"ref-data-as-pdf\"){\r",
									"            pm.environment.set(\"attachmentElementType\", dataTypes[i].id);\r",
									"            break;\r",
									"        }\r",
									"    }\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://platform.{{envUrl}}/storage/api/v1/applications/{{org}}/{{app}}",
							"protocol": "https",
							"host": [
								"platform",
								"{{envUrl}}"
							],
							"path": [
								"storage",
								"api",
								"v1",
								"applications",
								"{{org}}",
								"{{app}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Instances",
			"item": [
				{
					"name": "POST Create Instances",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "41557434-30fd-44d6-b2fa-6248c0635824",
								"exec": [
									"pm.test(\"Runtime - Instances - Add app instance - Status - 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    var jsonData = pm.response.json();\r",
									"    if(pm.expect(jsonData.instanceOwnerId).not.eql(null))\r",
									"    {\r",
									"        pm.environment.set('instanceOwnerId', jsonData.instanceOwner.partyId);\r",
									"        var instanceId = jsonData.id;\r",
									"        instanceId = instanceId.toString();\r",
									"        instanceId = instanceId.split('/');\r",
									"        instanceId = instanceId[1];\r",
									"        var dataId = jsonData.data[0].id;\r",
									"        pm.environment.set('instanceId',instanceId);\r",
									"        pm.environment.set('dataGuid',dataId);\r",
									"        var processElementId = jsonData.process.currentTask.elementId;\r",
									"        pm.environment.set(\"processElementId\",processElementId);\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f6eb3baa-0d7d-4224-b967-4fa09e1e8570",
								"exec": [
									"pm.environment.set(\"instanceId\",\"\");",
									"pm.environment.set(\"dataGuid\",\"\");",
									"pm.environment.set(\"processElementId\",\"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instanceOwner\": {\n    \t\"partyId\": \"{{instanceOwnerId}}\"\n    },\n    \"appOwner\":{\n    \t\"labels\" : [ \"gr\", \"x2\" ]\n    },\n    \"appId\" : \"{{org}}/{{app}}\",\n    \"dueBefore\": \"2019-06-01T12:00:00Z\",\n    \"visibleAfter\": \"2019-05-20T00:00:00Z\",\n    \"title\": { \"nb\": \"Arbeidsmelding\" }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Instance by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8f68df12-4c76-469e-9d25-970fc02a5a08",
								"exec": [
									"pm.test(\"Runtime - Instances - Get app instance by ID - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Runtime - Instances - Get app instance by ID - Content - matches\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var envInstanceId = pm.environment.get(\"instanceId\");\r",
									"    var responseInstanceId = jsonData.id;\r",
									"    responseInstanceId = responseInstanceId.toString();\r",
									"    responseInstanceId = responseInstanceId.split(\"/\");\r",
									"    responseInstanceId = responseInstanceId[1];\r",
									"    pm.expect(responseInstanceId).to.equal(envInstanceId);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Edit Instance",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "49c4d8df-75ca-450e-be67-db55129f6ecc",
								"exec": [
									"pm.test(\"Runtime - Instances - Get app instance by ID - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"{{instanceOwnerId}}/{{instanceId}}\",\r\n    \"instanceOwner\": {\r\n        \"partyId\": \"{{instanceOwnerId}}\"\r\n    },\r\n    \"appId\": \"{{org}}/{{app}}\",\r\n    \"org\": \"{{org}}\",\r\n    \"dueBefore\": \"2019-06-01T12:00:00Z\",\r\n    \"visibleAfter\": \"2019-05-20T00:00:00Z\",\r\n    \"title\": {\r\n        \"nb\": \"Arbeidsmelding\"\r\n    },\r\n    \"appOwner\": {\r\n        \"labels\": [\r\n            \"gr\",\r\n            \"asdf\"\r\n        ],\r\n        \"messages\": null,\r\n        \"canBeDeletedAfter\": null\r\n    },\r\n    \"data\": [],\r\n    \"created\": \"2019-11-26T09:59:49.3923233Z\",\r\n    \"createdBy\": null,\r\n    \"lastChanged\": \"2019-11-26T09:59:49.3923233Z\",\r\n    \"lastChangedBy\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Data",
			"item": [
				{
					"name": "GET Form Data by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e7bec04f-fad2-4065-8dd0-93aa98d2e734",
								"exec": [
									"pm.test(\"Runtime - Data - Get Form Data by id - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/data/{{dataGuid}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"data",
								"{{dataGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Edit Form Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "68318696-e879-4d73-ac94-439390675fac",
								"exec": [
									"pm.test(\"Runtime - Data - Edit Form Data - Status - 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    var jsonData = pm.response.json();\r",
									"    var envDataId = pm.environment.get(\"dataGuid\");\r",
									"    pm.expect(jsonData.id).to.equal(envDataId);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\"?>\r\n<Skjema xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" skjemanummer=\"1472\" spesifikasjonsnummer=\"9812\" blankettnummer=\"AFP-01\" tittel=\"Arbeidsgiverskjema AFP\" gruppeid=\"8818\">\r\n  <OpplysningerOmArbeidstakeren-grp-8819 gruppeid=\"8819\">\r\n    <Skjemainstans-grp-8854 gruppeid=\"8854\">\r\n      <Journalnummer-datadef-33316 orid=\"33316\">9827</Journalnummer-datadef-33316>\r\n    </Skjemainstans-grp-8854>\r\n  </OpplysningerOmArbeidstakeren-grp-8819>\r\n</Skjema>"
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/data/{{dataGuid}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"data",
								"{{dataGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Form Data - Negative",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e2d79115-5c93-41c9-b60f-8fc17eaa1f2d",
								"exec": [
									"pm.test(\"Runtime - Data - Delete Form Data - Status - 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\"?>\r\n<Enkeltpersonforetakregistrering xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n    <UserFirstName>45678</UserFirstName>\r\n</Enkeltpersonforetakregistrering>"
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/data/{{dataGuid}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"data",
								"{{dataGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Add attachment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8c637fd5-88b9-4aec-9bdc-d6a566a131e1",
								"exec": [
									"pm.test(\"Runtime - Data - Add attachment - Status - 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    var jsonData = pm.response.json();\r",
									"    if(pm.expect(jsonData.id).not.eql(null))\r",
									"    {\r",
									"        pm.environment.set('dataGuid', jsonData.id);\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f85f4f38-bb39-474e-be7c-e1e8c490c222",
								"exec": [
									"pm.environment.set(\"dataGuid\",\"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Disposition",
								"name": "Content-Type",
								"value": "attachment; filename=test.pdf",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/octet-stream",
								"type": "text"
							}
						],
						"body": {
							"mode": "file",
							"file": {
								"src": "test_file_pdf.pdf"
							},
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/data?dataType={{attachmentElementType}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"data"
							],
							"query": [
								{
									"key": "dataType",
									"value": "{{attachmentElementType}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Attachment Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e7bec04f-fad2-4065-8dd0-93aa98d2e734",
								"exec": [
									"pm.test(\"Runtime - Data - Get Attachment Data - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    var responseHeader = pm.response.headers.get(\"Content-Disposition\");\r",
									"    responseHeader = responseHeader.toString();\r",
									"    pm.expect(responseHeader).to.have.string('test.pdf');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/data/{{dataGuid}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"data",
								"{{dataGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Edit Attachment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "68318696-e879-4d73-ac94-439390675fac",
								"exec": [
									"pm.test(\"Runtime - Data - Edit Attachment Data - Status - 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    var jsonData = pm.response.json();\r",
									"    var envDataId = pm.environment.get(\"dataGuid\");\r",
									"    pm.expect(jsonData.id).to.equal(envDataId);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/octet-stream"
							},
							{
								"key": "Content-Disposition",
								"value": "attachment; filename=test12.pdf",
								"type": "text"
							}
						],
						"body": {
							"mode": "file",
							"file": {
								"src": "test_file_pdf.pdf"
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/data/{{dataGuid}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"data",
								"{{dataGuid}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Process",
			"item": [
				{
					"name": "POST Start Process again - Negative",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "709bf4db-92f0-4803-b802-cd5605187d00",
								"exec": [
									"pm.test(\"Runtime - Process - Start Process again - negative test - Status - 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"    pm.expect(pm.response.text()).contains('Process is already started');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/process/start",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"process",
								"start"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Current Process",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e57feb48-7aed-48de-bb57-ed220bb65e9d",
								"exec": [
									"pm.test(\"Runtime - Process - Get Current Process - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    var elementId = pm.response.json().currentTask.elementId;\r",
									"    pm.environment.set(\"processElementId\",elementId);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/process",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"process"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Move process to same element  - Negative",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a4bf7083-3188-447c-aafe-64b383b1693a",
								"exec": [
									"pm.test(\"Runtime - Process - Start Process again - negative test - Status - 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"    pm.expect(pm.response.text()).contains('Cannot change process');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/process/next?elementId={{processElementId}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"process",
								"next"
							],
							"query": [
								{
									"key": "elementId",
									"value": "{{processElementId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Next Process",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ebe6fdbe-764b-4809-93f3-7869055f3f52",
								"exec": [
									"pm.test(\"Runtime - Process - Get Next Process - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    var jsonData = pm.response.json();\r",
									"    var nextProcessElementId = jsonData[0];\r",
									"    pm.environment.set(\"processElementId\", nextProcessElementId);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/process/next",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"process",
								"next"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Complete Process",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "96a3194f-30c7-42c6-9a0d-5deef80d7d44",
								"exec": [
									"pm.test(\"Runtime - Instances - Complete process - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/process/completeProcess",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"process",
								"completeProcess"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Complete Process again - Negative",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "96a3194f-30c7-42c6-9a0d-5deef80d7d44",
								"exec": [
									"pm.test(\"Runtime - Instances - Complete process again - negative test - Status - 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"    pm.expect(pm.response.text()).contains(\"cannot be restarted\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/process/completeProcess",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"process",
								"completeProcess"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Multipart",
			"item": [
				{
					"name": "POST Create Instances with mulipart",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3815326-b103-4737-9025-ee4f947dd1c0",
								"exec": [
									"pm.test(\"Runtime - Instances - Create app instance with multipart data - Status - 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    if (pm.response.code == 201)\r",
									"    {\r",
									"        var jsonData = pm.response.json();\r",
									"        if(pm.expect(jsonData.instanceOwnerId).not.eql(null))\r",
									"        {\r",
									"            var instanceId = jsonData.id;\r",
									"            instanceId = instanceId.toString();\r",
									"            instanceId = instanceId.split('/');\r",
									"            instanceId = instanceId[1];\r",
									"            pm.environment.set('instanceId',instanceId);\r",
									"        }\r",
									"        if (pm.expect(jsonData.data[0].id).not.eql(null))\r",
									"        {\r",
									"            var dataId = jsonData.data[0].id;\r",
									"            pm.environment.set('dataGuid',dataId);\r",
									"        }\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "988e199b-4635-4921-9809-0be0197b3d4b",
								"exec": [
									"pm.environment.set(\"instanceId\",\"\");",
									"pm.environment.set(\"dataGuid\",\"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "multipart/form-data; boundary=\"abcdefg\"",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "--abcdefg\r\nContent-Type: application/json; charset=utf-8\r\nContent-Disposition: form-data; name=\"instance\"\r\n\r\n{\r\n    \"instanceOwner\": {\r\n    \t\"partyId\": \"{{instanceOwnerId}}\"\r\n    }\r\n}\r\n\r\n--abcdefg\r\nContent-Type: application/xml\r\nContent-Disposition: form-data; name=\"default\"\r\n\r\n<?xml version=\"1.0\"?>\r\n<Skjema xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" skjemanummer=\"1472\" spesifikasjonsnummer=\"9812\" blankettnummer=\"AFP-01\" tittel=\"Arbeidsgiverskjema AFP\" gruppeid=\"8818\">\r\n  <OpplysningerOmArbeidstakeren-grp-8819 gruppeid=\"8819\">\r\n    <Skjemainstans-grp-8854 gruppeid=\"8854\">\r\n      <Journalnummer-datadef-33316 orid=\"33316\">98274</Journalnummer-datadef-33316>\r\n    </Skjemainstans-grp-8854>\r\n  </OpplysningerOmArbeidstakeren-grp-8819>\r\n</Skjema>\r\n\r\n--abcdefg--",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Multipart instance",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8f68df12-4c76-469e-9d25-970fc02a5a08",
								"exec": [
									"pm.test(\"Runtime - Instances - Get multipart app instance by ID - Status - 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Runtime - Instances - Get multipart app instance by ID - Content - matches\", function() {",
									"    var jsonData = pm.response.json();",
									"    var envInstanceId = pm.environment.get(\"instanceId\");",
									"    var responseInstanceId = jsonData.id;",
									"    responseInstanceId = responseInstanceId.toString();",
									"    responseInstanceId = responseInstanceId.split(\"/\");",
									"    responseInstanceId = responseInstanceId[1];",
									"    pm.expect(responseInstanceId).to.equal(envInstanceId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Form Data created by mulipart",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e7bec04f-fad2-4065-8dd0-93aa98d2e734",
								"exec": [
									"pm.test(\"Runtime - Data - GET Form Data created by mulipart - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/data/{{dataGuid}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"data",
								"{{dataGuid}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "End2End Test",
			"item": [
				{
					"name": "POST Create Instance",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "41557434-30fd-44d6-b2fa-6248c0635824",
								"exec": [
									"if(pm.response.code == 201)\r",
									"{\r",
									"    var jsonData = pm.response.json();\r",
									"    if(pm.expect(jsonData.instanceOwnerId).not.eql(null))\r",
									"    {\r",
									"        pm.environment.set('instanceOwnerId', jsonData.instanceOwner.partyId);\r",
									"        var instanceId = jsonData.id;\r",
									"        instanceId = instanceId.toString();\r",
									"        instanceId = instanceId.split('/');\r",
									"        instanceId = instanceId[1];\r",
									"        pm.environment.set('instanceId',instanceId);\r",
									"        var dataId = jsonData.data[0].id;\r",
									"        pm.environment.set('dataGuid',dataId);\r",
									"    }\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "9c84f949-10f6-4b99-a342-b7cb58641ee2",
								"exec": [
									"pm.environment.set(\"instanceId\",\"\");",
									"pm.environment.set(\"dataGuid\",\"\");",
									"pm.environment.set(\"processElementId\",\"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances?instanceOwnerPartyId={{instanceOwnerId}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances"
							],
							"query": [
								{
									"key": "instanceOwnerPartyId",
									"value": "{{instanceOwnerId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Current Process",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e57feb48-7aed-48de-bb57-ed220bb65e9d",
								"exec": [
									"pm.test(\"Runtime - Process - Get Current Process - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    var jsonData = pm.response.json();\r",
									"    var elementId = jsonData.currentTask.elementId;\r",
									"    pm.environment.set(\"processElementId\", elementId);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/process",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"process"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Validate Instance - Not OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8f68df12-4c76-469e-9d25-970fc02a5a08",
								"exec": [
									"pm.test(\"Runtime - Instances - Get Validate Instance - Not OK - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Runtime - Instances - Get Validate Instance - Not OK - Content - Matches\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData[0].code).to.equal(\"TooFewDataElementsOfType\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/validate",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"validate"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Edit Form Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dd484dcc-cd50-417c-9601-7b971fe28e68",
								"exec": [
									"if (pm.response.code == 201)\r",
									"{\r",
									"    var jsonData = pm.response.json();\r",
									"    var dataGuid = pm.environment.get(\"dataGuid\");\r",
									"    pm.expect(jsonData.id).to.equal(dataGuid);\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/xml",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\"?>\n<Skjema xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" skjemanummer=\"1472\" spesifikasjonsnummer=\"9812\" blankettnummer=\"AFP-01\" tittel=\"Arbeidsgiverskjema AFP\" gruppeid=\"8818\">\n  <OpplysningerOmArbeidstakeren-grp-8819 gruppeid=\"8819\">\n    <Skjemainstans-grp-8854 gruppeid=\"8854\">\n      <Journalnummer-datadef-33316 orid=\"33316\">9827</Journalnummer-datadef-33316>\n    </Skjemainstans-grp-8854>\n  </OpplysningerOmArbeidstakeren-grp-8819>\n</Skjema>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/data/{{dataGuid}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"data",
								"{{dataGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Add Big attachment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8c637fd5-88b9-4aec-9bdc-d6a566a131e1",
								"exec": [
									"if (pm.response.code == 201)\r",
									"{\r",
									"    var jsonData = pm.response.json();\r",
									"    if(pm.expect(jsonData.id).not.eql(null))\r",
									"    {\r",
									"        pm.environment.set('dataGuid', jsonData.id);\r",
									"    }\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8b357a9c-1e75-4e16-9a00-8bf5a8654005",
								"exec": [
									"pm.environment.set(\"dataGuid\",\"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Disposition",
								"name": "Content-Type",
								"value": "attachment; filename=test.txt",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/octet-stream",
								"type": "text"
							}
						],
						"body": {
							"mode": "file",
							"file": {
								"src": "test_file_morethan_1mb.txt"
							},
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/data?dataType={{attachmentElementType}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"data"
							],
							"query": [
								{
									"key": "dataType",
									"value": "{{attachmentElementType}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Validate Data - Not OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e7bec04f-fad2-4065-8dd0-93aa98d2e734",
								"exec": [
									"pm.test(\"Runtime - Instances - Get Validate Instance Data - Not OK - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Runtime - Instances - Get Validate Instance Data - Not OK - Content - Matches\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData[0].code).to.equal(\"DataElementTooLarge\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/data/{{dataGuid}}/validate",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"data",
								"{{dataGuid}}",
								"validate"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Big Attachment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "68318696-e879-4d73-ac94-439390675fac",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/octet-stream"
							}
						],
						"body": {
							"mode": "file",
							"file": {
								"src": ""
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/data/{{dataGuid}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"data",
								"{{dataGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Add attachment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8c637fd5-88b9-4aec-9bdc-d6a566a131e1",
								"exec": [
									"if (pm.response.code == 201)\r",
									"{\r",
									"    var jsonData = pm.response.json();\r",
									"    if(pm.expect(jsonData.id).not.eql(null))\r",
									"    {\r",
									"        pm.environment.set('dataGuid', jsonData.id);\r",
									"    }\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "138fbc85-0369-4b13-8336-4f307a053e19",
								"exec": [
									"pm.environment.set(\"dataGuid\",\"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Disposition",
								"name": "Content-Type",
								"type": "text",
								"value": "attachment; filename=test.pdf"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/octet-stream"
							}
						],
						"body": {
							"mode": "file",
							"file": {
								"src": "test_file_pdf.pdf"
							},
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/data?dataType={{attachmentElementType}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"data"
							],
							"query": [
								{
									"key": "dataType",
									"value": "{{attachmentElementType}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Validate Data - OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e7bec04f-fad2-4065-8dd0-93aa98d2e734",
								"exec": [
									"pm.test(\"Runtime - Instances - Get Validate Instance Data - OK - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Runtime - Instances - Get Validate Instance Data - OK - Content - Matches\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.empty;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/data/{{dataGuid}}/validate",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"data",
								"{{dataGuid}}",
								"validate"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Validate Instance - OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8f68df12-4c76-469e-9d25-970fc02a5a08",
								"exec": [
									"pm.test(\"Runtime - Instances - Get Validate Instance - OK - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Runtime - Instances - Get Validate Instance - OK - Content - Matches\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.empty;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/validate",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"validate"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Next Process",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ebe6fdbe-764b-4809-93f3-7869055f3f52",
								"exec": [
									"pm.test(\"Runtime - E2E Test - Get Next Process - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    var jsonData = pm.response.json();\r",
									"    var nextProcessElementId = jsonData[0];\r",
									"    pm.environment.set(\"processElementId\", nextProcessElementId);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "54d89139-1280-4e3f-9918-2a7437d77c0e",
								"exec": [
									"pm.environment.set(\"processElementId\",\"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/process/next",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"process",
								"next"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Complete Process",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "96a3194f-30c7-42c6-9a0d-5deef80d7d44",
								"exec": [
									"pm.test(\"Runtime - Instances - Complete process - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/process/next",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"process",
								"next"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Instance by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8f68df12-4c76-469e-9d25-970fc02a5a08",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "CleanUp",
			"item": [
				{
					"name": "GET Instances by InstanceOwnerID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d46ea587-c309-4247-a8f5-4a36f278ff82",
								"exec": [
									"if (pm.response.code == 200)",
									"{",
									"    var jsonData = pm.response.json();",
									"    var instanceCount = jsonData.length;",
									"    if (instanceCount !== 0)",
									"    {",
									"        var instanceId = jsonData[0].id;",
									"        instanceId = instanceId.split('/');",
									"        instanceId = instanceId[1];",
									"        pm.environment.set('instanceId', instanceId);",
									"    }",
									"    else",
									"    {",
									"        postman.setNextRequest(\"DELETE App\");",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/hal+json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://platform.{{envUrl}}/storage/api/v1/instances/{{instanceOwnerId}}",
							"protocol": "https",
							"host": [
								"platform",
								"{{envUrl}}"
							],
							"path": [
								"storage",
								"api",
								"v1",
								"instances",
								"{{instanceOwnerId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "CleanUp App instances",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f0c6b00b-4213-4095-8a83-f9cf7cc5769e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"labels\" : [ \"gr\", \"asdf\" ],\r\n    \"appId\" : \"{{appId}}\",\r\n    \"dueDateTime\": \"2019-06-01T12:00:00Z\",\r\n    \"visibleDateTime\": \"2019-05-20T00:00:00Z\",\r\n    \"presentationField\": { \"nb\": \"Arbeidsmelding\" }\r\n}"
						},
						"url": {
							"raw": "https://platform.{{envUrl}}/storage/api/v1/instances/{{instanceOwnerId}}/{{instanceId}}?hard=true",
							"protocol": "https",
							"host": [
								"platform",
								"{{envUrl}}"
							],
							"path": [
								"storage",
								"api",
								"v1",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}"
							],
							"query": [
								{
									"key": "hard",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Check for more instances",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d46ea587-c309-4247-a8f5-4a36f278ff82",
								"exec": [
									"if (pm.response.code == 200)",
									"    {",
									"    var jsonData = pm.response.json();",
									"    var instanceCount = jsonData.length;",
									"    if (instanceCount !== 0)",
									"    {",
									"        var instanceId = jsonData[0].id;",
									"        instanceId = instanceId.split('/');",
									"        instanceId = instanceId[1];",
									"        pm.environment.set('instanceId', instanceId);",
									"        postman.setNextRequest(\"CleanUp App instances\");",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/hal+json"
							}
						],
						"url": {
							"raw": "https://platform.{{envUrl}}/storage/api/v1/instances/{{instanceOwnerId}}",
							"protocol": "https",
							"host": [
								"platform",
								"{{envUrl}}"
							],
							"path": [
								"storage",
								"api",
								"v1",
								"instances",
								"{{instanceOwnerId}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "45ab2130-e9f6-418a-a4a5-cc2d29771c5e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "6d0848a4-075b-44d1-9be4-91036fbee672",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "6f76088f-7b42-44ae-9cf4-d2d22fbcb1f0",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "9d9aca45-4d0e-49f2-a49b-28b54c018901",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}
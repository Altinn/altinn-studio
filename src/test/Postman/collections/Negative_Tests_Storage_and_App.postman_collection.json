{
	"info": {
		"_postman_id": "fd64497c-a3c2-4fc6-81bf-86309e747ee8",
		"name": "Negative_Tests_Storage_and_App",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "SetUp TestData",
			"item": [
				{
					"name": "Authenticate user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var current_timestamp = new Date();\r",
									"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const jar = pm.cookies.jar();",
									"const domain = `https://${pm.environment.get(\"envUrl\")}`;",
									"jar.clear(domain, function (error){",
									"    if(error)",
									"    {",
									"        console.log(\"error\",error);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/hal+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"UserName\": \"{{testUserName}}\",\r\n    \"UserPassword\": \"{{testUserPassword}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{envUrl}}/api/authentication/authenticatewithpassword",
							"protocol": "https",
							"host": [
								"{{envUrl}}"
							],
							"path": [
								"api",
								"authentication",
								"authenticatewithpassword"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Runtime Cookie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code === 200) pm.environment.set(\"AltinnStudioRuntime\", pm.response.text());",
									"",
									"const cookieJar = pm.cookies.jar();",
									"const domain = `https://${pm.environment.get(\"envUrl\")}`;",
									"",
									"cookieJar.clear(domain, function (error){",
									"    if(error)",
									"    {",
									"        console.log(\"error\",error);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"AltinnStudioRuntime\",\"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://platform.{{envUrl}}/authentication/api/v1/authentication?goto=https://platform.{{envUrl}}/authentication/api/v1/refresh",
							"protocol": "https",
							"host": [
								"platform",
								"{{envUrl}}"
							],
							"path": [
								"authentication",
								"api",
								"v1",
								"authentication"
							],
							"query": [
								{
									"key": "goto",
									"value": "https://platform.{{envUrl}}/authentication/api/v1/refresh"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Party info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 200)",
									"{",
									"    var jsonData = pm.response.json();",
									"    var partyId = jsonData.partyId;",
									"    var ssn = jsonData.party.ssn;",
									"    var userId = jsonData.userId;",
									"    pm.environment.set(\"partyID\",partyId);",
									"    pm.environment.set(\"instanceOwnerId\",partyId);",
									"    pm.environment.set(\"SSN\",ssn);",
									"    pm.environment.set(\"userID\",userId);",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/api/v1/profile/user",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"api",
								"v1",
								"profile",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Create Instance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 201)\r",
									"{\r",
									"    var jsonData = pm.response.json();\r",
									"    if(pm.expect(jsonData.instanceOwnerId).not.eql(null))\r",
									"    {\r",
									"        pm.environment.set('instanceOwnerId', jsonData.instanceOwner.partyId);\r",
									"        var instanceId = jsonData.id;\r",
									"        instanceId = instanceId.toString();\r",
									"        instanceId = instanceId.split('/');\r",
									"        instanceId = instanceId[1];\r",
									"        pm.environment.set('instanceId',instanceId);\r",
									"        var dataId = jsonData.data[0].id;\r",
									"        pm.environment.set('dataGuid',dataId);\r",
									"    }\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"instanceId\",\"\");",
									"pm.environment.set(\"dataGuid\",\"\");",
									"pm.environment.set(\"processElementId\",\"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances?instanceOwnerPartyId={{instanceOwnerId}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances"
							],
							"query": [
								{
									"key": "instanceOwnerPartyId",
									"value": "{{instanceOwnerId}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Without Authentication",
			"item": [
				{
					"name": "Create App Instance - 401",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Negative Tests - Without Authentication - App - Create App Instance - Status - Unauthorized\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instanceOwner\": {\n    \t\"partyId\": \"{{instanceOwnerId}}\"\n    },\n    \"appId\" : \"{{org}}/{{app}}\",\n    \"dueBefore\": \"2019-06-01T12:00:00Z\",\n    \"visibleAfter\": \"2019-05-20T00:00:00Z\",\n    \"title\": { \"nb\": \"Arbeidsmelding\" }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Edit Form Data - 401",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Negative Tests - Without Authentication - App - Edit App Data - Status - Unauthorized\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\"?>\n<Skjema xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" skjemanummer=\"1472\" spesifikasjonsnummer=\"9812\" blankettnummer=\"AFP-01\" tittel=\"Arbeidsgiverskjema AFP\" gruppeid=\"8818\">\n  <OpplysningerOmArbeidstakeren-grp-8819 gruppeid=\"8819\">\n    <Skjemainstans-grp-8854 gruppeid=\"8854\">\n      <Journalnummer-datadef-33316 orid=\"33316\">9827</Journalnummer-datadef-33316>\n    </Skjemainstans-grp-8854>\n  </OpplysningerOmArbeidstakeren-grp-8819>\n</Skjema>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/data/{{dataGuid}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"data",
								"{{dataGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Current Process - 401",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Negative Tests - Without Authentication - App - GET Current Process - Status - Unauthorized\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}/process",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"process"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET App Instance by Id - 401",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Negative Tests - Without Authentication - Storage - GET Instance by ID - Status - Unauthorized\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://platform.{{envUrl}}/storage/api/v1/instances/{{instanceOwnerId}}/{{instanceId}}",
							"protocol": "https",
							"host": [
								"platform",
								"{{envUrl}}"
							],
							"path": [
								"storage",
								"api",
								"v1",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Instance Data - 401",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Negative Tests - Without Authentication - Storage - GET Instance Data - Status - Unauthorized\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://platform.{{envUrl}}/storage/api/v1/instances/{{instanceOwnerId}}/{{instanceId}}/dataelements",
							"protocol": "https",
							"host": [
								"platform",
								"{{envUrl}}"
							],
							"path": [
								"storage",
								"api",
								"v1",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}",
								"dataelements"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET All instances - 401",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Negative Tests - Without Authentication - Storage - GET SBL Instance - Status - Unauthorized\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://platform.{{envUrl}}/storage/api/v1/sbl/instances/{{instanceOwnerId}}?state=active&language=nb",
							"protocol": "https",
							"host": [
								"platform",
								"{{envUrl}}"
							],
							"path": [
								"storage",
								"api",
								"v1",
								"sbl",
								"instances",
								"{{instanceOwnerId}}"
							],
							"query": [
								{
									"key": "state",
									"value": "active"
								},
								{
									"key": "language",
									"value": "nb"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Hard Delete Instance - 401",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Negative Tests - Without Authentication - Storage - DELETE Instance - Status - Unauthorized\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://platform.{{envUrl}}/storage/api/v1/sbl/instances/{{instanceOwnerId}}/{{instanceId}}?hard=true",
							"protocol": "https",
							"host": [
								"platform",
								"{{envUrl}}"
							],
							"path": [
								"storage",
								"api",
								"v1",
								"sbl",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}"
							],
							"query": [
								{
									"key": "hard",
									"value": "true"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create Instances - User with Lower Security Level Login",
			"item": [
				{
					"name": "App - Create Instance - 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Negative Tests - User with Lower Security Level Login - App - Create App Instance - Status - Forbidden\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{level3-app}}/instances?instanceOwnerPartyId={{instanceOwnerId}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{level3-app}}",
								"instances"
							],
							"query": [
								{
									"key": "instanceOwnerPartyId",
									"value": "{{instanceOwnerId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Storage - Create App instance - 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Negative Tests - User with Lower Security Level Login - Storage - Create App Instance - Status - Forbidden\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{appsaccesskey}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instanceOwner\": {\n    \t\"partyId\": \"{{instanceOwnerId}}\"\n    },\n    \"appId\" : \"{{org}}/{{level3-app}}\",\n    \"dueBefore\": \"2019-06-01T12:00:00Z\",\n    \"visibleAfter\": \"2019-05-20T00:00:00Z\",\n    \"title\": { \"nb\": \"Arbeidsmelding\" },\n    \"process\": {\n        \"started\": \"{{current_timestamp}}\",\n        \"startEvent\": \"StartEvent_1\",\n        \"currentTask\": {\n            \"flow\": 2,\n            \"started\": \"{{current_timestamp}}\",\n            \"elementId\": \"Task_1\",\n            \"name\": \"Utfylling\",\n            \"altinnTaskType\": \"data\",\n            \"ended\": null,\n            \"validated\": null\n        },\n        \"ended\": null,\n        \"endEvent\": null\n    }\n}"
						},
						"url": {
							"raw": "https://platform.{{envUrl}}/storage/api/v1/instances?appId={{org}}/{{level3-app}}",
							"protocol": "https",
							"host": [
								"platform",
								"{{envUrl}}"
							],
							"path": [
								"storage",
								"api",
								"v1",
								"instances"
							],
							"query": [
								{
									"key": "appId",
									"value": "{{org}}/{{level3-app}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Access instances without required roles",
			"item": [
				{
					"name": "Create Level 1 App Instance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 201)\r",
									"{\r",
									"    var jsonData = pm.response.json();\r",
									"    if(pm.expect(jsonData.instanceOwnerId).not.eql(null))\r",
									"    {\r",
									"        pm.environment.set('instanceOwnerId', jsonData.instanceOwner.partyId);\r",
									"        var instanceId = jsonData.id;\r",
									"        instanceId = instanceId.toString();\r",
									"        instanceId = instanceId.split('/');\r",
									"        instanceId = instanceId[1];\r",
									"        pm.environment.set('instanceId',instanceId);\r",
									"        var dataId = jsonData.data[0].id;\r",
									"        pm.environment.set('dataGuid',dataId);\r",
									"    }\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"instanceId\",\"\");",
									"pm.environment.set(\"dataGuid\",\"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{level1-app}}/instances?instanceOwnerPartyId={{instanceOwnerId}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{level1-app}}",
								"instances"
							],
							"query": [
								{
									"key": "instanceOwnerPartyId",
									"value": "{{instanceOwnerId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Authenticate user2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const jar = pm.cookies.jar();",
									"const domain = `https://${pm.environment.get(\"envUrl\")}`;",
									"jar.clear(domain, function (error){",
									"    if(error)",
									"    {",
									"        console.log(\"error\",error);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/hal+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"UserName\": \"{{testUserName2}}\",\r\n    \"UserPassword\": \"{{testUserPassword}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{envUrl}}/api/authentication/authenticatewithpassword",
							"protocol": "https",
							"host": [
								"{{envUrl}}"
							],
							"path": [
								"api",
								"authentication",
								"authenticatewithpassword"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Runtime Cookie for user2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code === 200) pm.environment.set(\"AltinnStudioRuntime\", pm.response.text());",
									"",
									"const cookieJar = pm.cookies.jar();",
									"const domain = `https://${pm.environment.get(\"envUrl\")}`;",
									"",
									"cookieJar.clear(domain, function (error){",
									"    if(error)",
									"    {",
									"        console.log(\"error\",error);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"AltinnStudioRuntime\",\"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://platform.{{envUrl}}/authentication/api/v1/authentication?goto=https://platform.{{envUrl}}/authentication/api/v1/refresh",
							"protocol": "https",
							"host": [
								"platform",
								"{{envUrl}}"
							],
							"path": [
								"authentication",
								"api",
								"v1",
								"authentication"
							],
							"query": [
								{
									"key": "goto",
									"value": "https://platform.{{envUrl}}/authentication/api/v1/refresh"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Storage - GET App Instance by Id - 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Negative Tests - Without Roles - Storage - GET Instance by ID - Status - Forbidden\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://platform.{{envUrl}}/storage/api/v1/instances/{{instanceOwnerId}}/{{instanceId}}",
							"protocol": "https",
							"host": [
								"platform",
								"{{envUrl}}"
							],
							"path": [
								"storage",
								"api",
								"v1",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "App - GET App Instance by Id - 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Negative Tests - Without Roles - App - GET Instance by ID - Status - Forbidden\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/instances/{{instanceOwnerId}}/{{instanceId}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"instances",
								"{{instanceOwnerId}}",
								"{{instanceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "App - Create Instance - 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Negative Tests - User Without Roles - App - Create App Instance - Status - Forbidden\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{level1-app}}/instances?instanceOwnerPartyId={{instanceOwnerId}}",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{level1-app}}",
								"instances"
							],
							"query": [
								{
									"key": "instanceOwnerPartyId",
									"value": "{{instanceOwnerId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Storage - Create Instance - 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Negative Tests - User Without Roles - Storage - Create App Instance - Status - Forbidden\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{appsaccesskey}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instanceOwner\": {\n    \t\"partyId\": \"{{instanceOwnerId}}\"\n    },\n    \"appId\" : \"{{org}}/{{level1-app}}\",\n    \"dueBefore\": \"2019-06-01T12:00:00Z\",\n    \"visibleAfter\": \"2019-05-20T00:00:00Z\",\n    \"title\": { \"nb\": \"Arbeidsmelding\" },\n    \"process\": {\n        \"started\": \"{{current_timestamp}}\",\n        \"startEvent\": \"StartEvent_1\",\n        \"currentTask\": {\n            \"flow\": 2,\n            \"started\": \"{{current_timestamp}}\",\n            \"elementId\": \"Task_1\",\n            \"name\": \"Utfylling\",\n            \"altinnTaskType\": \"data\",\n            \"ended\": null,\n            \"validated\": null\n        },\n        \"ended\": null,\n        \"endEvent\": null\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://platform.{{envUrl}}/storage/api/v1/instances?appId={{org}}/{{level1-app}}",
							"protocol": "https",
							"host": [
								"platform",
								"{{envUrl}}"
							],
							"path": [
								"storage",
								"api",
								"v1",
								"instances"
							],
							"query": [
								{
									"key": "appId",
									"value": "{{org}}/{{level1-app}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Access Instances - User with Lower Security Level Login",
			"item": [
				{
					"name": "Get Party Id of user 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 200)",
									"{",
									"    var jsonData = pm.response.json();",
									"    var partyId = jsonData.partyId;",
									"    pm.environment.set(\"instanceOwnerId\",partyId);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{org}}.apps.{{envUrl}}/{{org}}/{{app}}/api/v1/profile/user",
							"protocol": "https",
							"host": [
								"{{org}}",
								"apps",
								"{{envUrl}}"
							],
							"path": [
								"{{org}}",
								"{{app}}",
								"api",
								"v1",
								"profile",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Instances list does not have high security level app instances",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"function checkForHighSecLevelInstances() {\r",
									"    if (pm.response.code == 200)\r",
									"    {\r",
									"        var jsonData = pm.response.json();\r",
									"        var instanceCount = jsonData.length;\r",
									"        var level2App = pm.environment.get(\"app\");\r",
									"        var highSecLevelInstanceFound = false ;\r",
									"        for (var i=0;i<instanceCount;i++)\r",
									"        {\r",
									"            if(jsonData[i].appName == level2App)\r",
									"            {\r",
									"                highSecLevelInstanceFound = true ;\r",
									"            }\r",
									"        }\r",
									"        return highSecLevelInstanceFound;\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test(\"Negative Tests - Access High Security Level Instances - SBL - NotFound \", function () {\r",
									"    var isFound = checkForHighSecLevelInstances();\r",
									"    pm.expect(isFound).to.equal(false);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AltinnStudioRuntime}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{sblaccesskey}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "https://platform.{{envUrl}}/storage/api/v1/sbl/instances/search?instanceOwner.partyId={{instanceOwnerId}}",
							"protocol": "https",
							"host": [
								"platform",
								"{{envUrl}}"
							],
							"path": [
								"storage",
								"api",
								"v1",
								"sbl",
								"instances",
								"search"
							],
							"query": [
								{
									"key": "instanceOwner.partyId",
									"value": "{{instanceOwnerId}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}
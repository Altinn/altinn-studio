{
	"info": {
		"_postman_id": "39ff785a-dcc0-4165-ab13-c427b4b78e6f",
		"name": "Platform",
		"description": "Collection that tests the full integration between current Altinn platform and SBL bridge",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Register",
			"item": [
				{
					"name": "GET Organizations",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8129a9e2-4653-4bf7-81c8-f5834064c30f",
								"exec": [
									"pm.test(\"Platform - Register - GET Organizations - Status - 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Platform - Register - GET Organizations - Content - Matches \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"REINE OG KORSHAMN\");",
									"    pm.expect(pm.response.text()).to.include(\"ANS\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://platform.{{envUrl}}/register/api/v1/organizations/{{orgNr}}",
							"protocol": "https",
							"host": [
								"platform",
								"{{envUrl}}"
							],
							"path": [
								"register",
								"api",
								"v1",
								"organizations",
								"{{orgNr}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Parties",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3dc27b90-5c04-4fc8-a5d4-8157c75b8842",
								"exec": [
									"pm.test(\"Platform - Register - GET Parties - Status - 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Platform - Register - GET Parties - Content - Matches \", function () {",
									"    var partyID = parseInt(pm.environment.get('partyID'));",
									"    pm.expect(pm.response.json().partyId).to.eql(partyID);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://platform.{{envUrl}}/register/api/v1/parties/{{partyID}}",
							"protocol": "https",
							"host": [
								"platform",
								"{{envUrl}}"
							],
							"path": [
								"register",
								"api",
								"v1",
								"parties",
								"{{partyID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Persons",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9a29ae71-c668-4284-a10e-5fd12e5e1029",
								"exec": [
									"pm.test(\"Platform - Register - GET Persons - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"{{SSN}}\""
						},
						"url": {
							"raw": "https://platform.{{envUrl}}/register/api/v1/persons",
							"protocol": "https",
							"host": [
								"platform",
								"{{envUrl}}"
							],
							"path": [
								"register",
								"api",
								"v1",
								"persons"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Party Id by SSN",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "db2a3525-6d7c-447c-8254-497db124f622",
								"exec": [
									"pm.test(\"Platform - Register - Get Party Id by SSN - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.text()).not.equal('');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"{{SSN}}\""
						},
						"url": {
							"raw": "https://platform.{{envUrl}}/register/api/v1/parties/lookup",
							"protocol": "https",
							"host": [
								"platform",
								"{{envUrl}}"
							],
							"path": [
								"register",
								"api",
								"v1",
								"parties",
								"lookup"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Party Id by Org",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "db2a3525-6d7c-447c-8254-497db124f622",
								"exec": [
									"pm.test(\"Platform - Register - Get Party Id by Org - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.text()).not.equal('');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"{{orgNr}}\""
						},
						"url": {
							"raw": "https://platform.{{envUrl}}/register/api/v1/parties/lookup",
							"protocol": "https",
							"host": [
								"platform",
								"{{envUrl}}"
							],
							"path": [
								"register",
								"api",
								"v1",
								"parties",
								"lookup"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Party info by SSN",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5019eb00-bfb3-4b33-a6a4-57884c85dd81",
								"exec": [
									"pm.test(\"Platform - Register - Get Party Info by SSN - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Platform - Register - Get Party Info by SSN - Content - 200\", function (){\r",
									"   var response = pm.response.json();\r",
									"   var ssnToCheck = pm.environment.get(\"SSN\");\r",
									"   pm.expect(response.person.ssn).equal(ssnToCheck);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"{{SSN}}\""
						},
						"url": {
							"raw": "https://platform.{{envUrl}}/register/api/v1/parties/lookupobject",
							"protocol": "https",
							"host": [
								"platform",
								"{{envUrl}}"
							],
							"path": [
								"register",
								"api",
								"v1",
								"parties",
								"lookupobject"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Party info by Org",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5019eb00-bfb3-4b33-a6a4-57884c85dd81",
								"exec": [
									"pm.test(\"Platform - Register - Get Party Info by SSN - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Platform - Register - Get Party Info by SSN - Content - 200\", function (){\r",
									"   var response = pm.response.json();\r",
									"   var orgToCheck = pm.environment.get(\"orgNr\");\r",
									"   pm.expect(response.organization.orgNumber).equal(orgToCheck);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"{{orgNr}}\""
						},
						"url": {
							"raw": "https://platform.{{envUrl}}/register/api/v1/parties/lookupobject",
							"protocol": "https",
							"host": [
								"platform",
								"{{envUrl}}"
							],
							"path": [
								"register",
								"api",
								"v1",
								"parties",
								"lookupobject"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Profile",
			"item": [
				{
					"name": "Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bc718f86-1415-44c2-8911-124c1461456b",
								"exec": [
									"pm.test(\"Platform - Profile - GET Profile - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://platform.{{envUrl}}/profile/api/v1/users/{{userID}}",
							"protocol": "https",
							"host": [
								"platform",
								"{{envUrl}}"
							],
							"path": [
								"profile",
								"api",
								"v1",
								"users",
								"{{userID}}"
							]
						},
						"description": "Get information about a user"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Tickets",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "13151bbe-93ff-4e54-88f2-9a04f9d996b4",
								"exec": [
									"pm.test(\"Platform - Authentication - GET Tickets - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"encryptedTicket\": \"CD4E027814113A483207C670A4\"\r\n}"
						},
						"url": {
							"raw": "https://platform.{{envUrl}}/authentication/api/v1/authentication?goto=https://www.altinn.no",
							"protocol": "https",
							"host": [
								"platform",
								"{{envUrl}}"
							],
							"path": [
								"authentication",
								"api",
								"v1",
								"authentication"
							],
							"query": [
								{
									"key": "goto",
									"value": "https://www.altinn.no"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Authorization",
			"item": [
				{
					"name": "GET Actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e45aaeae-96e7-42ef-9429-c224609f299d",
								"exec": [
									"pm.test(\"Platform - Authorization - GET Actors - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://platform.{{envUrl}}/authorization/api/v1/parties?userid={{userID}}",
							"protocol": "https",
							"host": [
								"platform",
								"{{envUrl}}"
							],
							"path": [
								"authorization",
								"api",
								"v1",
								"parties"
							],
							"query": [
								{
									"key": "userid",
									"value": "{{userID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b884ff1-f754-4671-a1eb-13bd734e88b5",
								"exec": [
									"pm.test(\"Platform - Authorization - GET Roles - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://platform.{{envUrl}}/authorization/api/v1/roles?coveredbyuserid={{userID}}&offeredbypartyid={{partyID}}",
							"protocol": "https",
							"host": [
								"platform",
								"{{envUrl}}"
							],
							"path": [
								"authorization",
								"api",
								"v1",
								"roles"
							],
							"query": [
								{
									"key": "coveredbyuserid",
									"value": "{{userID}}"
								},
								{
									"key": "offeredbypartyid",
									"value": "{{partyID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Upload Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "72982299-cf05-46fd-bda1-7c358d148ded",
								"exec": [
									"pm.test(\"Platform - Authorization - Post Upload Policy xacml - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "file",
							"file": {
								"src": "policy.xml"
							},
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://platform.{{envUrl}}/authorization/api/v1/policies?org={{org}}&app={{app}}",
							"protocol": "https",
							"host": [
								"platform",
								"{{envUrl}}"
							],
							"path": [
								"authorization",
								"api",
								"v1",
								"policies"
							],
							"query": [
								{
									"key": "org",
									"value": "{{org}}"
								},
								{
									"key": "app",
									"value": "{{app}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PDP - XML Data - Permit",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "432d032b-28b3-4e81-9881-9c0a02ab26a2",
								"exec": [
									"pm.test(\"Platform - Authorization - PDP - XML Data - Permit - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Platform - Authorization - PDP - XML Data - Permit - Content - Matches\", function () {\r",
									"    pm.expect(pm.response.text()).to.contain(\"Permit\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Request xsi:schemaLocation=\"urn:oasis:names:tc:xacml:3.0:core:schema:wd-17 http://docs.oasis-open.org/xacml/3.0/xacml-core-v3-schema-wd-17.xsd\" ReturnPolicyIdList=\"false\" CombinedDecision=\"false\" xmlns=\"urn:oasis:names:tc:xacml:3.0:core:schema:wd-17\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\r\n  <Attributes Category=\"urn:oasis:names:tc:xacml:1.0:subject-category:access-subject\">\r\n    <Attribute IncludeInResult=\"false\" AttributeId=\"urn:altinn:user-id\">\r\n      <AttributeValue DataType=\"http://www.w3.org/2001/XMLSchema#string\">{{userID}}</AttributeValue>\r\n    </Attribute>\r\n  </Attributes>\r\n  <Attributes Category=\"urn:oasis:names:tc:xacml:3.0:attribute-category:resource\">\r\n    <Attribute IncludeInResult=\"false\" AttributeId=\"urn:altinn:partyid\">\r\n      <AttributeValue DataType=\"http://www.w3.org/2001/XMLSchema#string\">{{partyID}}</AttributeValue>\r\n    </Attribute>\r\n  </Attributes>\r\n  <Attributes Category=\"urn:oasis:names:tc:xacml:3.0:attribute-category:resource\">\r\n    <Attribute IncludeInResult=\"false\" AttributeId=\"urn:altinn:org\">\r\n      <AttributeValue DataType=\"http://www.w3.org/2001/XMLSchema#string\">{{org}}</AttributeValue>\r\n    </Attribute>\r\n  </Attributes>\r\n  <Attributes Category=\"urn:oasis:names:tc:xacml:3.0:attribute-category:resource\">\r\n    <Attribute IncludeInResult=\"false\" AttributeId=\"urn:altinn:app\">\r\n      <AttributeValue DataType=\"http://www.w3.org/2001/XMLSchema#string\">{{app}}</AttributeValue>\r\n    </Attribute>\r\n  </Attributes>\r\n  <Attributes Category=\"urn:oasis:names:tc:xacml:3.0:attribute-category:resource\">\r\n    <Attribute IncludeInResult=\"false\" AttributeId=\"urn:altinn:task\">\r\n      <AttributeValue DataType=\"http://www.w3.org/2001/XMLSchema#string\">formfilling</AttributeValue>\r\n    </Attribute>\r\n  </Attributes>\r\n  <Attributes Category=\"urn:oasis:names:tc:xacml:3.0:attribute-category:action\">\r\n    <Attribute IncludeInResult=\"false\" AttributeId=\"urn:oasis:names:tc:xacml:1.0:action:action-id\">\r\n      <AttributeValue DataType=\"http://www.w3.org/2001/XMLSchema#string\">read</AttributeValue>\r\n    </Attribute>\r\n  </Attributes>\r\n  <Attributes Category=\"urn:oasis:names:tc:xacml:3.0:attribute-category:environment\" />\r\n</Request>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "https://platform.{{envUrl}}/authorization/api/v1/decision",
							"protocol": "https",
							"host": [
								"platform",
								"{{envUrl}}"
							],
							"path": [
								"authorization",
								"api",
								"v1",
								"decision"
							]
						}
					},
					"response": []
				},
				{
					"name": "PDP - XML Data - NotApplicable",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "432d032b-28b3-4e81-9881-9c0a02ab26a2",
								"exec": [
									"pm.test(\"Platform - Authorization - PDP - XML Data - NotApplicable - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Platform - Authorization - PDP - XML Data - NotApplicable - Content - Permit\", function () {\r",
									"    pm.expect(pm.response.text()).to.contain(\"NotApplicable\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/xml"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Request xsi:schemaLocation=\"urn:oasis:names:tc:xacml:3.0:core:schema:wd-17 http://docs.oasis-open.org/xacml/3.0/xacml-core-v3-schema-wd-17.xsd\" ReturnPolicyIdList=\"false\" CombinedDecision=\"false\" xmlns=\"urn:oasis:names:tc:xacml:3.0:core:schema:wd-17\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\r\n  <Attributes Category=\"urn:oasis:names:tc:xacml:1.0:subject-category:access-subject\">\r\n    <Attribute IncludeInResult=\"false\" AttributeId=\"urn:altinn:user-id\">\r\n      <AttributeValue DataType=\"http://www.w3.org/2001/XMLSchema#string\">{{userID}}</AttributeValue>\r\n    </Attribute>\r\n  </Attributes>\r\n  <Attributes Category=\"urn:oasis:names:tc:xacml:3.0:attribute-category:resource\">\r\n    <Attribute IncludeInResult=\"false\" AttributeId=\"urn:altinn:partyid\">\r\n      <AttributeValue DataType=\"http://www.w3.org/2001/XMLSchema#string\">{{partyID}}</AttributeValue>\r\n    </Attribute>\r\n  </Attributes>\r\n  <Attributes Category=\"urn:oasis:names:tc:xacml:3.0:attribute-category:resource\">\r\n    <Attribute IncludeInResult=\"false\" AttributeId=\"urn:altinn:org\">\r\n      <AttributeValue DataType=\"http://www.w3.org/2001/XMLSchema#string\">{{org}}</AttributeValue>\r\n    </Attribute>\r\n  </Attributes>\r\n  <Attributes Category=\"urn:oasis:names:tc:xacml:3.0:attribute-category:resource\">\r\n    <Attribute IncludeInResult=\"false\" AttributeId=\"urn:altinn:app\">\r\n      <AttributeValue DataType=\"http://www.w3.org/2001/XMLSchema#string\">{{app}}</AttributeValue>\r\n    </Attribute>\r\n  </Attributes>\r\n  <Attributes Category=\"urn:oasis:names:tc:xacml:3.0:attribute-category:resource\">\r\n    <Attribute IncludeInResult=\"false\" AttributeId=\"urn:altinn:task\">\r\n      <AttributeValue DataType=\"http://www.w3.org/2001/XMLSchema#string\">formfilling</AttributeValue>\r\n    </Attribute>\r\n  </Attributes>\r\n  <Attributes Category=\"urn:oasis:names:tc:xacml:3.0:attribute-category:action\">\r\n    <Attribute IncludeInResult=\"false\" AttributeId=\"urn:oasis:names:tc:xacml:1.0:action:action-id\">\r\n      <AttributeValue DataType=\"http://www.w3.org/2001/XMLSchema#string\">sign</AttributeValue>\r\n    </Attribute>\r\n  </Attributes>\r\n  <Attributes Category=\"urn:oasis:names:tc:xacml:3.0:attribute-category:environment\" />\r\n</Request>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "https://platform.{{envUrl}}/authorization/api/v1/decision",
							"protocol": "https",
							"host": [
								"platform",
								"{{envUrl}}"
							],
							"path": [
								"authorization",
								"api",
								"v1",
								"decision"
							]
						}
					},
					"response": []
				},
				{
					"name": "PDP - Json Data - Permit",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "08fe8021-758e-4b6f-9756-51443cb3f78d",
								"exec": [
									"pm.test(\"Platform - Authorization - PDP - XML Data - Permit - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Platform - Authorization - PDP - XML Data - Permit - Content - Permit\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.response[0].decision).to.equal(\"Permit\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"Request\": {\r\n    \"ReturnPolicyIdList\": true,\r\n    \"AccessSubject\": [\r\n      {\r\n        \"Attribute\": [\r\n          {\r\n            \"AttributeId\": \"urn:altinn:org\",\r\n            \"Value\": \"{{org}}\"\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"Action\": [\r\n      {\r\n        \"Attribute\": [\r\n          {\r\n            \"AttributeId\": \"urn:oasis:names:tc:xacml:1.0:action:action-id\",\r\n            \"Value\": \"read\",\r\n            \"DataType\": \"http://www.w3.org/2001/XMLSchema#string\"\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"Resource\": [\r\n      {\r\n        \"Attribute\": [\r\n          {\r\n            \"AttributeId\": \"urn:altinn:app\",\r\n            \"Value\": \"{{app}}\"\r\n          },\r\n          {\r\n            \"AttributeId\": \"urn:altinn:org\",\r\n            \"Value\": \"{{org}}\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://platform.{{envUrl}}/authorization/api/v1/decision",
							"protocol": "https",
							"host": [
								"platform",
								"{{envUrl}}"
							],
							"path": [
								"authorization",
								"api",
								"v1",
								"decision"
							]
						}
					},
					"response": []
				},
				{
					"name": "PDP - Json Data - NotApplicable",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "08fe8021-758e-4b6f-9756-51443cb3f78d",
								"exec": [
									"pm.test(\"Platform - Authorization - PDP - XML Data - NotApplicable - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Platform - Authorization - PDP - XML Data - NotApplicable - Content - Matches\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.response[0].decision).to.equal(\"NotApplicable\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"Request\": {\r\n    \"ReturnPolicyIdList\": true,\r\n    \"AccessSubject\": [\r\n      {\r\n        \"Attribute\": [\r\n          {\r\n            \"AttributeId\": \"urn:altinn:org\",\r\n            \"Value\": \"{{org}}\"\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"Action\": [\r\n      {\r\n        \"Attribute\": [\r\n          {\r\n            \"AttributeId\": \"urn:oasis:names:tc:xacml:1.0:action:action-id\",\r\n            \"Value\": \"sign\",\r\n            \"DataType\": \"http://www.w3.org/2001/XMLSchema#string\"\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"Resource\": [\r\n      {\r\n        \"Attribute\": [\r\n          {\r\n            \"AttributeId\": \"urn:altinn:app\",\r\n            \"Value\": \"{{app}}\"\r\n          },\r\n          {\r\n            \"AttributeId\": \"urn:altinn:org\",\r\n            \"Value\": \"{{org}}\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://platform.{{envUrl}}/authorization/api/v1/decision",
							"protocol": "https",
							"host": [
								"platform",
								"{{envUrl}}"
							],
							"path": [
								"authorization",
								"api",
								"v1",
								"decision"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Storage",
			"item": [
				{
					"name": "Applications",
					"item": [
						{
							"name": "POST Create App",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c41aa913-9f1a-4cc8-87dc-d896ef72317c",
										"exec": [
											"var current_timestamp = new Date();\r",
											"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "1b3da8e9-45b9-477f-aef7-0e2ede88ed12",
										"exec": [
											"pm.test(\"Platform - Storage - Application - Create App - Status - 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Platform - Storage - Application - Create App - Content - Matches\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var appId = pm.environment.get('org') + '/' + pm.environment.get('app') ;\r",
											"    pm.expect(jsonData.id).to.eql(appId);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"appId\": \"{{appId}}\",\r\n  \"versionId\": \"1\",\r\n  \"org\": \"{{org}}\",\r\n  \"createdDateTime\": \"{{current_timestamp}}\",\r\n  \"createdBy\": \"AutomatedTest\",\r\n  \"lastChangedDateTime\": \"{{current_timestamp}}\",\r\n  \"lastChangedBy\": \"AutomatedTest\",\r\n  \"title\": {\r\n    \"nb\": \"{{app}}\"\r\n  },\r\n  \"validFrom\": \"{{current_timestamp}}\",\r\n  \"validTo\": \"\",\r\n  \"WorkflowId\": \"\",\r\n  \"maxSize\": 0,\r\n  \"elementTypes\": [\r\n    {\r\n      \"id\": \"default\",\r\n      \"description\": \"\",\r\n      \"allowedContentType\": [\r\n        \"application/xml\"\r\n      ],\r\n      \"maxSize\": 25,\r\n      \"maxCount\": 5,\r\n      \"shouldSign\": false,\r\n      \"shouldEncrypt\": false\r\n    },\r\n    {\r\n    \"id\": \"attachment\",\r\n    \"allowedContentType\": [\r\n    \t\"application/octet-stream\"\r\n    ],\r\n    \"appLogic\": true,\r\n    \"maxSize\": 25,\r\n    \"maxCount\": 5,\r\n    \"minCount\": 0\r\n}\r\n  ]\r\n}"
								},
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/applications?appId={{org}}%2F{{app}}",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"applications"
									],
									"query": [
										{
											"key": "appId",
											"value": "{{org}}%2F{{app}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET All Apps",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ce37f250-8e44-4034-9ec3-b9ee5feac332",
										"exec": [
											"pm.test(\"Platform - Storage - Applications - GET All Apps - Status - 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/applications/{{org}}",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"applications",
										"{{org}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET App by name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ce37f250-8e44-4034-9ec3-b9ee5feac332",
										"exec": [
											"pm.test(\"Platform - Storage - Applications - Get App by name - Status - 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Platform - Storage - Applications - Get App by name - Content - Matches\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedAppName = pm.environment.get(\"appId\");\r",
											"    pm.expect(jsonData.id).to.eql(expectedAppName);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/applications/{{org}}/{{app}}",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"applications",
										"{{org}}",
										"{{app}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "PUT Edit App",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7762b309-0916-44bc-bb7c-5fb2dc8e639b",
										"exec": [
											"pm.test(\"Platform - Storage - Applications - Edit App - Status -  200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Platform - Storage - Applications - Get App by name - Content - Matches\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"true\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"appId\": \"{{appId}}\",\r\n  \"versionId\": \"2\",\r\n  \"org\": \"{{org}}\",\r\n  \"createdDateTime\": \"{{current_timestamp}}\",\r\n  \"createdBy\": \"AutomatedTest\",\r\n  \"lastChangedDateTime\": \"{{current_timestamp}}\",\r\n  \"lastChangedBy\": \"AutomatedTest\",\r\n  \"title\": {\r\n    \"nb\": \"{{app}}\"\r\n  },\r\n  \"validFrom\": \"{{current_timestamp}}\",\r\n  \"validTo\": \"\",\r\n  \"WorkflowId\": \"\",\r\n  \"maxSize\": 0,\r\n  \"elementTypes\": [\r\n    {\r\n      \"id\": \"default\",\r\n      \"description\": \"\",\r\n      \"allowedContentType\": [\r\n        \"application/xml\"\r\n      ],\r\n      \"maxSize\": 25,\r\n      \"maxCount\": 5,\r\n      \"shouldSign\": false,\r\n      \"shouldEncrypt\": false\r\n    },\r\n    {\r\n    \"id\": \"attachment\",\r\n    \"allowedContentType\": [\r\n    \t\"application/octet-stream\"\r\n    ],\r\n    \"appLogic\": true,\r\n    \"maxSize\": 25,\r\n    \"maxCount\": 5,\r\n    \"minCount\": 0\r\n}\r\n  ]\r\n}"
								},
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/applications?appId={{org}}%2F{{app}}",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"applications"
									],
									"query": [
										{
											"key": "appId",
											"value": "{{org}}%2F{{app}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Instances",
					"item": [
						{
							"name": "POST App instance",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f0c6b00b-4213-4095-8a83-f9cf7cc5769e",
										"exec": [
											"pm.test(\"Platform - Storage - Instances - Add app instance - Status - 200 \", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    var jsonData = pm.response.json();\r",
											"    if(pm.expect(jsonData.instanceOwnerId).not.eql(null))\r",
											"    {\r",
											"        pm.environment.set('instanceOwnerId', jsonData.instanceOwnerId);\r",
											"        pm.environment.set('appId',jsonData.appId);\r",
											"        var instanceId = jsonData.id;\r",
											"        instanceId = instanceId.toString();\r",
											"        instanceId = instanceId.split('/');\r",
											"        instanceId = instanceId[1];\r",
											"        pm.environment.set('instanceId',instanceId);\r",
											"    }\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "d7b24a19-9093-462e-9b6f-a6fd1d7df287",
										"exec": [
											"pm.environment.set(\"instanceId\",\"\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"instanceOwnerId\": \"{{instanceOwnerId}}\",\r\n    \"labels\" : [ \"gr\", \"x2\" ],\r\n    \"appId\" : \"{{appId}}\",\r\n    \"dueDateTime\": \"2019-06-01T12:00:00Z\",\r\n    \"visibleDateTime\": \"2019-05-20T00:00:00Z\",\r\n    \"presentationField\": { \"nb\": \"Arbeidsmelding\" }\r\n}"
								},
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/instances?appId={{appId}}",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"instances"
									],
									"query": [
										{
											"key": "appId",
											"value": "{{appId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Instances",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d46ea587-c309-4247-a8f5-4a36f278ff82",
										"exec": [
											"pm.test(\"Platform - Storage - Instances - Get All instances - Status - 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/instances",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"instances"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Instances by InstanceOwnerID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d46ea587-c309-4247-a8f5-4a36f278ff82",
										"exec": [
											"pm.test(\"Platform - Storage - Instances - Get Instance by onwerId - Status - 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/hal+json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/instances/{{instanceOwnerId}}",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"instances",
										"{{instanceOwnerId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Instances with date filters",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d46ea587-c309-4247-a8f5-4a36f278ff82",
										"exec": [
											"pm.test(\"Platform - Storage - Instances - Get Instances with Date filter - Status - 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/instances?appId={{appId}}&createdDateTime=gt:{{current_timestamp}}&lastChangedDateTime=gte:2019-08-12T11:20:10.2003387Z",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"instances"
									],
									"query": [
										{
											"key": "appId",
											"value": "{{appId}}"
										},
										{
											"key": "createdDateTime",
											"value": "gt:{{current_timestamp}}"
										},
										{
											"key": "lastChangedDateTime",
											"value": "gte:2019-08-12T11:20:10.2003387Z"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "PUT Edit App instance",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f0c6b00b-4213-4095-8a83-f9cf7cc5769e",
										"exec": [
											"pm.test(\"Platform - Storage - Instances - Edit Instance - Status - 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"labels\" : [ \"gr\", \"asdf\" ],\r\n    \"appId\" : \"{{appId}}\",\r\n    \"dueDateTime\": \"2019-06-01T12:00:00Z\",\r\n    \"visibleDateTime\": \"2019-05-20T00:00:00Z\",\r\n    \"presentationField\": { \"nb\": \"Arbeidsmelding\" }\r\n}"
								},
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/instances/{{instanceOwnerId}}/{{instanceId}}",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"instances",
										"{{instanceOwnerId}}",
										"{{instanceId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET App Instance by Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f0c6b00b-4213-4095-8a83-f9cf7cc5769e",
										"exec": [
											"pm.test(\"Platform - Storage - Instances - Get Instance by Id - Status - 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"labels\" : [ \"gr\", \"asdf\" ],\r\n    \"appId\" : \"{{appId}}\",\r\n    \"dueDateTime\": \"2019-06-01T12:00:00Z\",\r\n    \"visibleDateTime\": \"2019-05-20T00:00:00Z\",\r\n    \"presentationField\": { \"nb\": \"Arbeidsmelding\" }\r\n}"
								},
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/instances/{{instanceOwnerId}}/{{instanceId}}",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"instances",
										"{{instanceOwnerId}}",
										"{{instanceId}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Data",
					"item": [
						{
							"name": "POST Add Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4e0a8157-5f87-46a5-8df1-f3097c021797",
										"exec": [
											"pm.test(\"Platform - Storage - Instance Data - Add Instance Data - Status - 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "864b3eba-7a74-4650-9406-35b0797e1b4a",
										"exec": [
											"pm.environment.set(\"dataId\",\"\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/instances/{{instanceOwnerId}}/{{instanceId}}/data?elementType=default",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"instances",
										"{{instanceOwnerId}}",
										"{{instanceId}}",
										"data"
									],
									"query": [
										{
											"key": "elementType",
											"value": "default"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Instance Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b7a4e821-33f0-4c30-b93b-d8b0b0a2b53a",
										"exec": [
											"pm.test(\"Platform - Storage - Instance Data - Get Instance Data - Status - 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    var jsonData = pm.response.json();\r",
											"    if(pm.expect(jsonData[0].id).not.eql(null))\r",
											"    {\r",
											"        pm.environment.set('dataId',jsonData[0].id);\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/instances/{{instanceOwnerId}}/{{instanceId}}/data",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"instances",
										"{{instanceOwnerId}}",
										"{{instanceId}}",
										"data"
									]
								}
							},
							"response": []
						},
						{
							"name": "PUT Change data",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "62cd01a6-9c8c-4d36-8134-f51512efb018",
										"exec": [
											"pm.test(\"Platform - Storage - Instance Data - Edit Instance Data - Status - 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/instances/{{instanceOwnerId}}/{{instanceId}}/data/{{dataId}}",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"instances",
										"{{instanceOwnerId}}",
										"{{instanceId}}",
										"data",
										"{{dataId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Instance Data by Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "62cd01a6-9c8c-4d36-8134-f51512efb018",
										"exec": [
											"pm.test(\"Platform - Storage - Instance Data - Get Instance Data by ID - Status - 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/instances/{{instanceOwnerId}}/{{instanceId}}/data/{{dataId}}",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"instances",
										"{{instanceOwnerId}}",
										"{{instanceId}}",
										"data",
										"{{dataId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE instance data",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cc714784-7a38-4224-aad8-11d36fe6c540",
										"exec": [
											"pm.test(\"Platform - Storage - Instance Data - Delete Instance Data - Status - 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/instances/{{instanceOwnerId}}/{{instanceId}}/data/{{dataId}}",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"instances",
										"{{instanceOwnerId}}",
										"{{instanceId}}",
										"data",
										"{{dataId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Add attachment",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4e0a8157-5f87-46a5-8df1-f3097c021797",
										"exec": [
											"pm.test(\"Platform - Storage - Instance Data - Add attachment - Status - 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"     var jsonData = pm.response.json();\r",
											"    if(pm.expect(jsonData.data[0].id).not.eql(null))\r",
											"    {\r",
											"        pm.environment.set('dataId',jsonData.data[0].id);\r",
											"    }\r",
											"    pm.expect(jsonData.data[0].refs.length).to.equal(1);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "74e5cd5e-6bcf-41be-98dd-6c142716bcdf",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/octet-stream"
									},
									{
										"key": "Content-Disposition",
										"value": "attachment; filename=test.pdf",
										"type": "text"
									}
								],
								"body": {
									"mode": "file",
									"file": {
										"src": "test_file_pdf.pdf"
									}
								},
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/instances/{{instanceOwnerId}}/{{instanceId}}/data?elementType=attachment&refs={{dataId}}",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"instances",
										"{{instanceOwnerId}}",
										"{{instanceId}}",
										"data"
									],
									"query": [
										{
											"key": "elementType",
											"value": "attachment"
										},
										{
											"key": "refs",
											"value": "{{dataId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Attachment Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "62cd01a6-9c8c-4d36-8134-f51512efb018",
										"exec": [
											"pm.test(\"Platform - Storage - Instance Data - Get Attachment Data - Status - 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/instances/{{instanceOwnerId}}/{{instanceId}}/data/{{dataId}}",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"instances",
										"{{instanceOwnerId}}",
										"{{instanceId}}",
										"data",
										"{{dataId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Attachment Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cc714784-7a38-4224-aad8-11d36fe6c540",
										"exec": [
											"pm.test(\"Platform - Storage - Instance Data - Delete Attachment Data - Status - 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Platform - Storage - Instance Data - Delete Attachment Data - Status - Content\", function (){\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.length).to.equal(0);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/instances/{{instanceOwnerId}}/{{instanceId}}/data/{{dataId}}",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"instances",
										"{{instanceOwnerId}}",
										"{{instanceId}}",
										"data",
										"{{dataId}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Events",
					"item": [
						{
							"name": "Add instance event",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "59eb307d-9e00-43b3-a209-0b3b02ead6a8",
										"exec": [
											"pm.test(\"Platform - Storage - Instance Event - Add Instance Event - Status - 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Platform - Storage - Instance Event - Add Instance Event - Content - Matches\", function () {",
											"    var jsonData = pm.response.json();",
											"    if(pm.expect(jsonData.id).not.eql(null))",
											"    {",
											"        pm.environment.set('EventId', jsonData.id);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "86d4fdf9-388d-4841-bbeb-3ad6cecf94a1",
										"exec": [
											"pm.environment.set(\"EventId\",\"\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{    \n   \"instanceOwnerId\": \"{{instanceOwnerId}}\",\n   \"instanceId\": \"{{instanceOwnerId}}/{{instanceId}}\",\n   \"eventType\": \"created\",\n   \"userId\": 3,\n   \"authenticationLevel\": 1,\n   \"workflowStep\": \"8\",\n   \"enduserSystemId\": 2\n}"
								},
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/instances/{{instanceOwnerId}}/{{instanceId}}/events",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"instances",
										"{{instanceOwnerId}}",
										"{{instanceId}}",
										"events"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Event by Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "357288ce-372f-4b00-9b7a-42dc94990430",
										"exec": [
											"pm.test(\"Platform - Storage - Instance Event - Get Instance Event by ID- Status - 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/instances/{{instanceOwnerId}}/{{instanceId}}/events/{{EventId}}",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"instances",
										"{{instanceOwnerId}}",
										"{{instanceId}}",
										"events",
										"{{EventId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET All Events",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "357288ce-372f-4b00-9b7a-42dc94990430",
										"exec": [
											"pm.test(\"Platform - Storage - Instance Event - Get Instance Events - Status - 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Platform - Storage - Instance Event - Get Instance Events - Content - New Id found\", function () {",
											"    var jsonData = pm.response.json();",
											"    var eventIdFound = 'false';",
											"    for(var i =0; i<jsonData.length; i++)",
											"    {",
											"        var createdEventId = pm.environment.get(\"EventId\");",
											"        if(jsonData[i].id == createdEventId)",
											"        {",
											"            eventIdFound = 'true';",
											"            break;",
											"        }",
											"    }",
											"    if(eventIdFound != 'true')",
											"    {",
											"        pm.expect(eventIdFound).to.equal(true);",
											"    }",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/instances/{{instanceOwnerId}}/{{instanceId}}/events",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"instances",
										"{{instanceOwnerId}}",
										"{{instanceId}}",
										"events"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Events with type",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "04584cdf-bdf6-45e3-85f2-e5768b49208a",
										"exec": [
											"pm.test(\"Platform - Storage - Instance Event - Get Instance Events by type - Content - Created type events found\", function () {",
											"    pm.response.to.have.status(200);",
											"    var jsonData = pm.response.json();",
											"    var eventTypeCreated = 'true';",
											"    for(var i =0; i<jsonData.length; i++)",
											"    {",
											"        if(jsonData[i].eventType != 'created')",
											"        {",
											"            eventTypeCreated = 'false';",
											"            break;    ",
											"        }",
											"    }",
											"    if(eventTypeCreated != 'true')",
											"    {",
											"        pm.expect(eventIdFound).to.equal(true);",
											"    }",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/instances/{{instanceOwnerId}}/{{instanceId}}/events/?eventTypes=created",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"instances",
										"{{instanceOwnerId}}",
										"{{instanceId}}",
										"events",
										""
									],
									"query": [
										{
											"key": "eventTypes",
											"value": "created"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Events not retrieved by wrong time",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "546d0678-0ca9-44bd-a160-ebfc385882e7",
										"exec": [
											"pm.test(\"Platform - Storage - Instance Event - No Instance Events - Status - 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Platform - Storage - Instance Event - No Instance Events - Content - Matches\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Did not find any instance events\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8aa76d9e-95b4-4db6-a5d0-4b13afe1339d",
										"exec": [
											"var currentDate = new Date();",
											"var hoursToMinus = currentDate.getHours() - 1;",
											"currentDate.setHours(hoursToMinus);",
											"pm.environment.set(\"fromDate\", currentDate);",
											"var currentDate1 = new Date();",
											"var hoursToAdd = currentDate1.getHours() + 5;",
											"currentDate1.setHours(hoursToAdd);",
											"pm.environment.set(\"toDate\", currentDate1);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/instances/{{instanceOwnerId}}/{{instanceId}}/events/?from=2018-05-22T08:42:53&to=2018-06-22T08:42:53",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"instances",
										"{{instanceOwnerId}}",
										"{{instanceId}}",
										"events",
										""
									],
									"query": [
										{
											"key": "from",
											"value": "2018-05-22T08:42:53"
										},
										{
											"key": "to",
											"value": "2018-06-22T08:42:53"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE events",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "686160fc-c6de-4c3f-904a-fe9528f346a7",
										"exec": [
											"pm.test(\"Platform - Storage - Instance Event - Delete Instance Events - Status - 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Platform - Storage - Instance Event - Delete Instance Events - Content - Matches\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"succesfully deleted\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/instances/{{instanceOwnerId}}/{{instanceId}}/events",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"instances",
										"{{instanceOwnerId}}",
										"{{instanceId}}",
										"events"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "SBL",
					"item": [
						{
							"name": "POST Add instance",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "73bb7aa7-5269-42fc-ae97-b51511a8d97e",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"if(pm.response.code == 200)\r",
											"{\r",
											"    pm.environment.set('instanceOwnerId', jsonData.instanceOwnerId);\r",
											"    pm.environment.set('appId',jsonData.appId);\r",
											"    var instanceId = jsonData.id;\r",
											"    instanceId = instanceId.toString();\r",
											"    instanceId = instanceId.split('/');\r",
											"    instanceId = instanceId[1];\r",
											"    pm.environment.set('instanceId',instanceId);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e1f629f2-d9d1-4cc5-9698-9c83bf385f43",
										"exec": [
											"pm.environment.set(\"instanceId\",\"\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"instanceOwnerId\": \"{{instanceOwnerId}}\",\r\n    \"labels\" : [ \"gr\", \"x2\" ],\r\n    \"appId\" : \"{{appId}}\",\r\n    \"dueDateTime\": \"2019-06-01T12:00:00Z\",\r\n    \"visibleDateTime\": \"2019-05-20T00:00:00Z\",\r\n    \"presentationField\": { \"nb\": \"Arbeidsmelding\" }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/instances?appId={{appId}}",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"instances"
									],
									"query": [
										{
											"key": "appId",
											"value": "{{appId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST visibleDate in the future",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4081c1b5-a9a1-4b52-95b3-6b89964d2fb6",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"if(pm.response.code == 200)\r",
											"{\r",
											"    var instanceId = jsonData.id;\r",
											"    instanceId = instanceId.toString();\r",
											"    instanceId = instanceId.split('/');\r",
											"    instanceId = instanceId[1];\r",
											"    pm.environment.set('FutureDateinstanceId',instanceId);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "4ead76e4-8ea2-4551-81ed-2dc459e8f380",
										"exec": [
											"pm.environment.set(\"FutureDateinstanceId\",\"\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"instanceOwnerId\": \"{{instanceOwnerId}}\",\r\n    \"labels\" : [ \"gr\", \"x2\" ],\r\n    \"appId\" : \"{{appId}}\",\r\n    \"dueDateTime\": \"2021-06-20T12:00:00Z\",\r\n    \"visibleDateTime\": \"2021-06-20T00:00:00Z\",\r\n    \"presentationField\": { \"nb\": \"Arbeidsmelding\" }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/instances?appId={{appId}}",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"instances"
									],
									"query": [
										{
											"key": "appId",
											"value": "{{appId}}"
										}
									]
								},
								"description": "Should be able to GET instances with visibleDate set in the future"
							},
							"response": []
						},
						{
							"name": "GET All instances",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86592b19-cde0-42f1-8b7c-297eaee24071",
										"exec": [
											"pm.test(\"Platform - Storage - SBL - Get Instances for SBL - Status - 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Platform - Storage - SBL - GET Instances for SBL - Content - Does not contain future visible instances\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.not.contain(pm.environment.get(\"FutureDateinstanceId\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/sbl/instances/{{instanceOwnerId}}?state=active&language=nb",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"sbl",
										"instances",
										"{{instanceOwnerId}}"
									],
									"query": [
										{
											"key": "state",
											"value": "active"
										},
										{
											"key": "language",
											"value": "nb"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Soft Delete Instance",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f0c6b00b-4213-4095-8a83-f9cf7cc5769e",
										"exec": [
											"pm.test(\"Platform - Storage - SBL - Soft Delete Instance - Status - 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Platform - Storage - SBL - Soft Delete Instance - Content - Matches\", function () {\r",
											"    pm.expect(pm.response.text()).equal('true');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"labels\" : [ \"gr\", \"asdf\" ],\r\n    \"appId\" : \"{{appId}}\",\r\n    \"dueDateTime\": \"2019-06-01T12:00:00Z\",\r\n    \"visibleDateTime\": \"2019-05-20T00:00:00Z\",\r\n    \"presentationField\": { \"nb\": \"Arbeidsmelding\" }\r\n}"
								},
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/sbl/instances/{{instanceOwnerId}}/{{instanceId}}?hard=false",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"sbl",
										"instances",
										"{{instanceOwnerId}}",
										"{{instanceId}}"
									],
									"query": [
										{
											"key": "hard",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "PUT Restore Deleted message",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "72cf897c-1a3c-46e3-9d9c-67c1159588c8",
										"exec": [
											"pm.test(\"Platform - Storage - SBL - Restore Instance - Status - 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.expect(pm.response.text()).equal('true');\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/sbl/instances/{{instanceOwnerId}}/{{instanceId}}/undelete",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"sbl",
										"instances",
										"{{instanceOwnerId}}",
										"{{instanceId}}",
										"undelete"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Instance by Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0967cde0-022c-4148-b82d-5d490cd417e5",
										"exec": [
											"pm.test(\"Platform - Storage - SBL - Get Instance by id for SBL - Status - 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Platform - Storage - SBL - Get Instance by id for SBL - Verify - Restored Instance\", function () {\r",
											"    var instanceId = pm.environment.get('instanceId');\r",
											"    pm.expect(pm.response.json().id).equal(instanceId);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/sbl/instances/{{instanceOwnerId}}/{{instanceId}}",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"sbl",
										"instances",
										"{{instanceOwnerId}}",
										"{{instanceId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Instance Events",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0967cde0-022c-4148-b82d-5d490cd417e5",
										"exec": [
											"pm.test(\"Platform - Storage - SBL - Get Instance events - Status - 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Platform - Storage - SBL - Get Instance Events for SBL - Status - Content\", function (){\r",
											"    var jsonData = pm.response.json();\r",
											"    var eventsCount = jsonData.length;\r",
											"    pm.expect(eventsCount).to.equal(3);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/sbl/instances/{{instanceOwnerId}}/{{instanceId}}/events",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"sbl",
										"instances",
										"{{instanceOwnerId}}",
										"{{instanceId}}",
										"events"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Hard Delete Instance",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f0c6b00b-4213-4095-8a83-f9cf7cc5769e",
										"exec": [
											"pm.test(\"Platform - Storage - Instance - Delete Instance - Status - 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.expect(pm.response.text()).equal('true');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"labels\" : [ \"gr\", \"asdf\" ],\r\n    \"appId\" : \"{{appId}}\",\r\n    \"dueDateTime\": \"2019-06-01T12:00:00Z\",\r\n    \"visibleDateTime\": \"2019-05-20T00:00:00Z\",\r\n    \"presentationField\": { \"nb\": \"Arbeidsmelding\" }\r\n}"
								},
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/sbl/instances/{{instanceOwnerId}}/{{instanceId}}?hard=true",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"sbl",
										"instances",
										"{{instanceOwnerId}}",
										"{{instanceId}}"
									],
									"query": [
										{
											"key": "hard",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Hard Delete future Instance",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f0c6b00b-4213-4095-8a83-f9cf7cc5769e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"labels\" : [ \"gr\", \"asdf\" ],\r\n    \"appId\" : \"{{appId}}\",\r\n    \"dueDateTime\": \"2021-06-20T12:00:00Z\",\r\n    \"visibleDateTime\": \"2021-06-20T00:00:00Z\",\r\n    \"presentationField\": { \"nb\": \"Arbeidsmelding\" }\r\n}"
								},
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/sbl/instances/{{instanceOwnerId}}/{{FutureDateinstanceId}}?hard=true",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"sbl",
										"instances",
										"{{instanceOwnerId}}",
										"{{FutureDateinstanceId}}"
									],
									"query": [
										{
											"key": "hard",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "PUT Restore Hard Deleted message - negative",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3d1598d9-8cc0-418f-9171-22db9db7659c",
										"exec": [
											"pm.test(\"Platform - Storage - SBL - Restore Instance - Status - 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.expect(pm.response.text()).to.include(\"Instance was permanently deleted and cannot be restored\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/sbl/instances/{{instanceOwnerId}}/{{instanceId}}/undelete",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"sbl",
										"instances",
										"{{instanceOwnerId}}",
										"{{instanceId}}",
										"undelete"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "CleanUp",
					"item": [
						{
							"name": "GET Instances by InstanceOwnerID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d46ea587-c309-4247-a8f5-4a36f278ff82",
										"exec": [
											"if (pm.response.code == 200)",
											"{",
											"    var jsonData = pm.response.json();",
											"    var instanceCount = jsonData.length;",
											"    if (instanceCount !== 0)",
											"    {",
											"        var instanceId = jsonData[0].id;",
											"        instanceId = instanceId.split('/');",
											"        instanceId = instanceId[1];",
											"        pm.environment.set('instanceId', instanceId);",
											"    }",
											"    else",
											"    {",
											"        postman.setNextRequest(\"DELETE App\");",
											"    }",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/hal+json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/instances/{{instanceOwnerId}}",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"instances",
										"{{instanceOwnerId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CleanUp App instances",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f0c6b00b-4213-4095-8a83-f9cf7cc5769e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"labels\" : [ \"gr\", \"asdf\" ],\r\n    \"appId\" : \"{{appId}}\",\r\n    \"dueDateTime\": \"2019-06-01T12:00:00Z\",\r\n    \"visibleDateTime\": \"2019-05-20T00:00:00Z\",\r\n    \"presentationField\": { \"nb\": \"Arbeidsmelding\" }\r\n}"
								},
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/instances/{{instanceOwnerId}}/{{instanceId}}?hard=true",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"instances",
										"{{instanceOwnerId}}",
										"{{instanceId}}"
									],
									"query": [
										{
											"key": "hard",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Check for more instances",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d46ea587-c309-4247-a8f5-4a36f278ff82",
										"exec": [
											"if (pm.response.code == 200)",
											"    {",
											"    var jsonData = pm.response.json();",
											"    var instanceCount = jsonData.length;",
											"    if (instanceCount !== 0)",
											"    {",
											"        var instanceId = jsonData[0].id;",
											"        instanceId = instanceId.split('/');",
											"        instanceId = instanceId[1];",
											"        pm.environment.set('instanceId', instanceId);",
											"        postman.setNextRequest(\"CleanUp App instances\");",
											"    }",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/hal+json"
									}
								],
								"url": {
									"raw": "https://platform.{{envUrl}}/storage/api/v1/instances/{{instanceOwnerId}}",
									"protocol": "https",
									"host": [
										"platform",
										"{{envUrl}}"
									],
									"path": [
										"storage",
										"api",
										"v1",
										"instances",
										"{{instanceOwnerId}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "DELETE App",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c9b3b6a7-ab5e-4f32-a63c-3e0150654efb",
								"exec": [
									"pm.test(\"Platform - Storage - Applications - Delete App - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://platform.{{envUrl}}/storage/api/v1/applications/{{org}}/{{app}}?hard=true",
							"protocol": "https",
							"host": [
								"platform",
								"{{envUrl}}"
							],
							"path": [
								"storage",
								"api",
								"v1",
								"applications",
								"{{org}}",
								"{{app}}"
							],
							"query": [
								{
									"key": "hard",
									"value": "true"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "PDF",
			"item": [
				{
					"name": "POST Generate PDF",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8193fe76-6379-4222-9bb9-55f751c9fd8e",
								"exec": [
									"pm.test(\"Platform - PDF - Generate - Status - 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Platform - PDF - Generate - File generated\", function () {\r",
									"   pm.response.to.have.header(\"Content-Disposition\");\r",
									"   pm.response.to.be.header(\"Content-Disposition\", \"attachment; filename=receipt.pdf\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"textResources\": {\r\n\t  \"language\": \"nn-NO\",\r\n\t  \"resources\": [\r\n\t    {\r\n\t      \"id\": \"25795.OppgavegiverNavnPreutfyltdatadef25795.Label\",\r\n\t      \"value\": \"Namn\"\r\n\t    },\r\n\t    {\r\n\t      \"id\": \"25796.OppgavegiverAdressePreutfyltdatadef25796.Label\",\r\n\t      \"value\": \"Adresse\"\r\n\t    },\r\n\t    {\r\n\t      \"id\": \"25797.OppgavegiverPostnummerPreutfyltdatadef25797.Label\",\r\n\t      \"value\": \"Postnummer\"\r\n\t    },\r\n\t    {\r\n\t      \"id\": \"25798.OppgavegiverPoststedPreutfyltdatadef25798.Label\",\r\n\t      \"value\": \"Poststad med veldig mange ord slik at linjen må splittes men det er bare gøy det da Poststad med veldig mange ord slik at linjen må splittes men det er bare gøy det da \"\r\n\t    },\r\n\t    {\r\n\t      \"id\": \"26.OppgavegiverFodselsnummerdatadef26.Label\",\r\n\t      \"value\": \"Fødselsnummer\"\r\n\t    },\r\n\t    {\r\n\t      \"id\": \"18.EnhetOrganisasjonsnummerdatadef18.Label\",\r\n\t      \"value\": \"Organisasjonsnummer\"\r\n\t    },\r\n\t    {\r\n\t      \"id\": \"17.EnhetKommunenummerdatadef17.Label\",\r\n\t      \"value\": \"Kommune\"\r\n\t    },\r\n\t    {\r\n\t      \"id\": \"17.EnhetKommunenummerdatadef17.PlaceHolder\",\r\n\t      \"value\": \"Kontorkommuna til selskapet\"\r\n\t    },\r\n\t    {\r\n\t      \"id\": \"2.KontaktpersonNavndatadef2.Label\",\r\n\t      \"value\": \"Namn\"\r\n\t    },\r\n\t    {\r\n\t      \"id\": \"2751.KontaktpersonAdressedatadef2751.Label\",\r\n\t      \"value\": \"Adresse\"\r\n\t    },\r\n\t    {\r\n\t      \"id\": \"10441.KontaktpersonPostnummerdatadef10441.Label\",\r\n\t      \"value\": \"Postnummer\"\r\n\t    },\r\n\t    {\r\n\t      \"id\": \"10442.KontaktpersonPoststeddatadef10442.Label\",\r\n\t      \"value\": \"Poststed\"\r\n\t    },\r\n\t    {\r\n\t      \"id\": \"27688.KontaktpersonEPostdatadef27688.Label\",\r\n\t      \"value\": \"Epostadresse\"\r\n\t    },\r\n\t    {\r\n\t      \"id\": \"3.KontaktpersonTelefonnummerdatadef3.Label\",\r\n\t      \"value\": \"Telefonnummer\"\r\n\t    },\r\n\t    {\r\n\t      \"id\": \"25455.KlageGjeldendeInntektsardatadef25455.Label\",\r\n\t      \"value\": \"Klaga/oppmodninga om endring gjeld inntektsåret:\"\r\n\t    },\r\n\t    {\r\n\t      \"id\": \"25455.KlageGjeldendeInntektsardatadef25455.Help\",\r\n\t      \"value\": \"Gjeld klaga andre inntektsår enn siste år er klagefristen utløypt og  du har ikkje rett til å få ho behandla. Klaga blir i staden behandla  som ei oppmoding om å endre likninga.  Gjeld klaga/oppmoding fleire inntektsår treng du berre å oppgi det  siste av inntektsåra. Det må imidlertid gå klart fram av grunngivinga  kva inntektsår klaga/oppmodinga gjeld.\"\r\n\t    },\r\n\t    {\r\n\t      \"id\": \"25455.KlageGjeldendeInntektsardatadef25455.PlaceHolder\",\r\n\t      \"value\": \"NB! Klageskjemaet skal du bare bruke for å klage på feil/endringar i  skatteoppgjeret du har mottatt.  Gi opp kva år klaga/oppmodninga om endring gjeld.\"\r\n\t    },\r\n\t    {\r\n\t      \"id\": \"25454.KlagemeldingSendtInnenKlagefristdatadef25454.Label\",\r\n\t      \"value\": \"Klaga er sendt innan fristen\"\r\n\t    },\r\n\t    {\r\n\t      \"id\": \"25454.KlagemeldingSendtInnenKlagefristdatadef25454.Help\",\r\n\t      \"value\": \"Leveres klaga innan klagefristen?  For å klage over ligninga må du levere klaga innan seks veker etter at  skatteoppgjeret er sendt skattytar. Klagefristen går likevel ikkje ut  tidlegare enn før 10.august.  Se lignl. § 9-2 nr 4 og 5.\"\r\n\t    },\r\n\t    {\r\n\t      \"id\": \"25456.KlageUtloptKlagefristBegrunnelsedatadef25456.Label\",\r\n\t      \"value\": \"Grunngiving for at likninga skal tas opp til endring sjølv om  klagefristen er utløypt.\"\r\n\t    },\r\n\t    {\r\n\t      \"id\": \"25456.KlageUtloptKlagefristBegrunnelsedatadef25456.Help\",\r\n\t      \"value\": \"Er klagefristen oversittet har du ikkje rett til å få klaga behandla.  Det same gjeld om likninga er fastsett ved skjønn etter ligningslova  § 8-2.  Du kan oppmode skattekontoret om å behandle klaga. Ei slik oppmoding  må grunngivast. Ved vurderinga av om klaga skal behandlast skal det  mellom anna takast omsyn til spørsmålet si betydning, skattytaren  sine\\n                                    forhold, opplysning av saka og den tida som er gått.\"\r\n\t    },\r\n\t    {\r\n\t      \"id\": \"25456.KlageUtloptKlagefristBegrunnelsedatadef25456.PlaceHolder\",\r\n\t      \"value\": \"Grunngi kvifor skattekontoret skal behandle klaga sjølv om  klagefristen er utløypt.  NB! Inneheld grunngivinga sensitive opplysningar (t.d. om sjukdom) må  du sende klaga i brev til skattekontoret.\"\r\n\t    },\r\n\t    {\r\n\t      \"id\": \"25457.KlageSpesifiseringdatadef25457.Label\",\r\n\t      \"value\": \"123456789123456789123456789123456789123456789123456789abcdefghijklmnopqrst123456789123456789123456789abcdefghijklmnopqrst123456789123456789123456789abcdefghijklmnopqrst123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789 test test 123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789\"\r\n\t    },\r\n\t    {\r\n\t      \"id\": \"12345.KlageSpesifiseringgdatadef12345.Label\",\r\n\t      \"value\": \"Noe annet\"\r\n\t    },\r\n\t    {\r\n\t      \"id\": \"23456.KlageSpesifiseringggdatadef23456.Label\",\r\n\t      \"value\": \"Og en tulleting til slutt\"\r\n\t    },\r\n\t    {\r\n\t      \"id\": \"Skjema.Label\",\r\n\t      \"value\": \"RF-1117 Klage på likninga\"\r\n\t    },\r\n\t    {\r\n\t      \"id\": \"Skjema.Help\",\r\n\t      \"value\": \"Klageskjemaet gjeld for alle grupper av skattytarar. NB! Inneheld  klaga sensitive opplysningar (t.d om sjukdom) kan du ikkje levere  klaga elektronisk. Ho må sendast i brev til skattekontoret.\"\r\n\t    }\r\n\t  ]\r\n\t},\r\n\t\"formLayout\": {\r\n\t  \"data\": {\r\n\t    \"layout\": [\r\n\t      {\r\n\t        \"id\": \"0d292a83-fe66-4f20-a40a-8b5d42520ccb\",\r\n\t        \"type\": \"Input\",\r\n\t        \"textResourceBindings\": {\r\n\t          \"title\": \"Skjema.Label\",\r\n\t          \"description\": \"Skjema.Help\"\r\n\t        },\r\n\t        \"dataModelBindings\": {\r\n\t          \"simpleBinding\": \"Skattyterinfor-grp-5801.info-grp-5802.OppgavegiverNavnPreutfylt-datadef-25795.value\"\r\n\t        },\r\n\t        \"required\": true,\r\n\t        \"readOnly\": false\r\n\t      },\r\n\t      {\r\n\t        \"componentType\": 8,\r\n\t        \"dataModelBindings\": {},\r\n\t        \"displayMode\": \"list\",\r\n\t        \"id\": \"00389210-7f6d-4bf0-8a6e-a995c71d0f5e\",\r\n\t        \"maxFileSizeInMB\": 25,\r\n\t        \"maxNumberOfAttachments\": \"15\",\r\n\t        \"minNumberOfAttachments\": 1,\r\n\t        \"required\": true,\r\n\t        \"textResourceBindings\": {\r\n\t          \"title\": \"Vedlegg\",\r\n\t          \"description\": \"Vennligst last opp de vedleggene du mener beskriver situasjonen din best.\"},\r\n\t        \"title\": \"Vedlegg\",\r\n\t        \"type\": \"FileUpload\"\r\n\t      },\r\n\t      {\r\n\t        \"id\": \"20158575-6db3-429a-95d6-c49e57d77fbb\",\r\n\t        \"type\": \"TextField\",\r\n\t        \"textResourceBindings\": {\r\n\t          \"title\": \"25455.KlageGjeldendeInntektsardatadef25455.Label\",\r\n\t          \"description\": \"25455.KlageGjeldendeInntektsardatadef25455.Help\"\r\n\t        },\r\n\t        \"dataModelBindings\": {\r\n\t          \"simpleBinding\": \"Skattyterinfor-grp-5802.info-grp-5803.OppgavegiverNavnPreutfylt-datadef-25796.value\"\r\n\t        },\r\n\t        \"required\": true,\r\n\t        \"readOnly\": false\r\n\t      },\r\n\t      {\r\n\t        \"id\": \"28ff99b3-0d48-484a-8a6d-123123123\",\r\n\t        \"type\": \"CheckBoxes\",\r\n\t        \"textResourceBindings\": {\r\n\t          \"title\": \"3.KontaktpersonTelefonnummerdatadef3.Label\",\r\n\t          \"description\": \"25454.KlagemeldingSendtInnenKlagefristdatadef25454.Label\"\r\n\t        },\r\n\t        \"dataModelBindings\": {\r\n\t          \"simpleBinding\": \"Skattyterinfor-grp-5803.info-grp-5804.OppgavegiverNavnPreutfylt-datadef-25797.value\"\r\n\t        },\r\n\t        \"textResourceId\": \"Standard.Button.Button\",\r\n\t        \"customType\": \"Standard\",\r\n\t        \"options\": [{\"label\": \"Valg 1\", \"value\": \"Verdi\"}, {\"label\": \"Valg 2\", \"value\": \"Verdi 2\"}]\r\n\t      },\r\n\t      {\r\n\t        \"id\": \"20158575-6db3-429a-95d6-c49e57d77ebb\",\r\n\t        \"type\": \"TextField\",\r\n\t        \"textResourceBindings\": {\r\n\t          \"title\": \"25455.KlageGjeldendeInntektsardatadef25455.Label\",\r\n\t          \"description\": \"25455.KlageGjeldendeInntektsardatadef25455.Help\"\r\n\t        },\r\n\t        \"dataModelBindings\": {\r\n\t          \"simpleBinding\": \"Skattyterinfor-grp-5802.info-grp-5803.OppgavegiverNavnPreutfylt-datadef-25796.value\"\r\n\t        },\r\n\t        \"required\": true,\r\n\t        \"readOnly\": false\r\n\t      },\r\n\t      {\r\n\t        \"id\": \"20158575-6db3-429a-95d6-c49e57d77ebc\",\r\n\t        \"type\": \"TextField\",\r\n\t        \"textResourceBindings\": {\r\n\t          \"title\": \"25455.KlageGjeldendeInntektsardatadef25455.Label\",\r\n\t          \"description\": \"25455.KlageGjeldendeInntektsardatadef25455.Help\"\r\n\t        },\r\n\t        \"dataModelBindings\": {\r\n\t          \"simpleBinding\": \"Skattyterinfor-grp-5802.info-grp-5803.OppgavegiverNavnPreutfylt-datadef-25796.value\"\r\n\t        },\r\n\t        \"required\": true,\r\n\t        \"readOnly\": false\r\n\t      },\r\n\t      {\r\n\t        \"id\": \"20158575-6db3-429a-95d6-c49e57d77ebd\",\r\n\t        \"type\": \"TextField\",\r\n\t        \"textResourceBindings\": {\r\n\t          \"title\": \"25455.KlageGjeldendeInntektsardatadef25455.Label\",\r\n\t          \"description\": \"25455.KlageGjeldendeInntektsardatadef25455.Help\"\r\n\t        },\r\n\t        \"dataModelBindings\": {\r\n\t          \"simpleBinding\": \"Skattyterinfor-grp-5802.info-grp-5803.OppgavegiverNavnPreutfylt-datadef-25796.value\"\r\n\t        },\r\n\t        \"required\": true,\r\n\t        \"readOnly\": false\r\n\t      },\r\n\t      {\r\n\t        \"id\": \"20158575-6db3-429a-95d6-c49e57d77ebf\",\r\n\t        \"type\": \"TextField\",\r\n\t        \"textResourceBindings\": {\r\n\t          \"title\": \"25455.KlageGjeldendeInntektsardatadef25455.Label\",\r\n\t          \"description\": \"25455.KlageGjeldendeInntektsardatadef25455.Help\"\r\n\t        },\r\n\t        \"dataModelBindings\": {\r\n\t          \"simpleBinding\": \"Skattyterinfor-grp-5802.info-grp-5803.OppgavegiverNavnPreutfylt-datadef-25796.value\"\r\n\t        },\r\n\t        \"required\": true,\r\n\t        \"readOnly\": false\r\n\t      },\r\n\t      {\r\n\t        \"id\": \"20158575-6db3-429a-95d6-c49e57d77ecb\",\r\n\t        \"type\": \"TextField\",\r\n\t        \"textResourceBindings\": {\r\n\t          \"title\": \"25455.KlageGjeldendeInntektsardatadef25455.Label\",\r\n\t          \"description\": \"25455.KlageGjeldendeInntektsardatadef25455.Help\"\r\n\t        },\r\n\t        \"dataModelBindings\": {\r\n\t          \"simpleBinding\": \"Skattyterinfor-grp-5802.info-grp-5803.OppgavegiverNavnPreutfylt-datadef-25796.value\"\r\n\t        },\r\n\t        \"required\": true,\r\n\t        \"readOnly\": false\r\n\t      },\r\n\t      {\r\n\t        \"id\": \"20158575-6db3-429a-95d6-c49e57d77edb\",\r\n\t        \"type\": \"TextField\",\r\n\t        \"textResourceBindings\": {\r\n\t          \"title\": \"25455.KlageGjeldendeInntektsardatadef25455.Label\",\r\n\t          \"description\": \"25455.KlageGjeldendeInntektsardatadef25455.Help\"\r\n\t        },\r\n\t        \"dataModelBindings\": {\r\n\t          \"simpleBinding\": \"Skattyterinfor-grp-5802.info-grp-5803.OppgavegiverNavnPreutfylt-datadef-25796.value\"\r\n\t        },\r\n\t        \"required\": true,\r\n\t        \"readOnly\": false\r\n\t      }\r\n\t    ]\r\n\t  }\r\n\t},\r\n\t\"data\": \"PD94bWwgdmVyc2lvbj0iMS4wIj8+CjxTa2plbWEgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeG1sbnM6eHNkPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgc2tqZW1hbnVtbWVyPSIxMjQzIiBzcGVzaWZpa2Fzam9uc251bW1lcj0iMTA3MDIiIGJsYW5rZXR0bnVtbWVyPSJSRi0xMTE3IiB0aXR0ZWw9IktsYWdlIHDDpSBsaWtuaW5nZW4iIGdydXBwZWlkPSI1ODAwIj4KPFNrYXR0eXRlcmluZm9yLWdycC01ODAxIGdydXBwZWlkPSI1ODAxIj4KICA8aW5mby1ncnAtNTgwMiBncnVwcGVpZD0iNTgwMiI+CiAgICA8T3BwZ2F2ZWdpdmVyTmF2blByZXV0ZnlsdC1kYXRhZGVmLTI1Nzk1IG9yaWQ9IjI1Nzk1Ij5Ob2UgZGF0YTwvT3BwZ2F2ZWdpdmVyTmF2blByZXV0ZnlsdC1kYXRhZGVmLTI1Nzk1PgogIDwvaW5mby1ncnAtNTgwMj4KPC9Ta2F0dHl0ZXJpbmZvci1ncnAtNTgwMT4KPFNrYXR0eXRlcmluZm9yLWdycC01ODAyIGdydXBwZWlkPSI1ODAyIj4KICA8aW5mby1ncnAtNTgwMyBncnVwcGVpZD0iNTgwMiI+CiAgICA8T3BwZ2F2ZWdpdmVyTmF2blByZXV0ZnlsdC1kYXRhZGVmLTI1Nzk2IG9yaWQ9IjI1Nzk2Ij5EZXR0ZSBlciBvZ3PDpSBoZW50ZXQgZnJhIHhtbC4gRGV0dGUgZXIgZXQgbGFuZ3Qgc3Zhci4gRGV0dGUgZXIgb2dzw6UgaGVudGV0IGZyYSB4bWwuIERldHRlIGVyIGV0IGxhbmd0IHN2YXIuIERldHRlIGVyIG9nc8OlIGhlbnRldCBmcmEgeG1sLiBEZXR0ZSBlciBldCBsYW5ndCBzdmFyLiBEZXR0ZSBlciBvZ3PDpSBoZW50ZXQgZnJhIHhtbC4gRGV0dGUgZXIgZXQgbGFuZ3Qgc3Zhci4gRGV0dGUgZXIgb2dzw6UgaGVudGV0IGZyYSB4bWwuIERldHRlIGVyIGV0IGxhbmd0IHN2YXIuIERldHRlIGVyIGZha3Rpc2sgZW5kYSBsaXR0IGxlbmdlciBtZW4gc2xpayBlciBkZXQgbsOlIGJhcmUuIFPDpW5uIGthbiBkZXQgZ8OlIGthbiBtYW4gc2kuPC9PcHBnYXZlZ2l2ZXJOYXZuUHJldXRmeWx0LWRhdGFkZWYtMjU3OTY+CiAgPC9pbmZvLWdycC01ODAzPgo8L1NrYXR0eXRlcmluZm9yLWdycC01ODAyPgo8U2thdHR5dGVyaW5mb3ItZ3JwLTU4MDMgZ3J1cHBlaWQ9IjU4MDMiPgogIDxpbmZvLWdycC01ODA0IGdydXBwZWlkPSI1ODAyIj4KICAgIDxPcHBnYXZlZ2l2ZXJOYXZuUHJldXRmeWx0LWRhdGFkZWYtMjU3OTcgb3JpZD0iMjU3OTciPkRldHRlIGVyIG9nc8OlIGhlbnRldCBmcmEgeG1sLiBEZXR0ZSBlciBldCBsYW5ndCBzdmFyLiBEZXR0ZSBlciBvZ3PDpSBoZW50ZXQgZnJhIHhtbC4gRGV0dGUgZXIgZXQgbGFuZ3Qgc3Zhci4gRGV0dGUgZXIgb2dzw6UgaGVudGV0IGZyYSB4bWwuIERldHRlIGVyIGV0IGxhbmd0IHN2YXIuIERldHRlIGVyIG9nc8OlIGhlbnRldCBmcmEgeG1sLiBEZXR0ZSBlciBldCBsYW5ndCBzdmFyLiBEZXR0ZSBlciBvZ3PDpSBoZW50ZXQgZnJhIHhtbC4gRGV0dGUgZXIgZXQgbGFuZ3Qgc3Zhci48L09wcGdhdmVnaXZlck5hdm5QcmV1dGZ5bHQtZGF0YWRlZi0yNTc5Nz4KICA8L2luZm8tZ3JwLTU4MDQ+CjwvU2thdHR5dGVyaW5mb3ItZ3JwLTU4MDM+CjwvU2tqZW1hPgo=\",\r\n\t\"instance\": {\r\n\t  \"id\": \"ef417f14-65b6-4504-b082-14b40bd2bb74\",\r\n\t  \"instanceOwnerId\": \"50002121\",\r\n\t  \"appId\": \"tdd/sefiiler\",\r\n\t  \"org\": \"tdd\",\r\n\t  \"createdDateTime\": \"2019-10-14T10:09:04.2558408Z\",\r\n\t  \"lastChangedDateTime\": \"2019-10-14T10:12:27.7933369Z\",\r\n\t  \"presentationField\": {\r\n\t    \"nb\": \"sefiiler\"\r\n\t  },\r\n\t  \"process\": {\r\n\t    \"started\": \"2019-10-14T10:12:25.4503562Z\",\r\n\t    \"currentTask\": {\r\n\t      \"elementId\": \"Archived\"\r\n\t    },\r\n\t    \"ended\": \"2019-10-14T10:12:27.7835428Z\"\r\n\t  },\r\n\t  \"instanceState\": {\r\n\t    \"isDeleted\": false,\r\n\t    \"isMarkedForHardDelete\": false,\r\n\t    \"isArchived\": true,\r\n\t    \"archivedDateTime\": \"2019-10-14T10:12:27.7835455Z\"\r\n\t  },\r\n\t  \"data\": [\r\n\t    {\r\n\t      \"id\": \"021b7c7e-03df-4cf3-a880-57a331060db3\",\r\n\t      \"elementType\": \"default\",\r\n\t      \"contentType\": \"application/xml\",\r\n\t      \"storageUrl\": \"tdd/sefiiler/ef417f14-65b6-4504-b082-14b40bd2bb74/data/021b7c7e-03df-4cf3-a880-57a331060db3\",\r\n\t      \"fileSize\": 250,\r\n\t      \"isLocked\": false,\r\n\t      \"createdDateTime\": \"2019-10-14T10:09:04.5363251Z\",\r\n\t      \"lastChangedDateTime\": \"2019-10-14T10:12:25.2930356Z\"\r\n\t    },\r\n\t    {\r\n\t      \"id\": \"86055078-61cd-4306-9df1-1ce6e5e1f905\",\r\n\t      \"elementType\": \"00389210-7f6d-4bf0-8a6e-a995c71d0f5e\",\r\n\t      \"fileName\": \"scorereport.pdf\",\r\n\t      \"contentType\": \"application/pdf\",\r\n\t      \"storageUrl\": \"tdd/sefiiler/ef417f14-65b6-4504-b082-14b40bd2bb74/data/86055078-61cd-4306-9df1-1ce6e5e1f905\",\r\n\t      \"fileSize\": 21099,\r\n\t      \"isLocked\": false,\r\n\t      \"createdDateTime\": \"2019-10-14T10:11:54.2414985Z\",\r\n\t      \"lastChangedDateTime\": \"2019-10-14T10:11:54.2414985Z\"\r\n\t    },\r\n\t    {\r\n\t      \"id\": \"b3f5701b-b34d-4010-8a1e-c213d9d82a73\",\r\n\t      \"elementType\": \"00389210-7f6d-4bf0-8a6e-a995c71d0f5e\",\r\n\t      \"fileName\": \"IMG_2034_2333.jpeg\",\r\n\t      \"contentType\": \"application/pdf\",\r\n\t      \"storageUrl\": \"tdd/sefiiler/ef417f14-65b6-4504-b082-14b40bd2bb74/data/b3f5701b-b34d-4010-8a1e-c213d9d82a73\",\r\n\t      \"fileSize\": 22021,\r\n\t      \"isLocked\": false,\r\n\t      \"createdDateTime\": \"2019-10-14T10:12:15.7301267Z\",\r\n\t      \"lastChangedDateTime\": \"2019-10-14T10:12:15.7301267Z\"\r\n\t    }\r\n\t  ],\r\n\t  \"_rid\": \"HQQcAPp2ENibAQAAAAAAAA==\",\r\n\t  \"_self\": \"dbs/HQQcAA==/colls/HQQcAPp2ENg=/docs/HQQcAPp2ENibAQAAAAAAAA==/\",\r\n\t  \"_etag\": \"\\\"0800bba6-0000-0d00-0000-5da44a0b0000\\\"\",\r\n\t  \"_attachments\": \"attachments/\",\r\n\t  \"_ts\": 1571047947\r\n\t},\r\n\t\"party\": {\"name\": \"Ola Nordmann\", \"ssn\": \"1234\"},\r\n\t\"userParty\": {\"name\": \"Kari Nordmann\", \"ssn\": \"123224\"}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://platform.{{envUrl}}/pdf/api/v1/generate",
							"protocol": "https",
							"host": [
								"platform",
								"{{envUrl}}"
							],
							"path": [
								"pdf",
								"api",
								"v1",
								"generate"
							]
						},
						"description": "API for creating a receipt pdf for an archived altinn app."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}
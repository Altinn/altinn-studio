import type { DataModelFieldElement } from 'app-shared/types/DataModelFieldElement';
import type { DataModelMetadataResponse } from 'app-shared/types/api/DataModelMetadataResponse';

export const dataModelMetadataResponseMock: DataModelMetadataResponse = {
  elements: {
    defaultModel: {
      id: 'defaultModel',
      type: 'ComplexType',
      dataBindingName: null,
      displayString: 'defaultModel',
      isReadOnly: false,
      isTagContent: false,
      jsonSchemaPointer: '#/definitions/defaultModel',
      maxOccurs: 1,
      minOccurs: 1,
      name: 'defaultModel',
      parentElement: null,
      restrictions: [],
      texts: [],
      xmlSchemaXPath: '/defaultModel',
      xPath: '/defaultModel',
    },
    'defaultModel.field1': {
      id: 'defaultModel.field1',
      type: 'SimpleType',
      dataBindingName: 'field1',
      displayString: 'defaultModel.field1',
      isReadOnly: false,
      isTagContent: false,
      jsonSchemaPointer: '#/definitions/defaultModel/properties/field1',
      maxOccurs: 1,
      minOccurs: 1,
      name: 'field1',
      parentElement: 'defaultModel',
      restrictions: [],
      texts: [],
      xmlSchemaXPath: '/defaultModel/field1',
      xPath: '/defaultModel/field1',
    },
    'defaultModel.field2': {
      id: 'defaultModel.field2',
      type: 'SimpleType',
      dataBindingName: 'field2',
      displayString: 'defaultModel.field2',
      isReadOnly: false,
      isTagContent: false,
      jsonSchemaPointer: '#/definitions/defaultModel/properties/field2',
      maxOccurs: 1,
      minOccurs: 1,
      name: 'field2',
      parentElement: 'defaultModel',
      restrictions: [],
      texts: [],
      xmlSchemaXPath: '/defaultModel/field2',
      xPath: '/defaultModel/field2',
    },
    datePickerField: {
      id: 'datePickerField',
      type: 'SimpleType',
      dataBindingName: 'datePickerField',
      displayString: 'datePickerField',
      isReadOnly: false,
      isTagContent: false,
      jsonSchemaPointer: '#/definitions/datePickerField',
      maxOccurs: 1,
      minOccurs: 1,
      name: 'datePickerField',
      parentElement: null,
      restrictions: [],
      texts: [],
      xsdValueType: 'DateTime',
      xmlSchemaXPath: 'datePickerField',
      xPath: 'datePickerField',
    },
  },
};

export const dataModelMetadataMock: DataModelFieldElement[] = [
  {
    id: 'defaultModel',
    type: 'ComplexType',
    dataBindingName: null,
    displayString: 'defaultModel',
    isReadOnly: false,
    isTagContent: false,
    jsonSchemaPointer: '#/definitions/defaultModel',
    maxOccurs: 1,
    minOccurs: 1,
    name: 'defaultModel',
    parentElement: null,
    restrictions: [],
    texts: [],
    xmlSchemaXPath: '/defaultModel',
    xPath: '/defaultModel',
  },
  {
    id: 'defaultModel.field1',
    type: 'SimpleType',
    dataBindingName: 'field1',
    displayString: 'defaultModel.field1',
    isReadOnly: false,
    isTagContent: false,
    jsonSchemaPointer: '#/definitions/defaultModel/properties/field1',
    maxOccurs: 1,
    minOccurs: 1,
    name: 'field1',
    parentElement: 'defaultModel',
    restrictions: [],
    texts: [],
    xmlSchemaXPath: '/defaultModel/field1',
    xPath: '/defaultModel/field1',
  },
  {
    id: 'defaultModel.field2',
    type: 'SimpleType',
    dataBindingName: 'field2',
    displayString: 'defaultModel.field2',
    isReadOnly: false,
    isTagContent: false,
    jsonSchemaPointer: '#/definitions/defaultModel/properties/field2',
    maxOccurs: 1,
    minOccurs: 1,
    name: 'field2',
    parentElement: 'defaultModel',
    restrictions: [],
    texts: [],
    xmlSchemaXPath: '/defaultModel/field2',
    xPath: '/defaultModel/field2',
  },
  {
    id: 'datePickerField',
    type: 'SimpleType',
    dataBindingName: 'datePickerField',
    displayString: 'datePickerField',
    isReadOnly: false,
    isTagContent: false,
    jsonSchemaPointer: '#/definitions/datePickerField',
    maxOccurs: 1,
    minOccurs: 1,
    name: 'datePickerField',
    parentElement: null,
    restrictions: [],
    texts: [],
    xsdValueType: 'DateTime',
    xmlSchemaXPath: 'datePickerField',
    xPath: 'datePickerField',
  },
];

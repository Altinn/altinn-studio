@{
  ViewBag.Title = "Deployment";
}

<div class="alert alert-info" role="alert" id="deploymentConfirmation" style="display:none">
  <button type="button" class="close" data-dismiss="alert" aria-label="Close">
    <span aria-hidden="true">&times;</span>
  </button>
  <div id="deployStartedMessage"></div>
  <div id="deployStatus"></div>
</div>
@{
  if (ViewBag.ServiceUnavailable)
  {
    <div class="alert alert-danger" role="alert" id="ServiceUnavailable">
      <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span aria-hidden="true">&times;</span>
      </button>
      Deployment service unavailable
    </div>
  }
}

<button id="startDeploymentBtn" type="button" class="btn btn-primary" onclick="submitForm()" disabled=@ViewBag.ServiceUnavailable>
  Start deployment
</button>
<button id="deployingBtn" type="button" class="btn btn-primary" style="display:none">
  <i class='fa fa-spinner fa-spin'></i> Deploying...
</button>

<script>
  function submitForm() {
    $("#startDeploymentBtn").hide();
    $("#deployingBtn").show();
    if (@ViewBag.ServiceUnavailable.ToString().ToLower()) {
      return false;
    }

    jQuery.post({
      url: "@Url.Action("StartDeployment")",
      contentType: "application/json; charset=UTF-8",
      success: function (data) {
        if (data.buildId) {
          $("#deploymentConfirmation").show();
          $('#deployStartedMessage').html("Deployment started with id: " + data.buildId)
          fetchDeploymentStatus(data.buildId);
        }
        else {
          feedbackReceived(data.message);
        }
      },
      failure: function (errMsg) {
        $("#deploymentConfirmation").removeClass("alert-info");
        $("#deploymentConfirmation").addClass("alert-danger");
        feedbackReceived(errMsg);
      }
    });
  }
  function fetchDeploymentStatus(buildId) {
    if (@ViewBag.ServiceUnavailable.ToString().ToLower()) {
      return false;
    }
    jQuery.post({
      url: "@Url.Action("FetchDeploymentStatus")",
      contentType: "application/json; charset=UTF-8",
      data: buildId,
      success: function (data) {
        $("#deployStatus").html(
          "Deployment status: <b>" + data.status + "</b><br />"
        );
        if (data.startTime) {
          $("#deployStatus").append("Deployment start time: " + data.startTime + "<br />")
        }
        if (data.status != "completed") {
          fetchDeploymentStatus(buildId);
        }
        else if (data.status == "completed") {
          $("#startDeploymentBtn").text("Start deployment");
          $("#deployStatus").append("<br />" +
            "Deployment finish time: " + data.finishTime + "<br />" +
            "Deployment result:  <b>" + data.result + "<br />"
          );
          $("#startDeploymentBtn").show();
          $("#deployingBtn").hide();
          $("#deploymentConfirmation").removeClass("alert-info");
          if (data.result == "failed") {
            $("#deploymentConfirmation").addClass("alert-danger");
          }
          else {
            $("#deploymentConfirmation").addClass("alert-success");
          }
        };
      },
      failure: function (errMsg) {
        $("#deploymentConfirmation").removeClass("alert-info");
        $("#deploymentConfirmation").addClass("alert-danger");
        feedbackReceived(errMsg);
      }
    });
  }

  function feedbackReceived(message) { 
    $("#deploymentConfirmation").show();
    $('#deployStartedMessage').html(message);
    $("#startDeploymentBtn").show();
    $("#deployingBtn").hide();
  }
</script>

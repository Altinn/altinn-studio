'use strict';
(self.webpackChunk_studio_components = self.webpackChunk_studio_components || []).push([
  [3700],
  {
    '../studio-icons/src/index.ts': (
      __unused_webpack_module,
      __webpack_exports__,
      __webpack_require__,
    ) => {
      __webpack_require__.r(__webpack_exports__),
        __webpack_require__.d(__webpack_exports__, {
          AccordionIcon: () => AccordionIcon,
          AirplaneFillIcon: () => esm.Vxx,
          AirplaneIcon: () => esm.GVH,
          AlignBottomFillIcon: () => esm.Xx_,
          AlignBottomIcon: () => esm.uYI,
          AlignCenterFillIcon: () => esm.HsE,
          AlignCenterIcon: () => esm.kQA,
          AlignLeftFillIcon: () => esm.nmk,
          AlignLeftIcon: () => esm.SBc,
          AlignMiddleFillIcon: () => esm.Xoc,
          AlignMiddleIcon: () => esm.oq,
          AlignRightFillIcon: () => esm.wR$,
          AlignRightIcon: () => esm.n7i,
          AlignTopFillIcon: () => esm.$FA,
          AlignTopIcon: () => esm.mib,
          AllergensFillIcon: () => esm._Uv,
          AllergensIcon: () => esm.jbU,
          AngleIcon: () => esm.deB,
          AngleRulerCircleFillIcon: () => esm.WUy,
          AngleRulerCircleIcon: () => esm.J40,
          AngleRulerTriangleFillIcon: () => esm.GY$,
          AngleRulerTriangleIcon: () => esm.ZKr,
          ArchiveFillIcon: () => esm.teq,
          ArchiveIcon: () => esm.kbr,
          AreaChartFillIcon: () => esm.i8g,
          AreaChartIcon: () => esm.lc9,
          ArrayIcon: () => ArrayIcon,
          ArrowCirclepathIcon: () => esm._Ye,
          ArrowDownIcon: () => esm.ZLN,
          ArrowDownRightIcon: () => esm.$xA,
          ArrowForwardFillIcon: () => esm.Frd,
          ArrowForwardIcon: () => esm.sIg,
          ArrowLeftIcon: () => esm.A60,
          ArrowRedoIcon: () => esm.D67,
          ArrowRightIcon: () => esm.flY,
          ArrowRightLeftIcon: () => esm.s5k,
          ArrowUndoIcon: () => esm.jre,
          ArrowUpIcon: () => esm.Kpk,
          ArrowsCirclepathIcon: () => esm.XRN,
          ArrowsSquarepathIcon: () => esm.ej7,
          ArrowsUpDownIcon: () => esm.JNJ,
          BabyWrappedFillIcon: () => esm.K5_,
          BabyWrappedIcon: () => esm.l7Z,
          BackpackFillIcon: () => esm.fOI,
          BackpackIcon: () => esm.A20,
          BackwardFillIcon: () => esm.iil,
          BackwardIcon: () => esm.BU5,
          BacteriaFillIcon: () => esm.W9g,
          BacteriaIcon: () => esm.BL0,
          BagdeFillIcon: () => esm.soy,
          BagdeIcon: () => esm.JvM,
          BaggageFillIcon: () => esm.Djy,
          BaggageIcon: () => esm.a8q,
          BandageFillIcon: () => esm.P5B,
          BandageIcon: () => esm.Qtn,
          BankNoteFillIcon: () => esm.hp7,
          BankNoteIcon: () => esm.oEV,
          BarChartFillIcon: () => esm.aju,
          BarChartIcon: () => esm.R5L,
          BeaconSignalsFillIcon: () => esm.eX5,
          BeaconSignalsIcon: () => esm.jwg,
          BedFillIcon: () => esm.ILn,
          BedIcon: () => esm.J_L,
          BellDotFillIcon: () => esm.VhZ,
          BellDotIcon: () => esm.g2f,
          BellFillIcon: () => esm.Ih4,
          BellIcon: () => esm.XFE,
          BicycleIcon: () => esm.hTD,
          BoatFillIcon: () => esm.Vbn,
          BoatIcon: () => esm.kwB,
          BoneBrokenIcon: () => esm.V$2,
          BoneFillIcon: () => esm.jaF,
          BoneIcon: () => esm.OJQ,
          BookFillIcon: () => esm.Caz,
          BookIcon: () => esm.vP6,
          BookmarkDashIcon: () => esm.aES,
          BookmarkFillIcon: () => esm.lgv,
          BookmarkIcon: () => esm.cFy,
          BooksFillIcon: () => esm.BAr,
          BooksIcon: () => esm.agG,
          BooleanIcon: () => BooleanIcon,
          BowlFillIcon: () => esm.$Hx,
          BowlIcon: () => esm.kHX,
          BrailleFillIcon: () => esm.yLQ,
          BrailleIcon: () => esm.pd0,
          BranchingIcon: () => esm.Gfk,
          BriefcaseClockFillIcon: () => esm.v6M,
          BriefcaseClockIcon: () => esm.siM,
          BriefcaseFillIcon: () => esm.bkZ,
          BriefcaseIcon: () => esm._dQ,
          BroadcastIcon: () => esm.N0V,
          BroadcastMinusCircleFillIcon: () => esm.a2L,
          BroadcastMinusCircleIcon: () => esm.Nsk,
          BroadcastPlusCircleFillIcon: () => esm.wrn,
          BroadcastPlusCircleIcon: () => esm.vbY,
          BubbleChartFillIcon: () => esm.Z6U,
          BubbleChartIcon: () => esm.Og_,
          BucketFillIcon: () => esm.z8T,
          BucketIcon: () => esm.qds,
          BucketMopFillIcon: () => esm.NSb,
          BucketMopIcon: () => esm.C4,
          BugFillIcon: () => esm.ly8,
          BugIcon: () => esm.Q5O,
          Buildings2FillIcon: () => esm.cl1,
          Buildings2Icon: () => esm.nrz,
          Buildings3FillIcon: () => esm.t3F,
          Buildings3Icon: () => esm.s_y,
          Buldings2FillIcon: () => esm.zbG,
          Buldings2Icon: () => esm.aYv,
          Buldings3FillIcon: () => esm.wm8,
          Buldings3Icon: () => esm.zWQ,
          BulletListIcon: () => esm.m_y,
          BusFillIcon: () => esm.Hf6,
          BusIcon: () => esm.iwN,
          CalculatorFillIcon: () => esm.ReW,
          CalculatorIcon: () => esm.o3i,
          CalendarFillIcon: () => esm.j4c,
          CalendarIcon: () => esm.CTc,
          CameraFillIcon: () => esm.gOX,
          CameraIcon: () => esm.xpe,
          CameraTriangleFillIcon: () => esm.yD7,
          CameraTriangleIcon: () => esm.j04,
          CandleFillIcon: () => esm.gH5,
          CandleIcon: () => esm.l4z,
          CaptionsFillIcon: () => esm.kiE,
          CaptionsIcon: () => esm.DiW,
          CarFillIcon: () => esm.bPo,
          CarIcon: () => esm.AN5,
          CardFillIcon: () => esm.$2A,
          CardIcon: () => esm.AGT,
          CaretDownCircleFillIcon: () => esm.Ci6,
          CaretDownCircleIcon: () => esm.HFo,
          CaretDownFillIcon: () => esm.yOE,
          CaretDownIcon: () => esm.bDP,
          CaretLeftCircleFillIcon: () => esm.RSK,
          CaretLeftCircleIcon: () => esm.wtu,
          CaretLeftFillIcon: () => esm.VGK,
          CaretLeftIcon: () => esm.eCO,
          CaretLeftRightFillIcon: () => esm.Thb,
          CaretLeftRightIcon: () => esm.YdV,
          CaretRightCircleFillIcon: () => esm.Ayp,
          CaretRightCircleIcon: () => esm.T4D,
          CaretRightFillIcon: () => esm.OhP,
          CaretRightIcon: () => esm.JJd,
          CaretUpCircleFillIcon: () => esm.BUC,
          CaretUpCircleIcon: () => esm.cFc,
          CaretUpDownFillIcon: () => esm.rN7,
          CaretUpDownFilledDownIcon: () => esm.SGh,
          CaretUpDownFilledUpIcon: () => esm.Lls,
          CaretUpDownIcon: () => esm.mEA,
          CaretUpFillIcon: () => esm.D9S,
          CaretUpIcon: () => esm.SwV,
          ChangingRoomFillIcon: () => esm.ZWf,
          ChangingRoomIcon: () => esm.q8t,
          Chat2FillIcon: () => esm.FPR,
          Chat2Icon: () => esm.mZe,
          ChatCheckmarkFillIcon: () => esm.QlZ,
          ChatCheckmarkIcon: () => esm.fXX,
          ChatElipsisFillIcon: () => esm.ETt,
          ChatElipsisIcon: () => esm.rp_,
          ChatExclamationmarkFillIcon: () => esm.diT,
          ChatExclamationmarkIcon: () => esm._wG,
          ChatFillIcon: () => esm.rgA,
          ChatIcon: () => esm.oyn,
          CheckboxIcon: () => CheckboxIcon,
          CheckmarkCircleFillIcon: () => esm.OVp,
          CheckmarkCircleIcon: () => esm.Dee,
          CheckmarkIcon: () => esm.Nrt,
          ChefHatFillIcon: () => esm.m9k,
          ChefHatIcon: () => esm.hbj,
          ChevronDownCircleFillIcon: () => esm.mSl,
          ChevronDownCircleIcon: () => esm.p_q,
          ChevronDownDoubleCircleFillIcon: () => esm.T9v,
          ChevronDownDoubleCircleIcon: () => esm.ITF,
          ChevronDownDoubleIcon: () => esm.QVh,
          ChevronDownIcon: () => esm.D3D,
          ChevronDownUpIcon: () => esm.G2,
          ChevronLeftCircleFillIcon: () => esm.XxG,
          ChevronLeftCircleIcon: () => esm.KAI,
          ChevronLeftDoubleCircleFillIcon: () => esm.M9I,
          ChevronLeftDoubleCircleIcon: () => esm.Vw5,
          ChevronLeftDoubleIcon: () => esm.ZEd,
          ChevronLeftFirstCircleFillIcon: () => esm.dsy,
          ChevronLeftFirstCircleIcon: () => esm.A72,
          ChevronLeftFirstIcon: () => esm.EBH,
          ChevronLeftIcon: () => esm.YJP,
          ChevronRightCircleFillIcon: () => esm.oET,
          ChevronRightCircleIcon: () => esm.vi0,
          ChevronRightDoubleCircleFillIcon: () => esm.z8g,
          ChevronRightDoubleCircleIcon: () => esm.AKr,
          ChevronRightDoubleIcon: () => esm.cCX,
          ChevronRightIcon: () => esm.vKP,
          ChevronRightLastCircleFillIcon: () => esm.EC6,
          ChevronRightLastCircleIcon: () => esm.xhS,
          ChevronRightLastIcon: () => esm.hZt,
          ChevronUpCircleFillIcon: () => esm.lI_,
          ChevronUpCircleIcon: () => esm.OAm,
          ChevronUpDoubleCircleFillIcon: () => esm.Mt,
          ChevronUpDoubleCircleIcon: () => esm.fh9,
          ChevronUpDoubleIcon: () => esm.bBv,
          ChevronUpDownIcon: () => esm.yW5,
          ChevronUpIcon: () => esm.Mtm,
          ChildEyesFillIcon: () => esm.nq9,
          ChildEyesIcon: () => esm.ulD,
          ChildHairEyesFillIcon: () => esm.nMm,
          ChildHairEyesIcon: () => esm.wc_,
          CigaretteFillIcon: () => esm.pf3,
          CigaretteIcon: () => esm.WP4,
          CircleBrokenIcon: () => esm.F0$,
          CircleFillIcon: () => esm.Tli,
          CircleIcon: () => esm.GQ2,
          CircleSlashFillIcon: () => esm.qb9,
          CircleSlashIcon: () => esm.XWc,
          ClipboardCheckmarkFillIcon: () => esm.YIy,
          ClipboardCheckmarkIcon: () => esm.h7T,
          ClipboardFillIcon: () => esm.DhF,
          ClipboardIcon: () => esm.uiJ,
          ClipboardLinkFillIcon: () => esm.n9w,
          ClipboardLinkIcon: () => esm.s1D,
          ClockDashedIcon: () => esm.Zk5,
          ClockFillIcon: () => esm.ff9,
          ClockIcon: () => esm.O4,
          ClothingHangerFillIcon: () => esm.KT6,
          ClothingHangerIcon: () => esm.H2C,
          CloudDownFillIcon: () => esm.u$j,
          CloudDownIcon: () => esm.dHd,
          CloudFillIcon: () => esm.ulL,
          CloudIcon: () => esm.hpF,
          CloudSlashFillIcon: () => esm.Pw9,
          CloudSlashIcon: () => esm.yvV,
          CloudUpFillIcon: () => esm.zEo,
          CloudUpIcon: () => esm.MGf,
          CodeIcon: () => esm.loI,
          CoffeeFillIcon: () => esm.FSC,
          CoffeeIcon: () => esm.stV,
          CogFillIcon: () => esm.Kyd,
          CogIcon: () => esm.DP5,
          CogRotationFillIcon: () => esm.kEw,
          CogRotationIcon: () => esm.LEP,
          Combifridge1FillIcon: () => esm.f7P,
          Combifridge1Icon: () => esm.Ggu,
          Combifridge2FillIcon: () => esm.SOK,
          Combifridge2Icon: () => esm.XF0,
          CombinationIcon: () => CombinationIcon,
          CompassFillIcon: () => esm.b80,
          CompassIcon: () => esm.QGJ,
          ComponentFillIcon: () => esm.Ilr,
          ComponentIcon: () => esm.VEy,
          ConfirmationTaskIcon: () => ConfirmationTaskIcon,
          CurrencyExchangeIcon: () => esm.qBO,
          CutleryFillIcon: () => esm.RyP,
          CutleryIcon: () => esm.Cok,
          DataTaskIcon: () => DataTaskIcon,
          DatabaseFillIcon: () => esm.myY,
          DatabaseIcon: () => esm.bN0,
          DefinitionIcon: () => DefinitionIcon,
          Density1FillIcon: () => esm.CVl,
          Density1Icon: () => esm.vAT,
          Density2FillIcon: () => esm.pPt,
          Density2Icon: () => esm.Q_q,
          Density3Icon: () => esm.d0x,
          DiamondFillIcon: () => esm.ZTb,
          DiamondIcon: () => esm.e9L,
          DishwasherFillIcon: () => esm.fJp,
          DishwasherIcon: () => esm.QVc,
          DivideIcon: () => esm.VwN,
          DocPencilFillIcon: () => esm.mA$,
          DocPencilIcon: () => esm.bDO,
          DogFillIcon: () => esm.XLv,
          DogHarnessFillIcon: () => esm.bW2,
          DogHarnessIcon: () => esm.CbJ,
          DogIcon: () => esm.wj_,
          DonutChartFillIcon: () => esm.Hv$,
          DonutChartIcon: () => esm.mGe,
          DonutsFillIcon: () => esm.wRj,
          DonutsIcon: () => esm.PX_,
          DoorFillIcon: () => esm.nRD,
          DoorIcon: () => esm.wz,
          DoorOpenFillIcon: () => esm.Tf_,
          DoorOpenIcon: () => esm.Co3,
          DownloadIcon: () => esm.s3U,
          DragHorizontalIcon: () => esm._Vv,
          DragVerticalIcon: () => esm.g3B,
          EarFillIcon: () => esm.dFr,
          EarIcon: () => esm._RH,
          EarSlashFillIcon: () => esm.SYn,
          EarSlashIcon: () => esm.Lpi,
          EarSoundwavesFillIcon: () => esm.k$t,
          EarSoundwavesIcon: () => esm.lKb,
          EarthFillIcon: () => esm.PuK,
          EarthIcon: () => esm.OV8,
          ElementIcon: () => ElementIcon,
          ElevatorFillIcon: () => esm.lbF,
          ElevatorIcon: () => esm.cit,
          EndEventIcon: () => EndEventIcon,
          EnterIcon: () => esm.ALF,
          EnvelopeClosedFillIcon: () => esm.Hx3,
          EnvelopeClosedIcon: () => esm.snM,
          EnvelopeOpenFillIcon: () => esm.Tdt,
          EnvelopeOpenIcon: () => esm.cFt,
          EqualsIcon: () => esm.RUb,
          EraserFillIcon: () => esm.nTk,
          EraserIcon: () => esm.A5W,
          EscalatorIcon: () => esm.Eyq,
          EthernetIcon: () => esm.Nh2,
          ExclamationmarkIcon: () => esm._1i,
          ExclamationmarkTriangleFillIcon: () => esm.Rxh,
          ExclamationmarkTriangleIcon: () => esm.kMe,
          ExpandIcon: () => esm.mSu,
          ExternalLinkFillIcon: () => esm.eHG,
          ExternalLinkIcon: () => esm.pTT,
          EyeClosedIcon: () => esm.V$C,
          EyeFillIcon: () => esm.kKf,
          EyeIcon: () => esm.bMW,
          EyeObfuscatedFillIcon: () => esm.YnR,
          EyeObfuscatedIcon: () => esm.bbZ,
          EyeSlashFillIcon: () => esm.fU_,
          EyeSlashIcon: () => esm.G3N,
          EyeWithPupilFillIcon: () => esm.mju,
          EyeWithPupilIcon: () => esm.nmd,
          FaceFillIcon: () => esm.SUE,
          FaceFrownFillIcon: () => esm.YjF,
          FaceFrownIcon: () => esm.Z6S,
          FaceIcon: () => esm.bPI,
          FaceSmileFillIcon: () => esm.eaG,
          FaceSmileIcon: () => esm.j$g,
          FeedbackTaskIcon: () => FeedbackTaskIcon,
          FeedingBottleFillIcon: () => esm.hFf,
          FeedingBottleIcon: () => esm.k0V,
          FigureChildFillIcon: () => esm.R2M,
          FigureChildIcon: () => esm.c$U,
          FigureCombinationFillIcon: () => esm.EZP,
          FigureCombinationIcon: () => esm.DFp,
          FigureFillIcon: () => esm.Lxc,
          FigureIcon: () => esm.qcc,
          FigureInwardFillIcon: () => esm.ec5,
          FigureInwardIcon: () => esm.TF7,
          FigureOutwardFillIcon: () => esm.j1R,
          FigureOutwardIcon: () => esm.k3D,
          FileCheckmarkFillIcon: () => esm.Gok,
          FileCheckmarkIcon: () => esm.z$i,
          FileCodeFillIcon: () => esm.cWm,
          FileCodeIcon: () => esm.bM2,
          FileCsvFillIcon: () => esm.BSu,
          FileCsvIcon: () => esm.aSu,
          FileExcelFillIcon: () => esm.yfp,
          FileExcelIcon: () => esm.Rze,
          FileExportFillIcon: () => esm.Rgc,
          FileExportIcon: () => esm.W6U,
          FileFillIcon: () => esm.tFq,
          FileIcon: () => esm.oSV,
          FileImageFillIcon: () => esm.chG,
          FileImageIcon: () => esm.nLN,
          FileImportFillIcon: () => esm.g65,
          FileImportIcon: () => esm.h9R,
          FileJsonFillIcon: () => esm.n$O,
          FileJsonIcon: () => esm.oHh,
          FileLoadingFillIcon: () => esm.DDN,
          FileLoadingIcon: () => esm.cf6,
          FileParagraphFillIcon: () => esm.Tkp,
          FileParagraphIcon: () => esm.EI5,
          FilePdfFillIcon: () => esm.V1i,
          FilePdfIcon: () => esm.yTC,
          FilePlusFillIcon: () => esm.TU1,
          FilePlusIcon: () => esm.uTr,
          FileResetFillIcon: () => esm.qpX,
          FileResetIcon: () => esm.tNf,
          FileSearchFillIcon: () => esm.lNF,
          FileSearchIcon: () => esm.e$2,
          FileShredderFillIcon: () => esm.A0k,
          FileShredderIcon: () => esm.hvq,
          FileTextFillIcon: () => esm.MRq,
          FileTextIcon: () => esm.dsF,
          FileWordFillIcon: () => esm.DQO,
          FileWordIcon: () => esm.mvu,
          FileXMarkFillIcon: () => esm.oxG,
          FileXMarkIcon: () => esm.$F0,
          FilesFillIcon: () => esm.sRU,
          FilesIcon: () => esm.z3t,
          FilterIcon: () => esm.YGH,
          FingerButtonFillIcon: () => esm.u8_,
          FingerButtonIcon: () => esm.VcG,
          FingerMobileFillIcon: () => esm.KFH,
          FingerMobileIcon: () => esm.Lw8,
          FirstAidFillIcon: () => esm.fv9,
          FirstAidIcon: () => esm.qm4,
          FirstAidKitFillIcon: () => esm.$2R,
          FirstAidKitIcon: () => esm.osG,
          FlagCrossFillIcon: () => esm.J0S,
          FlagCrossIcon: () => esm.YTB,
          FloppydiskFillIcon: () => esm.qNC,
          FloppydiskIcon: () => esm.BZo,
          FlowerFillIcon: () => esm.Wvg,
          FlowerIcon: () => esm.vwX,
          FlowerPensionFillIcon: () => esm.Sab,
          FlowerPensionIcon: () => esm.Nwg,
          FlowerPetalFallingFillIcon: () => esm.bZA,
          FlowerPetalFallingIcon: () => esm.cjx,
          FlowerPetalsFillIcon: () => esm.RrM,
          FlowerPetalsIcon: () => esm.mPv,
          FolderFileFillIcon: () => esm.zI5,
          FolderFileIcon: () => esm._3J,
          FolderFillIcon: () => esm.ZqY,
          FolderIcon: () => esm.sjq,
          FolderMinusFillIcon: () => esm.PmI,
          FolderMinusIcon: () => esm.Kni,
          FolderPlusFillIcon: () => esm.di6,
          FolderPlusIcon: () => esm.YPf,
          ForkFillIcon: () => esm.hqV,
          ForkIcon: () => esm.o5_,
          ForwardFillIcon: () => esm.kKr,
          ForwardIcon: () => esm.LqN,
          FreezerFillIcon: () => esm.eaT,
          FreezerIcon: () => esm.rZI,
          FunnelFillIcon: () => esm.pWL,
          FunnelIcon: () => esm.mWh,
          GavelFillIcon: () => esm.o12,
          GavelIcon: () => esm.lye,
          GavelSoundBlockFillIcon: () => esm.WQk,
          GavelSoundBlockIcon: () => esm.dCY,
          GitHubIcon: () => GitHubIcon,
          GiteaIcon: () => GiteaIcon,
          GlassFillIcon: () => esm.Fb6,
          GlassIcon: () => esm.S7k,
          GlassesFillIcon: () => esm.hDI,
          GlassesIcon: () => esm.gCt,
          GlobeFillIcon: () => esm.EA3,
          GlobeIcon: () => esm.fCU,
          GlobeSlashFillIcon: () => esm.RrJ,
          GlobeSlashIcon: () => esm.qdY,
          GroupIcon: () => GroupIcon,
          HandBandageFillIcon: () => esm.UqE,
          HandBandageIcon: () => esm.jqE,
          HandFingerFillIcon: () => esm.pqu,
          HandFingerIcon: () => esm.GsV,
          HandHeartFillIcon: () => esm._I7,
          HandHeartIcon: () => esm.lk3,
          HandKnotFilledIcon: () => esm.Fj2,
          HandKnotIcon: () => esm.jqq,
          HandShakeHeartFillIcon: () => esm.ImX,
          HandShakeHeartIcon: () => esm.VLi,
          HandshakeFillIcon: () => esm.Ik$,
          HandshakeIcon: () => esm.pFS,
          HangerIcon: () => esm.x5m,
          HardHatFillIcon: () => esm.LNF,
          HardHatIcon: () => esm.c3W,
          HashtagIcon: () => esm.y$K,
          HatSchoolFillIcon: () => esm.o4P,
          HatSchoolIcon: () => esm.NlL,
          HddDownFillIcon: () => esm.rIW,
          HddDownIcon: () => esm.udl,
          HddUpFillIcon: () => esm.wwV,
          HddUpIcon: () => esm.NP5,
          HeadCloudFillIcon: () => esm.YVe,
          HeadCloudIcon: () => esm.PRE,
          HeadFillIcon: () => esm.bkS,
          HeadHeartFillIcon: () => esm.nND,
          HeadHeartIcon: () => esm.uWi,
          HeadIcon: () => esm.IU9,
          HearingLoopFillIcon: () => esm.jPe,
          HearingLoopIcon: () => esm.OMz,
          HearingLoopRadioFillIcon: () => esm.kVY,
          HearingLoopRadioIcon: () => esm.tOQ,
          HeartBrokenFillIcon: () => esm.WF_,
          HeartBrokenIcon: () => esm.VDd,
          HeartFillIcon: () => esm.zwu,
          HeartIcon: () => esm.C3E,
          HexagonGridFillIcon: () => esm.Fhc,
          HexagonGridIcon: () => esm.sS6,
          HikingTrailSignFillIcon: () => esm.Maw,
          HikingTrailSignIcon: () => esm.fct,
          HospitalFillIcon: () => esm.JVX,
          HospitalIcon: () => esm.MWq,
          HourglassBottomFilledIcon: () => esm.hN4,
          HourglassIcon: () => esm.Qfk,
          HourglassTopFilledIcon: () => esm.Fam,
          HouseFillIcon: () => esm.Jdr,
          HouseHeartFillIcon: () => esm.pau,
          HouseHeartIcon: () => esm.GI7,
          HouseIcon: () => esm.IIF,
          ImageFillIcon: () => esm.GJ4,
          ImageIcon: () => esm.xfq,
          InboxDownFillIcon: () => esm.Jnl,
          InboxDownIcon: () => esm.sag,
          InboxFillIcon: () => esm.T0,
          InboxIcon: () => esm.K$s,
          InboxUpFillIcon: () => esm._JU,
          InboxUpIcon: () => esm.ryQ,
          InformationIcon: () => esm.uQc,
          InformationSquareFillIcon: () => esm.QMB,
          InformationSquareIcon: () => esm.ZrL,
          IvFluidBagFillIcon: () => esm.qIh,
          IvFluidBagIcon: () => esm.rF0,
          KeyHorizontalFillIcon: () => esm.Ss9,
          KeyHorizontalIcon: () => esm.$xr,
          KeyVerticalFillIcon: () => esm.YcH,
          KeyVerticalIcon: () => esm.BDl,
          KnifeFillIcon: () => esm.uLZ,
          KnifeIcon: () => esm.X_o,
          KronerIcon: () => esm.Zdq,
          LanguageIcon: () => esm.UaP,
          LaptopFillIcon: () => esm.XBr,
          LaptopIcon: () => esm.WKf,
          LaptopTriangleFillIcon: () => esm.$n2,
          LaptopTriangleIcon: () => esm.WCZ,
          LayerMinusFillIcon: () => esm.WN2,
          LayerMinusIcon: () => esm.p1y,
          LayersFillIcon: () => esm.Fhi,
          LayersIcon: () => esm.mLz,
          LayersPlusFillIcon: () => esm.NH6,
          LayersPlusIcon: () => esm.iLv,
          LeaveIcon: () => esm.NAZ,
          LightBulbFillIcon: () => esm.mk$,
          LightBulbIcon: () => esm.XLj,
          LightningFillIcon: () => esm.d84,
          LightningIcon: () => esm.C2y,
          LikertIcon: () => LikertIcon,
          LineGraphDotIcon: () => esm.tGD,
          LineGraphIcon: () => esm.yeZ,
          LineGraphStackedIcon: () => esm.n_d,
          LinkBrokenIcon: () => esm.XzH,
          LinkIcon: () => esm.qYV,
          LocationPinFillIcon: () => esm.pop,
          LocationPinIcon: () => esm.Uh$,
          LongTextIcon: () => LongTextIcon,
          MagnifyingGlassFillIcon: () => esm.Kwy,
          MagnifyingGlassIcon: () => esm.$p$,
          MeasuringTapeFillIcon: () => esm.KKd,
          MeasuringTapeIcon: () => esm.lym,
          MedicineBottleFillIcon: () => esm.puC,
          MedicineBottleIcon: () => esm.Er2,
          MeetingLargeFillIcon: () => esm.Xhz,
          MeetingLargeIcon: () => esm.qOz,
          MeetingSmallFillIcon: () => esm.$pW,
          MeetingSmallIcon: () => esm.sFr,
          MegaphoneFillIcon: () => esm.BYK,
          MegaphoneIcon: () => esm.sZC,
          MegaphoneSpeakingFillIcon: () => esm.BxE,
          MegaphoneSpeakingIcon: () => esm.QE5,
          MenuElipsisHorizontalCircleFillIcon: () => esm.DE2,
          MenuElipsisHorizontalCircleIcon: () => esm.kKm,
          MenuElipsisHorizontalIcon: () => esm.IKL,
          MenuElipsisHorizontalSquareFillIcon: () => esm.oDs,
          MenuElipsisHorizontalSquareIcon: () => esm.NwR,
          MenuElipsisVerticalCircleFillIcon: () => esm.lOR,
          MenuElipsisVerticalCircleIcon: () => esm.Swd,
          MenuElipsisVerticalIcon: () => esm.wfm,
          MenuElipsisVerticalSquareFillIcon: () => esm.ahs,
          MenuElipsisVerticalSquareIcon: () => esm.v0f,
          MenuGridIcon: () => esm.Fvr,
          MenuHamburgerIcon: () => esm.SkT,
          MicrobeFillIcon: () => esm.Sbj,
          MicrobeIcon: () => esm.x1d,
          MicrophoneFillIcon: () => esm.NK,
          MicrophoneIcon: () => esm.cNw,
          MicrophoneSlashFillIcon: () => esm.yv5,
          MicrophoneSlashIcon: () => esm.z0P,
          MigrationIcon: () => esm.ir6,
          MinusCircleFillIcon: () => esm.nUl,
          MinusCircleIcon: () => esm.KfR,
          MinusIcon: () => esm.QGg,
          MobileFillIcon: () => esm.hh5,
          MobileIcon: () => esm.sqe,
          MobileSmallFillIcon: () => esm.Or3,
          MobileSmallIcon: () => esm.zae,
          MobileTriangleFillIcon: () => esm.jsx,
          MobileTriangleIcon: () => esm.ckB,
          MonitorFillIcon: () => esm.TdX,
          MonitorIcon: () => esm.yow,
          MonitorTriangleFillIcon: () => esm.NiL,
          MonitorTriangleIcon: () => esm.ycg,
          MoonFillIcon: () => esm.UPA,
          MoonIcon: () => esm.rRK,
          MotorcycleFillIcon: () => esm.QPY,
          MotorcycleIcon: () => esm.xGk,
          MountainFillIcon: () => esm.gU6,
          MountainIcon: () => esm.L8A,
          MugFillIcon: () => esm._yN,
          MugIcon: () => esm.B0m,
          MultiplyIcon: () => esm.Kkb,
          NavBarIcon: () => NavBarIcon,
          NewspaperFillIcon: () => esm.sxw,
          NewspaperIcon: () => esm.Rql,
          NoSmokingFillIcon: () => esm.wBh,
          NoSmokingIcon: () => esm.lEs,
          NokIcon: () => esm.cE0,
          NotePencilDashIcon: () => esm.FoC,
          NotePencilFillIcon: () => esm.Q52,
          NotePencilIcon: () => esm.ZgK,
          NumberIcon: () => NumberIcon,
          NumberListIcon: () => esm.bFB,
          ObjectIcon: () => ObjectIcon,
          OpenSourceFillIcon: () => esm.WeW,
          OpenSourceIcon: () => esm.DtA,
          Over18FillIcon: () => esm.EaF,
          Over18Icon: () => esm.VFZ,
          PackageFillIcon: () => esm.P64,
          PackageIcon: () => esm.qDL,
          PadlockLockedFillIcon: () => esm.pDR,
          PadlockLockedIcon: () => esm.IMH,
          PadlockUnlockedFillIcon: () => esm.eQu,
          PadlockUnlockedIcon: () => esm.RAK,
          PaletteFillIcon: () => esm.Ytm,
          PaletteIcon: () => esm.v1n,
          PaperclipIcon: () => esm.Aud,
          PaperplaneFillIcon: () => esm.Va1,
          PaperplaneIcon: () => esm.Cyz,
          ParagraphIcon: () => esm.ELo,
          ParasolBeachFillIcon: () => esm.mHM,
          ParasolBeachIcon: () => esm.fWL,
          ParkingFillIcon: () => esm.H49,
          ParkingIcon: () => esm.adU,
          PassportFillIcon: () => esm.J3r,
          PassportIcon: () => esm.kIG,
          PasswordHiddenIcon: () => esm.lcF,
          PauseFillIcon: () => esm.xI6,
          PauseIcon: () => esm.E$n,
          PaymentDetailsIcon: () => PaymentDetailsIcon,
          PaymentTaskIcon: () => PaymentTaskIcon,
          PencilBoardFillIcon: () => esm.Ifq,
          PencilBoardIcon: () => esm.xqq,
          PencilFillIcon: () => esm.yqr,
          PencilIcon: () => esm.R2l,
          PencilLineFillIcon: () => esm.A_A,
          PencilLineIcon: () => esm.DIn,
          PencilWritingFillIcon: () => esm.Iz7,
          PencilWritingIcon: () => esm.R_l,
          PentagonFillIcon: () => esm.F4I,
          PentagonIcon: () => esm.Unw,
          PercentIcon: () => esm.R3C,
          PersonChatFillIcon: () => esm.YQl,
          PersonChatIcon: () => esm.BLr,
          PersonCheckmarkFillIcon: () => esm.tkb,
          PersonCheckmarkIcon: () => esm.wrQ,
          PersonCircleFillIcon: () => esm.YzW,
          PersonCircleIcon: () => esm.Hvq,
          PersonCrossFillIcon: () => esm.q6K,
          PersonCrossIcon: () => esm.jdB,
          PersonEnvelopeFillIcon: () => esm.Cwy,
          PersonEnvelopeIcon: () => esm.hG_,
          PersonFillIcon: () => esm.C0D,
          PersonGavelFillIcon: () => esm.dfZ,
          PersonGavelIcon: () => esm._LU,
          PersonGroupFillIcon: () => esm.Xcp,
          PersonGroupIcon: () => esm.qzY,
          PersonHeadsetFillIcon: () => esm.M28,
          PersonHeadsetIcon: () => esm.tF5,
          PersonIcon: () => esm.nXn,
          PersonMinusFillIcon: () => esm.qkG,
          PersonMinusIcon: () => esm.$rN,
          PersonPencilFillIcon: () => esm.$zf,
          PersonPencilIcon: () => esm.EBf,
          PersonPlusFillIcon: () => esm.mml,
          PersonPlusIcon: () => esm.N68,
          PersonPregnantFillIcon: () => esm.tOr,
          PersonPregnantIcon: () => esm._oP,
          PersonRectangleFillIcon: () => esm.NMS,
          PersonRectangleIcon: () => esm.C2r,
          PersonSuitFillIcon: () => esm.bn_,
          PersonSuitIcon: () => esm.wPd,
          PersonTallShortFillIcon: () => esm.ZbH,
          PersonTallShortIcon: () => esm.Qa7,
          PhoneFillIcon: () => esm.$oy,
          PhoneIcon: () => esm.EsG,
          PieChartFillIcon: () => esm.ZBm,
          PieChartIcon: () => esm.cIm,
          PiggybankFillIcon: () => esm.xCL,
          PiggybankIcon: () => esm.ovJ,
          PillCircleFillIcon: () => esm.kuh,
          PillCircleIcon: () => esm.P68,
          PillCircleRectangleFillIcon: () => esm.ZtZ,
          PillCircleRectangleIcon: () => esm.ibJ,
          PillRectangleFillIcon: () => esm.j_W,
          PillRectangleIcon: () => esm.GbS,
          PinFillIcon: () => esm.aS3,
          PinIcon: () => esm.tsw,
          PlantFillIcon: () => esm.gwg,
          PlantIcon: () => esm.T4b,
          PlateFillIcon: () => esm.Nbc,
          PlateIcon: () => esm.Qck,
          PlayFillIcon: () => esm.DWr,
          PlayIcon: () => esm.udU,
          PlusCircleFillIcon: () => esm.v3r,
          PlusCircleIcon: () => esm.GYj,
          PlusIcon: () => esm.c11,
          PlusMinusSlashIcon: () => esm.DXR,
          PortalFillIcon: () => esm.fiw,
          PortalIcon: () => esm.eN3,
          PresentationFillIcon: () => esm.XDR,
          PresentationIcon: () => esm.cFS,
          PrinterLargeFillIcon: () => esm.adO,
          PrinterLargeIcon: () => esm.DCf,
          PrinterLargeTriangleFillIcon: () => esm.CL_,
          PrinterLargeTriangleIcon: () => esm.v8e,
          PrinterSmallFillIcon: () => esm.Wjm,
          PrinterSmallIcon: () => esm.$cs,
          PrinterSmallTriangleFillIcon: () => esm.ut1,
          PrinterSmallTriangleIcon: () => esm.FtY,
          PropertyIcon: () => PropertyIcon,
          PushPinFillIcon: () => esm.MxR,
          PushPinIcon: () => esm.to5,
          PuzzlePieceFillIcon: () => esm.jN5,
          PuzzlePieceIcon: () => esm.QnX,
          QrCodeFillIcon: () => esm.Z9t,
          QrCodeIcon: () => esm.yVk,
          QrCodeScanningFillIcon: () => esm.gXV,
          QrCodeScanningIcon: () => esm.JeO,
          QuestionmarkDiamondFillIcon: () => esm.S2O,
          QuestionmarkDiamondIcon: () => esm.VCt,
          QuestionmarkIcon: () => esm.xIr,
          QuietZoneFillIcon: () => esm.Fk9,
          QuietZoneIcon: () => esm.gFh,
          RadioButtonIcon: () => RadioButtonIcon,
          RaindropFillIcon: () => esm.SPX,
          RaindropIcon: () => esm.Fr2,
          ReceiptFillIcon: () => esm.pfE,
          ReceiptIcon: () => esm.KBH,
          ReceptionFillIcon: () => esm.soE,
          ReceptionIcon: () => esm.LcK,
          RecordFillIcon: () => esm.EBu,
          RecordIcon: () => esm.B6P,
          RectangleSectionsFillIcon: () => esm.I6i,
          RectangleSectionsIcon: () => esm.XST,
          RecycleFillIcon: () => esm.IoB,
          RecycleIcon: () => esm.jKT,
          ReferenceIcon: () => ReferenceIcon,
          RefrigeratorFillIcon: () => esm.jcr,
          RefrigeratorIcon: () => esm.oO1,
          RepeatingGroupIcon: () => RepeatingGroupIcon,
          RoadblockFillIcon: () => esm.Wef,
          RoadblockIcon: () => esm.Rof,
          RobotFillIcon: () => esm.zaz,
          RobotFrownFillIcon: () => esm.PFm,
          RobotFrownIcon: () => esm.qSc,
          RobotIcon: () => esm.CnV,
          RobotSmileFillIcon: () => esm.VKJ,
          RobotSmileIcon: () => esm.oPe,
          RocketFillIcon: () => esm.tCM,
          RocketIcon: () => esm.Abk,
          RockingHorseFillIcon: () => esm.ftm,
          RockingHorseIcon: () => esm.K4T,
          RotateLeftFillIcon: () => esm.dvj,
          RotateLeftIcon: () => esm.EMq,
          RotateRightFillIcon: () => esm.uCH,
          RotateRightIcon: () => esm.Ri3,
          RouterIcon: () => esm.NCi,
          RulerFillIcon: () => esm.HIw,
          RulerIcon: () => esm.soG,
          RulersFillIcon: () => esm.C02,
          RulersIcon: () => esm.N6k,
          SackFillIcon: () => esm.JXM,
          SackIcon: () => esm.IeG,
          SackKronerFillIcon: () => esm.GUd,
          SackKronerIcon: () => esm.NAi,
          SackPensionFillIcon: () => esm.zuq,
          SackPensionIcon: () => esm.mb5,
          SandboxFillIcon: () => esm.WCX,
          SandboxIcon: () => esm.fVv,
          ScissorsFillIcon: () => esm.aLT,
          ScissorsIcon: () => esm.b8b,
          SealCheckmarkFillIcon: () => esm.D73,
          SealCheckmarkIcon: () => esm.ig9,
          SealFillIcon: () => esm.SmY,
          SealIcon: () => esm.$fM,
          SealXMarkFillIcon: () => esm.PX3,
          SealXMarkIcon: () => esm.Ix9,
          SectionHeaderWarningIcon: () => SectionHeaderWarningIcon,
          SectorChartFillIcon: () => esm.N8H,
          SectorChartIcon: () => esm.oTx,
          SelectIcon: () => SelectIcon,
          ShieldFillIcon: () => esm.Q3o,
          ShieldIcon: () => esm.lmn,
          ShieldLockFillIcon: () => esm.d9q,
          ShieldLockIcon: () => esm.m5V,
          ShoppingBasketFillIcon: () => esm.Xog,
          ShoppingBasketIcon: () => esm.mJS,
          ShortTextIcon: () => ShortTextIcon,
          ShowerFillIcon: () => esm.DeE,
          ShowerIcon: () => esm.g02,
          ShrinkIcon: () => esm.pg7,
          SidebarBothFillIcon: () => esm.Wq,
          SidebarBothIcon: () => esm.DhM,
          SidebarLeftFillIcon: () => esm.OfL,
          SidebarLeftIcon: () => esm.j0K,
          SidebarRightFillIcon: () => esm.FDD,
          SidebarRightIcon: () => esm.ab1,
          SignLanguageSingleHandFillIcon: () => esm.l$r,
          SignLanguageSingleHandIcon: () => esm.aD2,
          SignLanguageTwoHandsFillIcon: () => esm.AuT,
          SignLanguageTwoHandsIcon: () => esm.V50,
          SignTaskIcon: () => SignTaskIcon,
          SilhouetteFillIcon: () => esm.n0Z,
          SilhouetteIcon: () => esm.sAZ,
          SkipBackwardFillIcon: () => esm.Zrc,
          SkipBackwardIcon: () => esm.qN$,
          SkipForwardFillIcon: () => esm.V$Z,
          SkipForwardIcon: () => esm.i76,
          SlackIcon: () => SlackIcon,
          SnowIcon: () => esm.L0q,
          SparkLargeIcon: () => esm.Ut7,
          SparkSmallIcon: () => esm.igJ,
          SparklesFillIcon: () => esm.SD8,
          SparklesIcon: () => esm.BZI,
          SpeakerFillIcon: () => esm.ilQ,
          SpeakerIcon: () => esm.pD_,
          SpeakerSlashFillIcon: () => esm.LQn,
          SpeakerSlashIcon: () => esm.I4I,
          SpeakerSoundWave1FillIcon: () => esm.z_$,
          SpeakerSoundWave1Icon: () => esm.s_H,
          SpeakerSoundWave2FillIcon: () => esm.ko3,
          SpeakerSoundWave2Icon: () => esm.j4T,
          SpeakerSoundWave3FillIcon: () => esm.rDO,
          SpeakerSoundWave3Icon: () => esm.oDA,
          SplitHorizontalFillIcon: () => esm.RF1,
          SplitHorizontalIcon: () => esm.yPX,
          SplitVerticalFillIcon: () => esm.Tne,
          SplitVerticalIcon: () => esm.CwM,
          SpoonFillIcon: () => esm.kMq,
          SpoonIcon: () => esm.Dsy,
          SquareFillIcon: () => esm.Uir,
          SquareIcon: () => esm.dHM,
          SquarerootIcon: () => esm.Bdy,
          StaircaseIcon: () => esm.jIn,
          StarFillIcon: () => esm.BQJ,
          StarIcon: () => esm.Gg5,
          StarOfLifeFillIcon: () => esm.Onv,
          StarOfLifeIcon: () => esm.TM0,
          StarsEuIcon: () => esm.Jc6,
          StethoscopeIcon: () => esm.XOY,
          StopFillIcon: () => esm.xoz,
          StopIcon: () => esm.wFz,
          StringIcon: () => StringIcon,
          StrollerFillIcon: () => esm.IwA,
          StrollerIcon: () => esm.Bbg,
          SunFillIcon: () => esm.PTD,
          SunIcon: () => esm.gLX,
          TableFillIcon: () => esm.pFU,
          TableIcon: () => esm.KbA,
          TabletFillIcon: () => esm.FKs,
          TabletIcon: () => esm._Or,
          TabsAddFillIcon: () => esm.AbT,
          TabsAddIcon: () => esm.B6X,
          TabsFillIcon: () => esm.z$M,
          TabsIcon: () => esm.ego,
          TabsRemoveFillIcon: () => esm.xoJ,
          TabsRemoveIcon: () => esm.U7F,
          TagFillIcon: () => esm.NzP,
          TagIcon: () => esm.gqV,
          TapWaterFillIcon: () => esm.luK,
          TapWaterIcon: () => esm._Uk,
          TasklistFillIcon: () => esm.Wew,
          TasklistIcon: () => esm.JAN,
          TasklistSaveFillIcon: () => esm.tMV,
          TasklistSaveIcon: () => esm.Gwi,
          TasklistSendFillIcon: () => esm._nT,
          TasklistSendIcon: () => esm.p5P,
          TasklistStartFillIcon: () => esm.chc,
          TasklistStartIcon: () => esm.Xpu,
          TeddyBearFillIcon: () => esm.JTu,
          TeddyBearIcon: () => esm.YWc,
          TenancyFillIcon: () => esm.Tmy,
          TenancyIcon: () => esm.EWt,
          TerminalFillIcon: () => esm.Vmz,
          TerminalIcon: () => esm.k3y,
          TestFlaskFillIcon: () => esm.mu0,
          TestFlaskIcon: () => esm.JOI,
          TextIcon: () => TextIcon,
          ThermometerFillIcon: () => esm.LYk,
          ThermometerIcon: () => esm.cqn,
          ThumbDownFillIcon: () => esm.xZe,
          ThumbDownIcon: () => esm.EA2,
          ThumbUpFillIcon: () => esm.OjN,
          ThumbUpIcon: () => esm.$U3,
          TimerFillIcon: () => esm.WFO,
          TimerIcon: () => esm.xbX,
          TimerPauseFillIcon: () => esm.oVO,
          TimerPauseIcon: () => esm.zHK,
          TimerStartFillIcon: () => esm.IGU,
          TimerStartIcon: () => esm.Pk1,
          TitleIcon: () => TitleIcon,
          ToiletFillIcon: () => esm.W6t,
          ToiletIcon: () => esm.Lj_,
          TokenFillIcon: () => esm.I8o,
          TokenIcon: () => esm.xzS,
          ToothFillIcon: () => esm.RiM,
          ToothIcon: () => esm.oJ$,
          TrainFillIcon: () => esm.jXl,
          TrainIcon: () => esm.ET0,
          TramFillIcon: () => esm.Hr5,
          TramIcon: () => esm.E5R,
          TrashFillIcon: () => esm.L5v,
          TrashIcon: () => esm.ucK,
          TrayFoodFillIcon: () => esm.Fed,
          TrayFoodIcon: () => esm.wLY,
          TrendDownIcon: () => esm.n3r,
          TrendFlatIcon: () => esm.Aqc,
          TrendUpIcon: () => esm.eUO,
          TriangleFillIcon: () => esm.Raf,
          TriangleIcon: () => esm.o7e,
          TruckFillIcon: () => esm.Qtj,
          TruckIcon: () => esm.X3C,
          UmbrellaFillIcon: () => esm.Rq8,
          UmbrellaIcon: () => esm.GaM,
          UploadIcon: () => esm.JMY,
          VideoFillIcon: () => esm.iCI,
          VideoIcon: () => esm.npA,
          VideoSlashFillIcon: () => esm.VYU,
          VideoSlashIcon: () => esm.OCo,
          VideoplayerFillIcon: () => esm.Bsl,
          VideoplayerIcon: () => esm.uaf,
          VirusFillIcon: () => esm.UK5,
          VirusIcon: () => esm.jSX,
          VitalsIcon: () => esm.jOD,
          WaitingRoomFillIcon: () => esm.ZBC,
          WaitingRoomIcon: () => esm.qDc,
          WalletFillIcon: () => esm.odx,
          WalletIcon: () => esm.lc2,
          WateringCanFillIcon: () => esm.u9O,
          WateringCanIcon: () => esm.zAN,
          WaveformIcon: () => esm.LK_,
          WavesIcon: () => esm.Mhc,
          WeightIcon: () => esm.C4I,
          WheelchairFillIcon: () => esm.fZU,
          WheelchairIcon: () => esm.YtC,
          WrenchFillIcon: () => esm.I5s,
          WrenchIcon: () => esm.PXj,
          XMarkIcon: () => esm.fKY,
          XMarkOctagonFillIcon: () => esm.jNx,
          XMarkOctagonIcon: () => esm.sXs,
          ZoomMinusFillIcon: () => esm.s2,
          ZoomMinusIcon: () => esm.JDd,
          ZoomPlusFillIcon: () => esm.oOb,
          ZoomPlusIcon: () => esm.NB8,
        });
      var esm = __webpack_require__(
          '../../../node_modules/@navikt/aksel-icons/dist/react/esm/index.js',
        ),
        react = __webpack_require__('../../../node_modules/react/index.js');
      const SvgTemplate = ({ title, children, ...rest }) =>
        react.createElement(
          'svg',
          {
            width: '1em',
            height: '1em',
            viewBox: '0 0 24 24',
            fill: 'none',
            xmlns: 'http://www.w3.org/2000/svg',
            role: 'img',
            ...rest,
          },
          title && react.createElement('title', null, title),
          children,
        );
      SvgTemplate.__docgenInfo = {
        description: '',
        methods: [],
        displayName: 'SvgTemplate',
        props: {
          title: { required: !1, tsType: { name: 'string' }, description: '' },
          children: {
            required: !0,
            tsType: { name: 'ReactReactNode', raw: 'React.ReactNode' },
            description: '',
          },
        },
      };
      const AccordionIcon = (props) =>
        react.createElement(
          SvgTemplate,
          props,
          react.createElement('path', {
            d: 'M8.44434 10.1797L11.9375 13.6797L15.5554 10.1797',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
            strokeLinejoin: 'round',
          }),
          react.createElement('path', {
            d: 'M4 19H20',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
          react.createElement('path', {
            d: 'M4 5H20',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
        );
      AccordionIcon.__docgenInfo = {
        description: '',
        methods: [],
        displayName: 'AccordionIcon',
        props: { title: { required: !1, tsType: { name: 'string' }, description: '' } },
      };
      const ArrayIcon = (props) =>
        react.createElement(
          SvgTemplate,
          { viewBox: '0 0 36 36', ...props },
          react.createElement('path', {
            fillRule: 'evenodd',
            clipRule: 'evenodd',
            d: ' M 7.5 7.5 H 12 V 10.5 H 10.5 V 25.5 H 12 V 28.5 H 7.5 V 7.5 Z ',
            fill: 'currentColor',
          }),
          react.createElement('path', {
            fillRule: 'evenodd',
            clipRule: 'evenodd',
            d: ' M 28.5 28.5 H 24 V 25.5 H 25.5 L 25.5 10.5 H 24 V 7.5 H 28.5 L 28.5 28.5 Z ',
            fill: 'currentColor',
          }),
        );
      ArrayIcon.__docgenInfo = {
        description: '',
        methods: [],
        displayName: 'ArrayIcon',
        props: { title: { required: !1, tsType: { name: 'string' }, description: '' } },
      };
      const BooleanIcon = (props) =>
        react.createElement(
          SvgTemplate,
          { viewBox: '0 0 36 36', ...props },
          react.createElement('path', {
            d: ' M 18 6 C 14.8174 6 11.7652 7.26428 9.51472 9.51472 C 7.26428 11.7652 6 14.8174 6 18 C 6 21.1826 7.26428 24.2348 9.51472 26.4853 C 11.7652 28.7357 14.8174 30 18 30 L 18 18 L 18 6 Z ',
            fill: 'currentColor',
          }),
          react.createElement('path', {
            fillRule: 'evenodd',
            clipRule: 'evenodd',
            d: ' M 27 18 C 27 13.0294 22.9706 9 18 9 C 13.0294 9 9 13.0294 9 18 C 9 22.9706 13.0294 27 18 27 C 22.9706 27 27 22.9706 27 18 Z M 30 18 C 30 11.3726 24.6274 6 18 6 C 11.3726 6 6 11.3726 6 18 C 6 24.6274 11.3726 30 18 30 C 24.6274 30 30 24.6274 30 18 Z ',
            fill: 'currentColor',
          }),
        );
      BooleanIcon.__docgenInfo = {
        description: '',
        methods: [],
        displayName: 'BooleanIcon',
        props: { title: { required: !1, tsType: { name: 'string' }, description: '' } },
      };
      const CheckboxIcon = (props) =>
        react.createElement(
          SvgTemplate,
          props,
          react.createElement('rect', {
            x: '4',
            y: '4',
            width: '16',
            height: '16',
            rx: '3',
            stroke: 'currentColor',
            strokeWidth: '1.5',
          }),
          react.createElement('path', {
            d: 'M8.39258 11.1729L11.2534 14.177',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
          react.createElement('path', {
            d: 'M15.6074 9.82324L11.2535 14.1772',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
        );
      CheckboxIcon.__docgenInfo = {
        description: '',
        methods: [],
        displayName: 'CheckboxIcon',
        props: { title: { required: !1, tsType: { name: 'string' }, description: '' } },
      };
      const CombinationIcon = (props) =>
        react.createElement(
          SvgTemplate,
          { viewBox: '0 0 36 36', ...props },
          react.createElement('path', {
            fillRule: 'evenodd',
            clipRule: 'evenodd',
            d: ' M 6 6 H 9 V 8.66667 H 8.66667 V 9 H 6 Z M 6 27 V 30 H 9 V 27.3333 H 8.66667 V 27 Z M 27 30 H 30 V 27 H 27.3333 V 27.3333 H 27 Z M 30 9 V 6 H 27 V 8.66667 H 27.3333 V 9 Z M 11.3333 6 V 9 H 16.6667 V 6 Z M 19.3333 6 V 9 H 24.6667 V 6 Z M 30 11.3333 H 27 V 16.6667 H 30 Z M 30 19.3333 H 27 V 24.6667 H 30 Z M 24.6667 30 V 27 H 19.3333 V 30 Z M 16.6667 30 V 27 H 11.3333 V 30 Z M 6 24.6667 H 9 V 19.3333 H 6 Z M 6 16.6667 H 9 V 11.3333 H 6 Z ',
            fill: 'currentColor',
          }),
        );
      CombinationIcon.__docgenInfo = {
        description: '',
        methods: [],
        displayName: 'CombinationIcon',
        props: { title: { required: !1, tsType: { name: 'string' }, description: '' } },
      };
      const ConfirmationTaskIcon = (props) =>
        react.createElement(
          SvgTemplate,
          props,
          react.createElement('rect', {
            x: '3.8222',
            y: '4.5311',
            width: '18',
            height: '15.47',
            rx: '2',
            stroke: 'currentColor',
            strokeWidth: '1.5',
          }),
          react.createElement('path', {
            d: 'M7.54221 17.6227H18.1022',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeMiterlimit: '2.61533',
            strokeLinecap: 'round',
          }),
          react.createElement('path', {
            d: 'M9.00428 15.4174L9.56043 12.9147L14.2877 8.1874C14.8326 7.64252 15.6913 7.64058 16.2343 8.18742C16.7744 8.73148 16.7764 9.63516 16.2343 10.1773L11.507 14.9046L9.00428 15.4174Z',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinejoin: 'round',
          }),
          react.createElement('path', {
            d: 'M13.4535 8.20169L15.4 10.1482',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeMiterlimit: '2.61533',
          }),
        );
      ConfirmationTaskIcon.__docgenInfo = {
        description: '',
        methods: [],
        displayName: 'ConfirmationTaskIcon',
        props: { title: { required: !1, tsType: { name: 'string' }, description: '' } },
      };
      const DataTaskIcon = (props) =>
        react.createElement(
          SvgTemplate,
          props,
          react.createElement('rect', {
            x: '3.4111',
            y: '4.53186',
            width: '18',
            height: '15.4684',
            rx: '2',
            stroke: 'currentColor',
            strokeWidth: '1.5',
          }),
          react.createElement('rect', {
            x: '7.1311',
            y: '6.96924',
            width: '10.56',
            height: '10.5937',
            rx: '1',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
            strokeLinejoin: 'round',
          }),
          react.createElement('path', {
            d: 'M10.0316 12.2661H14.7905',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
          react.createElement('path', {
            d: 'M10.0316 9.50235H14.7906',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
          react.createElement('path', {
            d: 'M10.367 15.0298H13.9362',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
        );
      DataTaskIcon.__docgenInfo = {
        description: '',
        methods: [],
        displayName: 'DataTaskIcon',
        props: { title: { required: !1, tsType: { name: 'string' }, description: '' } },
      };
      const DefinitionIcon = (props) =>
        react.createElement(
          SvgTemplate,
          { viewBox: '0 0 36 36', ...props },
          react.createElement('path', {
            fillRule: 'evenodd',
            clipRule: 'evenodd',
            d: ' M 4.5 4.5 H 10.5 V 31.5 H 4.5 Z M 7.5 25.5 C 8.32843 25.5 9 26.1716 9 27 V 28.5 C 9 29.3284 8.32843 30 7.5 30 C 6.67157 30 6 29.3284 6 28.5 V 27 C 6 26.1716 6.67157 25.5 7.5 25.5 Z ',
            fill: 'currentColor',
          }),
          react.createElement('path', {
            fillRule: 'evenodd',
            clipRule: 'evenodd',
            d: ' M 15 10.5 H 21 V 31.5 H 15 Z M 18 25.5 C 18.8284 25.5 19.5 26.1716 19.5 27 V 28.5 C 19.5 29.3284 18.8284 30 18 30 C 17.1716 30 16.5 29.3284 16.5 28.5 V 27 C 16.5 26.1716 17.1716 25.5 18 25.5 Z ',
            fill: 'currentColor',
          }),
          react.createElement('path', {
            fillRule: 'evenodd',
            clipRule: 'evenodd',
            d: ' M 25.5 7.5 H 31.5 V 31.5 H 25.5 Z M 28.5 25.5 C 29.3284 25.5 30 26.1716 30 27 V 28.5 C 30 29.3284 29.3284 30 28.5 30 C 27.6716 30 27 29.3284 27 28.5 V 27 C 27 26.1716 27.6716 25.5 28.5 25.5 Z ',
            fill: 'currentColor',
          }),
        );
      DefinitionIcon.__docgenInfo = {
        description: '',
        methods: [],
        displayName: 'DefinitionIcon',
        props: { title: { required: !1, tsType: { name: 'string' }, description: '' } },
      };
      const ElementIcon = (props) =>
        react.createElement(
          SvgTemplate,
          { viewBox: '0 0 36 36', ...props },
          react.createElement('path', {
            d: ' M 6 12 H 15 V 21 H 24 V 30 H 6 Z ',
            fill: 'currentColor',
          }),
          react.createElement('path', { d: ' M 21 6 H 30 V 15 H 21 Z ', fill: 'currentColor' }),
        );
      ElementIcon.__docgenInfo = {
        description: '',
        methods: [],
        displayName: 'ElementIcon',
        props: { title: { required: !1, tsType: { name: 'string' }, description: '' } },
      };
      const EndEventIcon = (props) =>
        react.createElement(
          SvgTemplate,
          { viewBox: '0 0 25 24', ...props },
          react.createElement('circle', {
            cx: '12.6838',
            cy: '12',
            r: '7.5',
            stroke: '#1E2B3C',
            strokeWidth: '3',
          }),
        );
      EndEventIcon.__docgenInfo = {
        description: '',
        methods: [],
        displayName: 'EndEventIcon',
        props: { title: { required: !1, tsType: { name: 'string' }, description: '' } },
      };
      const FeedbackTaskIcon = (props) =>
        react.createElement(
          SvgTemplate,
          props,
          react.createElement('rect', {
            x: '3.64441',
            y: '4.5311',
            width: '18',
            height: '15.47',
            rx: '2',
            stroke: 'currentColor',
            strokeWidth: '1.5',
          }),
          react.createElement('path', {
            d: 'M16.9245 8.11652H8.36429C7.812 8.11652 7.36429 8.56423 7.36429 9.11651V17.2136C7.36429 17.3711 7.54359 17.4614 7.67009 17.3676L9.80619 15.7851C9.97844 15.6575 10.1871 15.5886 10.4015 15.5886L16.9245 15.5886C17.4768 15.5886 17.9245 15.1409 17.9245 14.5886V9.11652C17.9245 8.56423 17.4768 8.11652 16.9245 8.11652Z',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
        );
      FeedbackTaskIcon.__docgenInfo = {
        description: '',
        methods: [],
        displayName: 'FeedbackTaskIcon',
        props: { title: { required: !1, tsType: { name: 'string' }, description: '' } },
      };
      const GiteaIcon = (props) =>
        react.createElement(
          SvgTemplate,
          { ...props, viewBox: '0 0 640 640' },
          react.createElement(
            'g',
            null,
            react.createElement('path', {
              fill: '#FFFFFF',
              d: 'M395.9,484.2l-126.9-61c-12.5-6-17.9-21.2-11.8-33.8l61-126.9c6-12.5,21.2-17.9,33.8-11.8   c17.2,8.3,27.1,13,27.1,13l-0.1-109.2l16.7-0.1l0.1,117.1c0,0,57.4,24.2,83.1,40.1c3.7,2.3,10.2,6.8,12.9,14.4   c2.1,6.1,2,13.1-1,19.3l-61,126.9C423.6,484.9,408.4,490.3,395.9,484.2z',
            }),
            react.createElement(
              'g',
              null,
              react.createElement(
                'g',
                null,
                react.createElement('path', {
                  fill: 'currentColor',
                  d: 'M622.7,149.8c-4.1-4.1-9.6-4-9.6-4s-117.2,6.6-177.9,8c-13.3,0.3-26.5,0.6-39.6,0.7c0,39.1,0,78.2,0,117.2     c-5.5-2.6-11.1-5.3-16.6-7.9c0-36.4-0.1-109.2-0.1-109.2c-29,0.4-89.2-2.2-89.2-2.2s-141.4-7.1-156.8-8.5     c-9.8-0.6-22.5-2.1-39,1.5c-8.7,1.8-33.5,7.4-53.8,26.9C-4.9,212.4,6.6,276.2,8,285.8c1.7,11.7,6.9,44.2,31.7,72.5     c45.8,56.1,144.4,54.8,144.4,54.8s12.1,28.9,30.6,55.5c25,33.1,50.7,58.9,75.7,62c63,0,188.9-0.1,188.9-0.1s12,0.1,28.3-10.3     c14-8.5,26.5-23.4,26.5-23.4s12.9-13.8,30.9-45.3c5.5-9.7,10.1-19.1,14.1-28c0,0,55.2-117.1,55.2-231.1     C633.2,157.9,624.7,151.8,622.7,149.8z M125.6,353.9c-25.9-8.5-36.9-18.7-36.9-18.7S69.6,321.8,60,295.4     c-16.5-44.2-1.4-71.2-1.4-71.2s8.4-22.5,38.5-30c13.8-3.7,31-3.1,31-3.1s7.1,59.4,15.7,94.2c7.2,29.2,24.8,77.7,24.8,77.7     S142.5,359.9,125.6,353.9z M425.9,461.5c0,0-6.1,14.5-19.6,15.4c-5.8,0.4-10.3-1.2-10.3-1.2s-0.3-0.1-5.3-2.1l-112.9-55     c0,0-10.9-5.7-12.8-15.6c-2.2-8.1,2.7-18.1,2.7-18.1L322,273c0,0,4.8-9.7,12.2-13c0.6-0.3,2.3-1,4.5-1.5c8.1-2.1,18,2.8,18,2.8     l110.7,53.7c0,0,12.6,5.7,15.3,16.2c1.9,7.4-0.5,14-1.8,17.2C474.6,363.8,425.9,461.5,425.9,461.5z',
                }),
                react.createElement('path', {
                  fill: 'currentColor',
                  d: 'M326.8,380.1c-8.2,0.1-15.4,5.8-17.3,13.8c-1.9,8,2,16.3,9.1,20c7.7,4,17.5,1.8,22.7-5.4     c5.1-7.1,4.3-16.9-1.8-23.1l24-49.1c1.5,0.1,3.7,0.2,6.2-0.5c4.1-0.9,7.1-3.6,7.1-3.6c4.2,1.8,8.6,3.8,13.2,6.1     c4.8,2.4,9.3,4.9,13.4,7.3c0.9,0.5,1.8,1.1,2.8,1.9c1.6,1.3,3.4,3.1,4.7,5.5c1.9,5.5-1.9,14.9-1.9,14.9     c-2.3,7.6-18.4,40.6-18.4,40.6c-8.1-0.2-15.3,5-17.7,12.5c-2.6,8.1,1.1,17.3,8.9,21.3c7.8,4,17.4,1.7,22.5-5.3     c5-6.8,4.6-16.3-1.1-22.6c1.9-3.7,3.7-7.4,5.6-11.3c5-10.4,13.5-30.4,13.5-30.4c0.9-1.7,5.7-10.3,2.7-21.3     c-2.5-11.4-12.6-16.7-12.6-16.7c-12.2-7.9-29.2-15.2-29.2-15.2s0-4.1-1.1-7.1c-1.1-3.1-2.8-5.1-3.9-6.3c4.7-9.7,9.4-19.3,14.1-29     c-4.1-2-8.1-4-12.2-6.1c-4.8,9.8-9.7,19.7-14.5,29.5c-6.7-0.1-12.9,3.5-16.1,9.4c-3.4,6.3-2.7,14.1,1.9,19.8     C343.2,346.5,335,363.3,326.8,380.1z',
                }),
              ),
            ),
          ),
        );
      GiteaIcon.__docgenInfo = {
        description: '',
        methods: [],
        displayName: 'GiteaIcon',
        props: { title: { required: !1, tsType: { name: 'string' }, description: '' } },
      };
      const GitHubIcon = (props) =>
        react.createElement(
          SvgTemplate,
          { ...props, viewBox: '0 0 98 96' },
          react.createElement('path', {
            xmlns: 'http://www.w3.org/2000/svg',
            fillRule: 'evenodd',
            clipRule: 'evenodd',
            d: 'M48.854 0C21.839 0 0 22 0 49.217c0 21.756 13.993 40.172 33.405 46.69 2.427.49 3.316-1.059 3.316-2.362 0-1.141-.08-5.052-.08-9.127-13.59 2.934-16.42-5.867-16.42-5.867-2.184-5.704-5.42-7.17-5.42-7.17-4.448-3.015.324-3.015.324-3.015 4.934.326 7.523 5.052 7.523 5.052 4.367 7.496 11.404 5.378 14.235 4.074.404-3.178 1.699-5.378 3.074-6.6-10.839-1.141-22.243-5.378-22.243-24.283 0-5.378 1.94-9.778 5.014-13.2-.485-1.222-2.184-6.275.486-13.038 0 0 4.125-1.304 13.426 5.052a46.97 46.97 0 0 1 12.214-1.63c4.125 0 8.33.571 12.213 1.63 9.302-6.356 13.427-5.052 13.427-5.052 2.67 6.763.97 11.816.485 13.038 3.155 3.422 5.015 7.822 5.015 13.2 0 18.905-11.404 23.06-22.324 24.283 1.78 1.548 3.316 4.481 3.316 9.126 0 6.6-.08 11.897-.08 13.526 0 1.304.89 2.853 3.316 2.364 19.412-6.52 33.405-24.935 33.405-46.691C97.707 22 75.788 0 48.854 0z',
            fill: '#fff',
          }),
        );
      GitHubIcon.__docgenInfo = {
        description: '',
        methods: [],
        displayName: 'GitHubIcon',
        props: { title: { required: !1, tsType: { name: 'string' }, description: '' } },
      };
      const GroupIcon = (props) =>
        react.createElement(
          SvgTemplate,
          props,
          react.createElement('rect', {
            x: '4.42725',
            y: '4.90283',
            width: '16',
            height: '16',
            rx: '3',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeDasharray: '3 3',
          }),
        );
      GroupIcon.__docgenInfo = {
        description: '',
        methods: [],
        displayName: 'GroupIcon',
        props: { title: { required: !1, tsType: { name: 'string' }, description: '' } },
      };
      const LikertIcon = (props) =>
        react.createElement(
          SvgTemplate,
          props,
          react.createElement('path', {
            d: 'M4.43774 12.9028L19.9998 12.9028',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
          react.createElement('path', {
            d: 'M6.71973 8.0918L7.71973 8.0918',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
          react.createElement('path', {
            d: 'M6.71973 17.0181L7.71973 17.0181',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
          react.createElement('path', {
            d: 'M10.416 8.0918L11.416 8.0918',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
          react.createElement('path', {
            d: 'M10.416 17.0181L11.416 17.0181',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
          react.createElement('path', {
            d: 'M14.1121 8.0918L15.1121 8.0918',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
          react.createElement('path', {
            d: 'M14.1121 17.0181L15.1121 17.0181',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
          react.createElement('path', {
            d: 'M17.8083 8.0918L18.8083 8.0918',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
          react.createElement('path', {
            d: 'M17.8083 17.0181L18.8083 17.0181',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
          react.createElement('path', {
            d: 'M4.10965 4.0049L12.2432 4.00488L20 4.0049',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
          react.createElement('path', {
            d: 'M3.99999 4.00146L4 19.9982',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
        );
      LikertIcon.__docgenInfo = {
        description: '',
        methods: [],
        displayName: 'LikertIcon',
        props: { title: { required: !1, tsType: { name: 'string' }, description: '' } },
      };
      const LongTextIcon = (props) =>
        react.createElement(
          SvgTemplate,
          props,
          react.createElement('rect', {
            x: '3.95972',
            y: '4.76318',
            width: '18',
            height: '16',
            rx: '3',
            stroke: 'currentColor',
            strokeWidth: '1.5',
          }),
          react.createElement('path', {
            d: 'M6.95972 14.4292H18.9597',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
          react.createElement('path', {
            d: 'M6.95972 11.2388H18.9597',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
          react.createElement('path', {
            d: 'M6.95972 8.04834H18.9597',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
          react.createElement('path', {
            d: 'M6.96069 17.4292H12.9607',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
        );
      LongTextIcon.__docgenInfo = {
        description: '',
        methods: [],
        displayName: 'LongTextIcon',
        props: { title: { required: !1, tsType: { name: 'string' }, description: '' } },
      };
      const NavBarIcon = (props) =>
        react.createElement(
          SvgTemplate,
          props,
          react.createElement('path', {
            d: 'M8.42627 11.8654C8.42627 12.7101 7.7547 13.3948 6.92627 13.3948C6.09784 13.3948 5.42627 12.7101 5.42627 11.8654C5.42627 11.0207 6.09784 10.3359 6.92627 10.3359C7.7547 10.3359 8.42627 11.0207 8.42627 11.8654Z',
            fill: 'currentColor',
            stroke: 'currentColor',
            strokeWidth: '1.5',
          }),
          react.createElement('ellipse', {
            cx: '12.5',
            cy: '11.8653',
            rx: '0.5',
            ry: '0.509815',
            fill: 'currentColor',
            stroke: 'currentColor',
            strokeWidth: '1.5',
          }),
          react.createElement('ellipse', {
            cx: '18.0737',
            cy: '11.8653',
            rx: '0.5',
            ry: '0.509815',
            fill: 'currentColor',
            stroke: 'currentColor',
            strokeWidth: '1.5',
          }),
          react.createElement('path', {
            d: 'M4 19H20',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
          react.createElement('path', {
            d: 'M4 5H20',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
        );
      NavBarIcon.__docgenInfo = {
        description: '',
        methods: [],
        displayName: 'NavBarIcon',
        props: { title: { required: !1, tsType: { name: 'string' }, description: '' } },
      };
      const NumberIcon = (props) =>
        react.createElement(
          SvgTemplate,
          { viewBox: '0 0 36 36', ...props },
          react.createElement('path', {
            fillRule: 'evenodd',
            clipRule: 'evenodd',
            d: ' M 10.4795 29.8148 L 13.4646 5.81476 L 16.4417 6.18505 L 13.4566 30.1851 Z ',
            fill: 'currentColor',
          }),
          react.createElement('path', {
            fillRule: 'evenodd',
            clipRule: 'evenodd',
            d: ' M 19.4355 29.8148 L 22.4207 5.81476 L 25.3978 6.18505 L 22.4126 30.1851 Z ',
            fill: 'currentColor',
          }),
          react.createElement('path', {
            fillRule: 'evenodd',
            clipRule: 'evenodd',
            d: ' M 6.13124 12.4091 L 30.0117 12.5915 L 29.989 15.5914 L 6.10856 15.409 Z ',
            fill: 'currentColor',
          }),
          react.createElement('path', {
            fillRule: 'evenodd',
            clipRule: 'evenodd',
            d: ' M 6.01112 20.4083 L 29.8916 20.5906 L 29.8689 23.5905 L 5.98844 23.4082 Z ',
            fill: 'currentColor',
          }),
        );
      NumberIcon.__docgenInfo = {
        description: '',
        methods: [],
        displayName: 'NumberIcon',
        props: { title: { required: !1, tsType: { name: 'string' }, description: '' } },
      };
      const ObjectIcon = (props) =>
        react.createElement(
          SvgTemplate,
          { viewBox: '0 0 36 36', ...props },
          react.createElement('path', {
            fillRule: 'evenodd',
            clipRule: 'evenodd',
            d: ' M 13.0604 10.5 C 12.7791 10.5 12.5093 10.6117 12.3104 10.8107 C 12.1115 11.0096 11.9997 11.2794 11.9997 11.5607 V 12.6897 C 11.9997 14.7992 11.025 16.7377 9.43968 18 C 11.025 19.2623 11.9997 21.2008 11.9997 23.3103 V 24.4393 C 11.9997 24.7206 12.1115 24.9904 12.3104 25.1893 C 12.5093 25.3883 12.7791 25.5 13.0604 25.5 H 13.4997 V 28.5 H 13.0604 C 11.9834 28.5 10.9506 28.0722 10.1891 27.3107 C 9.42755 26.5491 8.99973 25.5163 8.99973 24.4393 V 23.3103 C 8.99973 21.6805 7.95682 20.2335 6.41065 19.7181 L 5.52539 19.423 L 5.52539 16.577 L 6.41065 16.2819 C 7.95682 15.7665 8.99973 14.3195 8.99973 12.6897 V 11.5607 C 8.99973 10.4837 9.42755 9.45086 10.1891 8.68934 C 10.9506 7.92782 11.9834 7.5 13.0604 7.5 H 13.4997 V 10.5 Z ',
            fill: 'currentColor',
          }),
          react.createElement('path', {
            fillRule: 'evenodd',
            clipRule: 'evenodd',
            d: ' M 22.9396 25.5 C 23.2209 25.5 23.4907 25.3883 23.6896 25.1893 C 23.8885 24.9904 24.0003 24.7206 24.0003 24.4393 V 23.3103 C 24.0003 21.2008 24.975 19.2623 26.5603 18 C 24.975 16.7377 24.0003 14.7992 24.0003 12.6897 L 24.0003 11.5607 C 24.0003 11.2794 23.8885 11.0096 23.6896 10.8107 C 23.4907 10.6117 23.2209 10.5 22.9396 10.5 H 22.5003 V 7.5 H 22.9396 C 24.0166 7.5 25.0494 7.92782 25.8109 8.68934 C 26.5725 9.45086 27.0003 10.4837 27.0003 11.5607 V 12.6897 C 27.0003 14.3195 28.0432 15.7665 29.5894 16.2819 L 30.4746 16.577 V 19.423 L 29.5894 19.7181 C 28.0432 20.2335 27.0003 21.6805 27.0003 23.3103 V 24.4393 C 27.0003 25.5163 26.5725 26.5491 25.8109 27.3107 C 25.0494 28.0722 24.0166 28.5 22.9396 28.5 H 22.5003 V 25.5 Z ',
            fill: 'currentColor',
          }),
        );
      ObjectIcon.__docgenInfo = {
        description: '',
        methods: [],
        displayName: 'ObjectIcon',
        props: { title: { required: !1, tsType: { name: 'string' }, description: '' } },
      };
      const TextIcon = (props) =>
        react.createElement(
          SvgTemplate,
          props,
          react.createElement('path', {
            d: 'M4.95947 18.6934H12.9595',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
          react.createElement('path', {
            d: 'M4.95947 10.6436H12.9595',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
          react.createElement('path', {
            d: 'M4.95947 14.6934H20.9595',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
          react.createElement('path', {
            d: 'M4.95947 6.69336H20.9595',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
        );
      TextIcon.__docgenInfo = {
        description: '',
        methods: [],
        displayName: 'TextIcon',
        props: { title: { required: !1, tsType: { name: 'string' }, description: '' } },
      };
      const PaymentDetailsIcon = (props) =>
        react.createElement(
          SvgTemplate,
          props,
          react.createElement('path', {
            fillRule: 'evenodd',
            clipRule: 'evenodd',
            d: 'M5.54839 3.75V20.25H6.53626C6.96383 20.25 7.31045 20.5858 7.31045 21C7.31045 21.4142 6.96383 21.75 6.53626 21.75H5.29032C4.5777 21.75 4 21.1904 4 20.5V3.5C4 2.80964 4.5777 2.25 5.29032 2.25H18.7097C19.4223 2.25 20 2.80964 20 3.5V11.0761C20 11.4903 19.6534 11.8261 19.2258 11.8261C18.7982 11.8261 18.4516 11.4903 18.4516 11.0761V3.75H5.54839Z',
            fill: '#1E2B3C',
          }),
          react.createElement('path', {
            d: 'M8.13232 6.6156H14.6323',
            stroke: '#1E2B3C',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
          react.createElement('path', {
            d: 'M8.31836 9.82996H12.8184',
            stroke: '#1E2B3C',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
          react.createElement('rect', {
            x: '8.93881',
            y: '13.1721',
            width: '10.3168',
            height: '7.81836',
            rx: '1',
            stroke: '#1E2B3C',
            strokeWidth: '1.5',
          }),
          react.createElement('path', {
            d: 'M8.93881 15.5641L18.5684 15.5641',
            stroke: '#1E2B3C',
            strokeWidth: '1.5',
            strokeMiterlimit: '2.61533',
            strokeLinecap: 'round',
          }),
          react.createElement('circle', {
            cx: '10.8135',
            cy: '17.8779',
            r: '0.75',
            fill: '#1E2B3C',
          }),
          react.createElement('circle', {
            cx: '11.9512',
            cy: '17.8779',
            r: '0.75',
            fill: '#1E2B3C',
          }),
        );
      PaymentDetailsIcon.__docgenInfo = {
        description: '',
        methods: [],
        displayName: 'PaymentDetailsIcon',
        props: { title: { required: !1, tsType: { name: 'string' }, description: '' } },
      };
      const PaymentTaskIcon = (props) =>
        react.createElement(
          SvgTemplate,
          props,
          react.createElement('rect', {
            x: '3.23331',
            y: '4.5311',
            width: '18',
            height: '15.47',
            rx: '2',
            stroke: 'currentColor',
            strokeWidth: '1.5',
          }),
          react.createElement('rect', {
            x: '6.95331',
            y: '8.32443',
            width: '10.56',
            height: '7.88333',
            rx: '1',
            stroke: 'currentColor',
            strokeWidth: '1.5',
          }),
          react.createElement('path', {
            d: 'M7.35294 10.7776H17.3529',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeMiterlimit: '2.61533',
            strokeLinecap: 'round',
          }),
          react.createElement('circle', {
            cx: '9.03253',
            cy: '13.6208',
            r: '0.75',
            fill: 'currentColor',
          }),
          react.createElement('circle', {
            cx: '10.1702',
            cy: '13.6208',
            r: '0.75',
            fill: 'currentColor',
          }),
        );
      PaymentTaskIcon.__docgenInfo = {
        description: '',
        methods: [],
        displayName: 'PaymentTaskIcon',
        props: { title: { required: !1, tsType: { name: 'string' }, description: '' } },
      };
      const PropertyIcon = (props) =>
        react.createElement(
          SvgTemplate,
          { viewBox: '0 0 36 36', ...props },
          react.createElement('path', {
            fillRule: 'evenodd',
            clipRule: 'evenodd',
            d: ' M 30 10.5 H 12 V 7.5 H 30 Z ',
            fill: 'currentColor',
          }),
          react.createElement('path', {
            fillRule: 'evenodd',
            clipRule: 'evenodd',
            d: ' M 30 19.5 H 12 V 16.5 H 30 Z ',
            fill: 'currentColor',
          }),
          react.createElement('path', {
            fillRule: 'evenodd',
            clipRule: 'evenodd',
            d: ' M 30 28.5 H 12 V 25.5 H 30 Z ',
            fill: 'currentColor',
          }),
          react.createElement('path', {
            fillRule: 'evenodd',
            clipRule: 'evenodd',
            d: ' M 9 10.5 H 6 V 7.5 H 9 Z ',
            fill: 'currentColor',
          }),
          react.createElement('path', {
            fillRule: 'evenodd',
            clipRule: 'evenodd',
            d: ' M 9 19.5 H 6 V 16.5 H 9 Z ',
            fill: 'currentColor',
          }),
          react.createElement('path', {
            fillRule: 'evenodd',
            clipRule: 'evenodd',
            d: ' M 9 28.5 H 6 V 25.5 H 9 Z ',
            fill: 'currentColor',
          }),
        );
      PropertyIcon.__docgenInfo = {
        description: '',
        methods: [],
        displayName: 'PropertyIcon',
        props: { title: { required: !1, tsType: { name: 'string' }, description: '' } },
      };
      const RadioButtonIcon = (props) =>
        react.createElement(
          SvgTemplate,
          props,
          react.createElement('circle', {
            cx: '12',
            cy: '12',
            r: '9',
            stroke: 'currentColor',
            strokeWidth: '1.5',
          }),
          react.createElement('circle', {
            cx: '12',
            cy: '12',
            r: '2.5',
            fill: 'currentColor',
            stroke: 'currentColor',
            strokeWidth: '1.5',
          }),
        );
      RadioButtonIcon.__docgenInfo = {
        description: '',
        methods: [],
        displayName: 'RadioButtonIcon',
        props: { title: { required: !1, tsType: { name: 'string' }, description: '' } },
      };
      const ReferenceIcon = (props) =>
        react.createElement(
          SvgTemplate,
          { viewBox: '0 0 36 36', ...props },
          react.createElement('path', {
            fillRule: 'evenodd',
            clipRule: 'evenodd',
            d: ' M 18.3981 17.6019 C 17.4276 16.6313 15.854 16.6313 14.8834 17.6019 L 9.44641 23.0389 C 8.47585 24.0094 8.47585 25.583 9.44641 26.5536 C 10.417 27.5242 11.9906 27.5242 12.9611 26.5536 L 17.0389 22.4759 L 18.9611 24.3981 L 14.8834 28.4759 C 12.8512 30.5081 9.55635 30.5081 7.52415 28.4759 C 5.49195 26.4437 5.49195 23.1488 7.52415 21.1166 L 12.9611 15.6796 C 14.9933 13.6474 18.2882 13.6474 20.3204 15.6796 L 21 16.3593 L 19.0777 18.2815 Z ',
            fill: 'currentColor',
          }),
          react.createElement('path', {
            fillRule: 'evenodd',
            clipRule: 'evenodd',
            d: ' M 21.1166 7.52415 C 23.1488 5.49195 26.4437 5.49195 28.4759 7.52415 C 30.508 9.55635 30.5081 12.8512 28.4759 14.8834 L 23.0389 20.3204 C 21.0067 22.3526 17.7118 22.3526 15.6796 20.3204 L 15 19.6408 L 16.9223 17.7185 L 17.6019 18.3981 C 18.5724 19.3687 20.146 19.3687 21.1166 18.3981 L 26.5536 12.9611 C 27.5242 11.9906 27.5241 10.417 26.5536 9.44641 C 25.583 8.47585 24.0094 8.47585 23.0389 9.44641 L 18.9611 13.5241 L 17.0389 11.6019 Z ',
            fill: 'currentColor',
          }),
        );
      ReferenceIcon.__docgenInfo = {
        description: '',
        methods: [],
        displayName: 'ReferenceIcon',
        props: { title: { required: !1, tsType: { name: 'string' }, description: '' } },
      };
      const RepeatingGroupIcon = (props) =>
        react.createElement(
          SvgTemplate,
          props,
          react.createElement('rect', {
            width: 12,
            height: 12,
            x: 3,
            y: 3,
            stroke: '#1E2B3C',
            strokeDasharray: '2.25 2.25',
            strokeWidth: 1.5,
            rx: 2.25,
          }),
          react.createElement('rect', {
            width: 12,
            height: 12,
            x: 9,
            y: 9,
            stroke: '#1E2B3C',
            strokeDasharray: '2.25 2.25',
            strokeWidth: 1.5,
            rx: 2.25,
          }),
        );
      RepeatingGroupIcon.__docgenInfo = {
        description: '',
        methods: [],
        displayName: 'RepeatingGroupIcon',
        props: { title: { required: !1, tsType: { name: 'string' }, description: '' } },
      };
      const SectionHeaderWarningIcon = (props) =>
        react.createElement(
          SvgTemplate,
          props,
          react.createElement('rect', {
            y: '0.477051',
            width: '24',
            height: '24',
            rx: '12',
            fill: '#B3253A',
          }),
          react.createElement('path', {
            fillRule: 'evenodd',
            clipRule: 'evenodd',
            d: 'M12.75 6.97705C12.75 6.56284 12.4142 6.22705 12 6.22705C11.5858 6.22705 11.25 6.56284 11.25 6.97705V14.9771C11.25 15.3913 11.5858 15.7271 12 15.7271C12.4142 15.7271 12.75 15.3913 12.75 14.9771V6.97705ZM12 16.9771C11.4477 16.9771 11 17.4248 11 17.9771C11 18.5293 11.4477 18.9771 12 18.9771C12.5523 18.9771 13 18.5293 13 17.9771C13 17.4248 12.5523 16.9771 12 16.9771Z',
            fill: 'white',
          }),
        );
      SectionHeaderWarningIcon.__docgenInfo = {
        description: '',
        methods: [],
        displayName: 'SectionHeaderWarningIcon',
        props: { title: { required: !1, tsType: { name: 'string' }, description: '' } },
      };
      const SelectIcon = (props) =>
        react.createElement(
          SvgTemplate,
          props,
          react.createElement('rect', {
            x: '3.95972',
            y: '6.90283',
            width: '18',
            height: '12',
            rx: '3',
            stroke: 'currentColor',
            strokeWidth: '1.5',
          }),
          react.createElement('path', {
            d: 'M18.4597 12.5566H13.4597L15.9159 14.5566L18.4597 12.5566Z',
            fill: 'currentColor',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinejoin: 'round',
          }),
        );
      SelectIcon.__docgenInfo = {
        description: '',
        methods: [],
        displayName: 'SelectIcon',
        props: { title: { required: !1, tsType: { name: 'string' }, description: '' } },
      };
      const ShortTextIcon = ({ ...props }) =>
        react.createElement(
          SvgTemplate,
          props,
          react.createElement('rect', {
            x: '3',
            y: '6.83301',
            width: '18',
            height: '12',
            rx: '3',
            stroke: 'currentColor',
            strokeWidth: '1.5',
          }),
          react.createElement('path', {
            d: 'M6 10.0771H18',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
          react.createElement('path', {
            d: 'M6.00098 13.0771H12.001',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
        );
      ShortTextIcon.__docgenInfo = {
        description: '',
        methods: [],
        displayName: 'ShortTextIcon',
        props: { title: { required: !1, tsType: { name: 'string' }, description: '' } },
      };
      const SignTaskIcon = (props) =>
        react.createElement(
          SvgTemplate,
          props,
          react.createElement('rect', {
            x: '3.8222',
            y: '4.5311',
            width: '18',
            height: '15.47',
            rx: '2',
            stroke: 'currentColor',
            strokeWidth: '1.5',
          }),
          react.createElement('path', {
            d: 'M7.54221 17.6227H18.1022',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeMiterlimit: '2.61533',
            strokeLinecap: 'round',
          }),
          react.createElement('path', {
            d: 'M9.00428 15.4174L9.56043 12.9147L14.2877 8.1874C14.8326 7.64252 15.6913 7.64058 16.2343 8.18742C16.7744 8.73148 16.7764 9.63516 16.2343 10.1773L11.507 14.9046L9.00428 15.4174Z',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinejoin: 'round',
          }),
          react.createElement('path', {
            d: 'M13.4535 8.20169L15.4 10.1482',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeMiterlimit: '2.61533',
          }),
        );
      SignTaskIcon.__docgenInfo = {
        description: '',
        methods: [],
        displayName: 'SignTaskIcon',
        props: { title: { required: !1, tsType: { name: 'string' }, description: '' } },
      };
      const SlackIcon = (props) =>
        react.createElement(
          SvgTemplate,
          { ...props, viewBox: '0 0 32 33' },
          react.createElement('path', {
            d: 'M6.72317 21.0286C6.72317 22.8788 5.21176 24.3902 3.36159 24.3902C1.51141 24.3902 0 22.8788 0 21.0286C0 19.1784 1.51141 17.667 3.36159 17.667H6.72317V21.0286Z',
            fill: '#E01E5A',
          }),
          react.createElement('path', {
            d: 'M8.41797 21.0286C8.41797 19.1784 9.92938 17.667 11.7796 17.667C13.6297 17.667 15.1411 19.1784 15.1411 21.0286V29.4456C15.1411 31.2957 13.6297 32.8072 11.7796 32.8072C9.92938 32.8072 8.41797 31.2957 8.41797 29.4456V21.0286Z',
            fill: '#E01E5A',
          }),
          react.createElement('path', {
            d: 'M11.7796 7.53079C9.92938 7.53079 8.41797 6.01938 8.41797 4.1692C8.41797 2.31903 9.92938 0.807617 11.7796 0.807617C13.6297 0.807617 15.1411 2.31903 15.1411 4.1692V7.53079H11.7796Z',
            fill: '#36C5F0',
          }),
          react.createElement('path', {
            d: 'M11.7786 9.22363C13.6288 9.22363 15.1402 10.735 15.1402 12.5852C15.1402 14.4354 13.6288 15.9468 11.7786 15.9468H3.36159C1.51141 15.9468 0 14.4354 0 12.5852C0 10.735 1.51141 9.22363 3.36159 9.22363H11.7786Z',
            fill: '#36C5F0',
          }),
          react.createElement('path', {
            d: 'M25.2773 12.5852C25.2773 10.735 26.7888 9.22363 28.6389 9.22363C30.4891 9.22363 32.0005 10.735 32.0005 12.5852C32.0005 14.4354 30.4891 15.9468 28.6389 15.9468H25.2773V12.5852Z',
            fill: '#2EB67D',
          }),
          react.createElement('path', {
            d: 'M23.5825 12.5862C23.5825 14.4364 22.0711 15.9478 20.221 15.9478C18.3708 15.9478 16.8594 14.4364 16.8594 12.5862V4.1692C16.8594 2.31903 18.3708 0.807617 20.221 0.807617C22.0711 0.807617 23.5825 2.31903 23.5825 4.1692V12.5862Z',
            fill: '#2EB67D',
          }),
          react.createElement('path', {
            d: 'M20.221 26.085C22.0711 26.085 23.5825 27.5964 23.5825 29.4465C23.5825 31.2967 22.0711 32.8081 20.221 32.8081C18.3708 32.8081 16.8594 31.2967 16.8594 29.4465V26.085H20.221Z',
            fill: '#ECB22E',
          }),
          react.createElement('path', {
            d: 'M20.221 24.3911C18.3708 24.3911 16.8594 22.8797 16.8594 21.0296C16.8594 19.1794 18.3708 17.668 20.221 17.668H28.638C30.4881 17.668 31.9995 19.1794 31.9995 21.0296C31.9995 22.8797 30.4881 24.3911 28.638 24.3911H20.221Z',
            fill: '#ECB22E',
          }),
        );
      SlackIcon.__docgenInfo = {
        description: '',
        methods: [],
        displayName: 'SlackIcon',
        props: { title: { required: !1, tsType: { name: 'string' }, description: '' } },
      };
      const StringIcon = (props) =>
        react.createElement(
          SvgTemplate,
          { viewBox: '0 0 36 36', ...props },
          react.createElement('path', {
            fillRule: 'evenodd',
            clipRule: 'evenodd',
            d: ' M 7.5 6 V 15 H 4.5 V 6 Z ',
            fill: 'currentColor',
          }),
          react.createElement('path', {
            fillRule: 'evenodd',
            clipRule: 'evenodd',
            d: ' M 25.5 6 V 15 H 22.5 V 6 Z ',
            fill: 'currentColor',
          }),
          react.createElement('path', {
            fillRule: 'evenodd',
            clipRule: 'evenodd',
            d: ' M 13.5 6 V 15 H 10.5 V 6 Z ',
            fill: 'currentColor',
          }),
          react.createElement('path', {
            fillRule: 'evenodd',
            clipRule: 'evenodd',
            d: ' M 31.5 6 V 15 H 28.5 V 6 Z ',
            fill: 'currentColor',
          }),
        );
      StringIcon.__docgenInfo = {
        description: '',
        methods: [],
        displayName: 'StringIcon',
        props: { title: { required: !1, tsType: { name: 'string' }, description: '' } },
      };
      const TitleIcon = (props) =>
        react.createElement(
          SvgTemplate,
          props,
          react.createElement('path', {
            d: 'M4 15.8467H20',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
          react.createElement('path', {
            d: 'M4.00098 19.6934H12.001',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
          react.createElement('path', {
            d: 'M4.00171 5.69336H10.0017',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
          react.createElement('path', {
            d: 'M7.00171 6.05322L7.00171 12.0532',
            stroke: 'currentColor',
            strokeWidth: '1.5',
            strokeLinecap: 'round',
          }),
        );
      TitleIcon.__docgenInfo = {
        description: '',
        methods: [],
        displayName: 'TitleIcon',
        props: { title: { required: !1, tsType: { name: 'string' }, description: '' } },
      };
    },
  },
]);

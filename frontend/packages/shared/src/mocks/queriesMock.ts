import { ServicesContextProps } from 'app-shared/contexts/ServicesContext';
import inputComponentSchema from '../../../ux-editor/src/testing/schemas/json/component/Input.schema.v1.json';
import commonDefsComponentSchema from '../../../ux-editor/src/testing/schemas/json/component/Input.schema.v1.json';
export const queriesMock: ServicesContextProps = {
  addAppAttachmentMetadata: jest.fn().mockImplementation(() => Promise.resolve({})),
  addLanguageCode: jest.fn().mockImplementation(() => Promise.resolve({})),
  addLayoutSet: jest.fn().mockImplementation(() => Promise.resolve({})),
  addRepo: jest.fn().mockImplementation(() => Promise.resolve({})),
  addXsdFromRepo: jest.fn().mockImplementation(() => Promise.resolve({})),
  commitAndPushChanges: jest.fn().mockImplementation(() => Promise.resolve({})),
  configureLayoutSet: jest.fn().mockImplementation(() => Promise.resolve({})),
  copyApp: jest.fn().mockImplementation(() => Promise.resolve({})),
  createDatamodel: jest.fn().mockImplementation(() => Promise.resolve({})),
  createDeployment: jest.fn().mockImplementation(() => Promise.resolve({})),
  createRelease: jest.fn().mockImplementation(() => Promise.resolve({})),
  createRepoCommit: jest.fn().mockImplementation(() => Promise.resolve({})),
  createResource: jest.fn().mockImplementation(() => Promise.resolve({})),
  deleteAppAttachmentMetadata: jest.fn().mockImplementation(() => Promise.resolve({})),
  deleteDatamodel: jest.fn().mockImplementation(() => Promise.resolve({})),
  deleteFormLayout: jest.fn().mockImplementation(() => Promise.resolve({})),
  deleteLanguageCode: jest.fn().mockImplementation(() => Promise.resolve({})),
  generateModels: jest.fn().mockImplementation(() => Promise.resolve({})),
  getAppReleases: jest.fn().mockImplementation(() => Promise.resolve({})),
  getBranchStatus: jest.fn().mockImplementation(() => Promise.resolve({})),
  getComponentSchema: jest.fn().mockImplementation(() => Promise.resolve(inputComponentSchema)),
  getComponentsCommonDefsSchema: jest
    .fn()
    .mockImplementation(() => Promise.resolve(commonDefsComponentSchema)),
  getDatamodel: jest.fn().mockImplementation(() => Promise.resolve({})),
  getDatamodelMetadata: jest.fn().mockImplementation(() => Promise.resolve({})),
  getDatamodelsJson: jest.fn().mockImplementation(() => Promise.resolve({})),
  getDatamodelsXsd: jest.fn().mockImplementation(() => Promise.resolve({})),
  getDeployPermissions: jest.fn().mockImplementation(() => Promise.resolve({})),
  getDeployments: jest.fn().mockImplementation(() =>
    Promise.resolve({
      results: [],
    }),
  ),
  getEnvironments: jest.fn().mockImplementation(() => Promise.resolve({})),
  getExpressionSchema: jest.fn().mockImplementation(() => Promise.resolve({})),
  getFormLayoutSettings: jest.fn().mockImplementation(() => Promise.resolve({})),
  getFormLayouts: jest.fn().mockImplementation(() => Promise.resolve({})),
  getFrontEndSettings: jest.fn().mockImplementation(() => Promise.resolve({})),
  getInstanceIdForPreview: jest.fn().mockImplementation(() => Promise.resolve({})),
  getLayoutSchema: jest.fn().mockImplementation(() => Promise.resolve({})),
  getLayoutSets: jest.fn().mockImplementation(() => Promise.resolve({})),
  getNewsList: jest.fn().mockImplementation(() => Promise.resolve({})),
  getNumberFormatSchema: jest.fn().mockImplementation(() => Promise.resolve({})),
  getOptionListIds: jest.fn().mockImplementation(() => Promise.resolve({})),
  getOrgList: jest.fn().mockImplementation(() => Promise.resolve({})),
  getOrganizations: jest.fn().mockImplementation(() => Promise.resolve({})),
  getPolicy: jest.fn().mockImplementation(() => Promise.resolve({})),
  getPolicyActions: jest.fn().mockImplementation(() => Promise.resolve({})),
  getPolicySubjects: jest.fn().mockImplementation(() => Promise.resolve({})),
  getRepoMetadata: jest.fn().mockImplementation(() => Promise.resolve(null)),
  getRepoPull: jest.fn().mockImplementation(() => Promise.resolve({})),
  getRepoStatus: jest.fn().mockImplementation(() => Promise.resolve({})),
  getResource: jest.fn().mockImplementation(() => Promise.resolve({})),
  getResourceList: jest.fn().mockImplementation(() => Promise.resolve({})),
  getResourcePublishStatus: jest.fn().mockImplementation(() => Promise.resolve({})),
  getRuleConfig: jest.fn().mockImplementation(() => Promise.resolve({})),
  getRuleModel: jest.fn().mockImplementation(() => Promise.resolve({})),
  getStarredRepos: jest.fn().mockImplementation(() => Promise.resolve({})),
  getTextLanguages: jest.fn().mockImplementation(() => Promise.resolve({})),
  getTextResources: jest.fn().mockImplementation(() => Promise.resolve([])),
  getUser: jest.fn().mockImplementation(() => Promise.resolve({})),
  getValidatePolicy: jest.fn().mockImplementation(() => Promise.resolve({})),
  getValidateResource: jest.fn().mockImplementation(() => Promise.resolve({})),
  getWidgetSettings: jest.fn().mockImplementation(() => Promise.resolve({})),
  logout: jest.fn().mockImplementation(() => Promise.resolve({})),
  pushRepoChanges: jest.fn().mockImplementation(() => Promise.resolve({})),
  resetRepoChanges: jest.fn().mockImplementation(() => Promise.resolve({})),
  saveDatamodel: jest.fn().mockImplementation(() => Promise.resolve({})),
  saveFormLayout: jest.fn().mockImplementation(() => Promise.resolve({})),
  saveFormLayoutSettings: jest.fn().mockImplementation(() => Promise.resolve({})),
  saveRuleConfig: jest.fn().mockImplementation(() => Promise.resolve({})),
  searchRepos: jest.fn().mockImplementation(() => Promise.resolve({})),
  setStarredRepo: jest.fn().mockImplementation(() => Promise.resolve({})),
  unsetStarredRepo: jest.fn().mockImplementation(() => Promise.resolve({})),
  updateAppAttachmentMetadata: jest.fn().mockImplementation(() => Promise.resolve({})),
  updateFormLayoutName: jest.fn().mockImplementation(() => Promise.resolve({})),
  updatePolicy: jest.fn().mockImplementation(() => Promise.resolve({})),
  updateResource: jest.fn().mockImplementation(() => Promise.resolve({})),
  updateTextId: jest.fn().mockImplementation(() => Promise.resolve({})),
  updateTranslationByLangCode: jest.fn().mockImplementation(() => Promise.resolve({})),
  upsertTextResources: jest.fn().mockImplementation(() => Promise.resolve({})),
  getBpmnFile: jest.fn().mockImplementation(() => Promise.resolve({})),
  updateBpmnXml: jest.fn().mockImplementation(() => Promise.resolve({})),
  getAppPolicy: jest.fn().mockImplementation(() => Promise.resolve({})),
  updateAppPolicy: jest.fn().mockImplementation(() => Promise.resolve({})),
  getAppConfig: jest.fn().mockImplementation(() => Promise.resolve({})),
  getAppMetadata: jest.fn().mockImplementation(() => Promise.resolve({})),
  updateAppMetadata: jest.fn().mockImplementation(() => Promise.resolve({})),
  updateAppConfig: jest.fn().mockImplementation(() => Promise.resolve({})),
  getRepoInitialCommit: jest.fn().mockImplementation(() => Promise.resolve({})),
  publishResource: jest.fn().mockImplementation(() => Promise.resolve({})),
  getAltinn2LinkServices: jest.fn().mockImplementation(() => Promise.resolve({})),
  importResourceFromAltinn2: jest.fn().mockImplementation(() => Promise.resolve({})),
  getAppLibVersion: jest.fn().mockImplementation(() => Promise.resolve({})),
};

import { ServicesContextProps } from 'app-shared/contexts/ServicesContext';
import inputComponentSchema from '../../../ux-editor/src/testing/schemas/json/component/Input.schema.v1.json';
import commonDefsComponentSchema from '../../../ux-editor/src/testing/schemas/json/component/Input.schema.v1.json';
export const queriesMock: ServicesContextProps = {
  addAppAttachmentMetadata: jest.fn(() => Promise.resolve({} as any)),
  addLanguageCode: jest.fn(() => Promise.resolve({} as any)),
  addLayoutSet: jest.fn(() => Promise.resolve({} as any)),
  addRepo: jest.fn(() => Promise.resolve({} as any)),
  addXsdFromRepo: jest.fn(() => Promise.resolve({} as any)),
  commitAndPushChanges: jest.fn(() => Promise.resolve({} as any)),
  configureLayoutSet: jest.fn(() => Promise.resolve({} as any)),
  copyApp: jest.fn(() => Promise.resolve({} as any)),
  createDatamodel: jest.fn(() => Promise.resolve({} as any)),
  createDeployment: jest.fn(() => Promise.resolve({} as any)),
  createRelease: jest.fn(() => Promise.resolve({} as any)),
  createRepoCommit: jest.fn(() => Promise.resolve({} as any)),
  createResource: jest.fn(() => Promise.resolve({} as any)),
  deleteAppAttachmentMetadata: jest.fn(() => Promise.resolve({} as any)),
  deleteDatamodel: jest.fn(() => Promise.resolve({} as any)),
  deleteFormLayout: jest.fn(() => Promise.resolve({} as any)),
  deleteLanguageCode: jest.fn(() => Promise.resolve({} as any)),
  generateModels: jest.fn(() => Promise.resolve({} as any)),
  getAppReleases: jest.fn(() => Promise.resolve({} as any)),
  getBranchStatus: jest.fn(() => Promise.resolve({} as any)),
  getComponentSchema: jest.fn().mockResolvedValue(inputComponentSchema),
  getComponentsCommonDefsSchema: jest.fn().mockResolvedValue(commonDefsComponentSchema),
  getDatamodel: jest.fn(() => Promise.resolve({} as any)),
  getDatamodelMetadata: jest.fn(() => Promise.resolve({} as any)),
  getDatamodelsJson: jest.fn(() => Promise.resolve({} as any)),
  getDatamodelsXsd: jest.fn(() => Promise.resolve({} as any)),
  getDeployPermissions: jest.fn(() => Promise.resolve({} as any)),
  getDeployments: jest.fn(() => Promise.resolve({} as any)),
  getEnvironments: jest.fn(() => Promise.resolve({} as any)),
  getExpressionSchema: jest.fn(() => Promise.resolve({} as any)),
  getFormLayoutSettings: jest.fn(() => Promise.resolve({} as any)),
  getFormLayouts: jest.fn(() => Promise.resolve({} as any)),
  getFrontEndSettings: jest.fn(() => Promise.resolve({} as any)),
  getInstanceIdForPreview: jest.fn(() => Promise.resolve({} as any)),
  getLayoutSchema: jest.fn(() => Promise.resolve({} as any)),
  getLayoutSets: jest.fn(() => Promise.resolve({} as any)),
  getNewsList: jest.fn(() => Promise.resolve({} as any)),
  getNumberFormatSchema: jest.fn(() => Promise.resolve({} as any)),
  getOptionListIds: jest.fn(() => Promise.resolve({} as any)),
  getOrgList: jest.fn(() => Promise.resolve({} as any)),
  getOrganizations: jest.fn(() => Promise.resolve({} as any)),
  getPolicy: jest.fn(() => Promise.resolve({} as any)),
  getPolicyActions: jest.fn(() => Promise.resolve({} as any)),
  getPolicySubjects: jest.fn(() => Promise.resolve({} as any)),
  getRepoMetadata: jest.fn(() => Promise.resolve({} as any)),
  getRepoPull: jest.fn(() => Promise.resolve({} as any)),
  getRepoStatus: jest.fn(() => Promise.resolve({} as any)),
  getResource: jest.fn(() => Promise.resolve({} as any)),
  getResourceList: jest.fn(() => Promise.resolve({} as any)),
  getResourcePublishStatus: jest.fn(() => Promise.resolve({} as any)),
  getRuleConfig: jest.fn(() => Promise.resolve({} as any)),
  getRuleModel: jest.fn(() => Promise.resolve({} as any)),
  getStarredRepos: jest.fn(() => Promise.resolve({} as any)),
  getTextLanguages: jest.fn(() => Promise.resolve({} as any)),
  getTextResources: jest.fn(() => Promise.resolve({} as any)),
  getUser: jest.fn(() => Promise.resolve({} as any)),
  getValidatePolicy: jest.fn(() => Promise.resolve({} as any)),
  getValidateResource: jest.fn(() => Promise.resolve({} as any)),
  getWidgetSettings: jest.fn(() => Promise.resolve({} as any)),
  logout: jest.fn(() => Promise.resolve({} as any)),
  pushRepoChanges: jest.fn(() => Promise.resolve({} as any)),
  resetRepoChanges: jest.fn(() => Promise.resolve({} as any)),
  saveDatamodel: jest.fn(() => Promise.resolve({} as any)),
  saveFormLayout: jest.fn(() => Promise.resolve({} as any)),
  saveFormLayoutSettings: jest.fn(() => Promise.resolve({} as any)),
  saveRuleConfig: jest.fn(() => Promise.resolve({} as any)),
  searchRepos: jest.fn(() => Promise.resolve({} as any)),
  setStarredRepo: jest.fn(() => Promise.resolve({} as any)),
  unsetStarredRepo: jest.fn(() => Promise.resolve({} as any)),
  updateAppAttachmentMetadata: jest.fn(() => Promise.resolve({} as any)),
  updateFormLayoutName: jest.fn(() => Promise.resolve({} as any)),
  updatePolicy: jest.fn(() => Promise.resolve({} as any)),
  updateResource: jest.fn(() => Promise.resolve({} as any)),
  updateTextId: jest.fn(() => Promise.resolve({} as any)),
  updateTranslationByLangCode: jest.fn(() => Promise.resolve({} as any)),
  upsertTextResources: jest.fn(() => Promise.resolve({} as any)),
  getBpmnFile: jest.fn(() => Promise.resolve({} as any)),
  updateBpmnXml: jest.fn(() => Promise.resolve({} as any)),
  getAppPolicy: jest.fn(() => Promise.resolve({} as any)),
  updateAppPolicy: jest.fn(() => Promise.resolve({} as any)),
  getAppConfig: jest.fn(() => Promise.resolve({} as any)),
  getAppMetadata: jest.fn(() => Promise.resolve({} as any)),
  updateAppMetadata: jest.fn(() => Promise.resolve({} as any)),
  updateAppConfig: jest.fn(() => Promise.resolve({} as any)),
  getRepoInitialCommit: jest.fn(() => Promise.resolve({} as any)),
  publishResource: jest.fn(() => Promise.resolve({} as any)),
  getAltinn2LinkServices: jest.fn(() => Promise.resolve({} as any)),
  importResourceFromAltinn2: jest.fn(() => Promise.resolve({} as any)),
};

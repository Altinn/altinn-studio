{
  "$id": "https://altinncdn.no/schemas/json/component/Checkboxes.schema.v1.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "properties": {
    "id": {
      "title": "ID",
      "description": "The component ID. Must be unique within all layouts/pages in a layout-set. Cannot end with <dash><number>.",
      "type": "string",
      "pattern": "^[0-9a-zA-Z][0-9a-zA-Z-]*(-?[a-zA-Z]+|[a-zA-Z][0-9]+|-[0-9]{6,})$"
    },
    "hidden": {
      "title": "Hidden",
      "description": "Boolean value or expression indicating if the component should be hidden. Defaults to false.",
      "default": false,
      "$ref": "expression.schema.v1.json#/definitions/boolean"
    },
    "grid": {
      "properties": {
        "xs": { "$ref": "#/definitions/IGridSize" },
        "sm": { "$ref": "#/definitions/IGridSize" },
        "md": { "$ref": "#/definitions/IGridSize" },
        "lg": { "$ref": "#/definitions/IGridSize" },
        "xl": { "$ref": "#/definitions/IGridSize" },
        "labelGrid": { "$ref": "#/definitions/IGridStyling" },
        "innerGrid": { "$ref": "#/definitions/IGridStyling" }
      }
    },
    "pageBreak": {
      "title": "Page break",
      "description": "Optionally insert page-break before/after component when rendered in PDF",
      "type": "object",
      "properties": {
        "breakBefore": {
          "title": "Page break before",
          "description": "PDF only: Value or expression indicating whether a page break should be added before the component. Can be either: 'auto' (default), 'always', or 'avoid'.",
          "examples": ["auto", "always", "avoid"],
          "default": "auto",
          "$ref": "expression.schema.v1.json#/definitions/string"
        },
        "breakAfter": {
          "title": "Page break after",
          "description": "PDF only: Value or expression indicating whether a page break should be added after the component. Can be either: 'auto' (default), 'always', or 'avoid'.",
          "examples": ["auto", "always", "avoid"],
          "default": "auto",
          "$ref": "expression.schema.v1.json#/definitions/string"
        }
      },
      "additionalProperties": false
    },
    "readOnly": {
      "title": "Read only/disabled?",
      "description": "Boolean value or expression indicating if the component should be read only/disabled. Defaults to false.",
      "default": false,
      "$ref": "expression.schema.v1.json#/definitions/boolean"
    },
    "required": {
      "title": "Required?",
      "description": "Boolean value or expression indicating if the component should be required. Defaults to false.",
      "default": false,
      "$ref": "expression.schema.v1.json#/definitions/boolean"
    },
    "triggers": {
      "title": "Triggers",
      "description": "List of actions to trigger when the user interacts with the component",
      "type": "array",
      "items": {
        "title": "Triggers",
        "enum": [
          "validation",
          "calculatePageOrder",
          "validatePage",
          "validateCurrentAndPreviousPages",
          "validateAllPages",
          "validateRow"
        ],
        "type": "string"
      }
    },
    "renderAsSummary": {
      "title": "Render as summary",
      "description": "Boolean value or expression indicating if the component should be rendered as a summary. Defaults to false.",
      "default": false,
      "$ref": "expression.schema.v1.json#/definitions/boolean"
    },
    "optionsId": {
      "title": "Dynamic options (fetched from server)",
      "description": "ID of the option list to fetch from the server",
      "type": "string"
    },
    "mapping": {
      "title": "Mapping",
      "description": "A mapping of key-value pairs (usually used for mapping a path in the data model to a query string parameter).",
      "type": "object",
      "properties": {},
      "additionalProperties": { "type": "string" }
    },
    "queryParameters": {
      "title": "Query parameters",
      "description": "A mapping of query string parameters to values. Will be appended to the URL when fetching options.",
      "type": "object",
      "properties": {},
      "additionalProperties": { "type": "string" }
    },
    "options": {
      "title": "Static options",
      "description": "List of static options",
      "type": "array",
      "items": {
        "title": "IOption",
        "examples": [{ "label": "", "value": "" }],
        "type": "object",
        "properties": {
          "label": { "type": "string" },
          "value": { "type": "string" },
          "description": { "type": "string" },
          "helpText": { "type": "string" }
        },
        "required": ["label", "value"],
        "additionalProperties": false
      }
    },
    "secure": {
      "title": "Secure options (when using optionsId)",
      "description": "Whether to call the secure API endpoint when fetching options from the server (allows for user/instance-specific options)",
      "default": false,
      "type": "boolean"
    },
    "source": {
      "title": "Option source",
      "description": "Allows for fetching options from the data model, pointing to a repeating group structure",
      "type": "object",
      "properties": {
        "group": {
          "title": "Group",
          "description": "The repeating group to base options on.",
          "examples": ["model.some.group"],
          "type": "string"
        },
        "label": {
          "title": "Label",
          "description": "Reference to a text resource to be used as the option label.",
          "examples": ["some.text.key"],
          "type": "string"
        },
        "value": {
          "title": "Value",
          "description": "Field in the group that should be used as value",
          "examples": ["model.some.group[{0}].someField"],
          "type": "string"
        },
        "description": {
          "title": "Description",
          "description": "A description of the option displayed in Radio- and Checkbox groups. Can be plain text or a text resource binding.",
          "examples": ["some.text.key", "My Description"],
          "type": "string"
        },
        "helpText": {
          "title": "Help Text",
          "description": "A help text for the option displayed in Radio- and Checkbox groups. Can be plain text or a text resource binding.",
          "examples": ["some.text.key", "My Help Text"],
          "type": "string"
        }
      },
      "required": ["group", "label", "value"],
      "additionalProperties": false
    },
    "preselectedOptionIndex": {
      "title": "Preselected option index",
      "description": "Index of the option to preselect (if no option has been selected yet)",
      "type": "integer"
    },
    "labelSettings": {
      "title": "ILabelSettings",
      "type": "object",
      "properties": {
        "optionalIndicator": {
          "title": "Optional indicator",
          "description": "Show optional indicator on label",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "type": { "const": "Checkboxes" },
    "textResourceBindings": {
      "properties": {
        "title": {
          "title": "Title",
          "description": "Label text/title shown above the component",
          "$ref": "expression.schema.v1.json#/definitions/string"
        },
        "description": {
          "title": "Description",
          "description": "Label description shown above the component, below the title",
          "$ref": "expression.schema.v1.json#/definitions/string"
        },
        "help": {
          "title": "Help text",
          "description": "Help text shown in a tooltip when clicking the help button",
          "$ref": "expression.schema.v1.json#/definitions/string"
        },
        "tableTitle": {
          "title": "Table title",
          "description": "Title used in the table view (overrides the default title)",
          "$ref": "expression.schema.v1.json#/definitions/string"
        },
        "shortName": {
          "title": "Short name (for validation)",
          "description": "Alternative name used for required validation messages (overrides the default title)",
          "$ref": "expression.schema.v1.json#/definitions/string"
        },
        "requiredValidation": {
          "title": "Required validation message",
          "description": "Full validation message shown when the component is required and no value has been entered (overrides both the default and shortName)",
          "$ref": "expression.schema.v1.json#/definitions/string"
        },
        "summaryTitle": {
          "title": "Summary title",
          "description": "Title used in the summary view (overrides the default title)",
          "$ref": "expression.schema.v1.json#/definitions/string"
        },
        "summaryAccessibleTitle": {
          "title": "Accessible summary title",
          "description": "Title used for aria-label on the edit button in the summary view (overrides the default and summary title)",
          "$ref": "expression.schema.v1.json#/definitions/string"
        }
      }
    },
    "dataModelBindings": {
      "title": "IDataModelBindingsOptionsSimple",
      "type": "object",
      "properties": {
        "simpleBinding": { "type": "string" },
        "metadata": {
          "description": "Describes the location where metadata for the option based component should be stored in the datamodel.",
          "type": "string"
        }
      },
      "required": ["simpleBinding"],
      "additionalProperties": false
    },
    "layout": {
      "title": "Layout",
      "description": "Define the layout style for the options",
      "enum": ["column", "row", "table"],
      "type": "string"
    }
  },
  "required": ["id", "type", "dataModelBindings"],
  "title": "Checkboxes component schema"
}

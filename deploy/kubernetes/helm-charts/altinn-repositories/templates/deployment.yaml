apiVersion: apps/v1
kind: Deployment
metadata:
  name: altinn-repositories
spec:
  selector:
    matchLabels:
      run: altinn-repositories
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        run: altinn-repositories
    spec:
      containers:
        - name: {{ .Chart.Name }}
          {{- if not (hasKey $.Values.image.repository $.Values.environment) }}
            {{ fail "the chosen environment has no container registry repository" }}
          {{- end }}
          {{- $repository := index $.Values.image.repository $.Values.environment }}
          image: "{{ $repository }}:{{ $.Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.image.containerPort }}
          {{- if .Values.environmentVariables }}
          env:
            {{- range $variable := .Values.environmentVariables}}
            - name: {{ $variable.name }}
              {{- if $variable.value }}
              value: {{ $variable.value }}
              {{- end }}
              {{- if $variable.valueFrom }}
              valueFrom:
                secretKeyRef:
                  name: {{ $variable.valueFrom.secretKeyRef.name }}
                  key: {{ $variable.valueFrom.secretKeyRef.key }}
              {{- end }}
            {{- end }}
          {{- end }}
          {{- if .Values.volumeMounts }}
          volumeMounts:
          {{- range $mount := .Values.volumeMounts }}
            - name: {{ $mount.name }}
              mountPath: {{ $mount.mountPath }}
          {{- end }}
          {{- end }}
          {{- if .Values.image.lifecyclePostStartCommand }}
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", {{ .Values.image.lifecyclePostStartCommand }}]
          {{- end }}
      {{- if .Values.volumes }}
      volumes:
      {{- range $volume := .Values.volumes }}
        - name: {{ $volume.name }}
          {{- if $volume.persistentVolumeClaim }}
          persistentVolumeClaim:
            claimName: {{ $volume.persistentVolumeClaim.claimName }}
          {{- end }}
      {{- end }}
      {{- end }}
      {{- if .Values.image.imagePullSecret }}
      imagePullSecrets:
        - name: {{ .Values.image.imagePullSecret }}
      {{- end }}


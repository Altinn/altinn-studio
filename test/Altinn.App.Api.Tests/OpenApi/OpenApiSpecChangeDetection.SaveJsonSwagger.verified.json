{
  "openapi": "3.0.4",
  "info": {
    "title": "Altinn App Api",
    "version": ""
  },
  "paths": {
    "/{org}/{app}/instances/{instanceOwnerPartyId}/{instanceGuid}/actions": {
      "post": {
        "tags": [
          "Actions"
        ],
        "summary": "Perform a task action on an instance",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "unique identifier of the organisation responsible for the app",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "application identifier which is unique within an organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceOwnerPartyId",
            "in": "path",
            "description": "unique id of the party that this the owner of the instance",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceGuid",
            "in": "path",
            "description": "unique id to identify the instance",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "The currently used language by the user (or null if not available)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "user action request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserActionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserActionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserActionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserActionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserActionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserActionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/{org}/{app}/api/v1/applicationlanguages": {
      "get": {
        "tags": [
          "ApplicationLanguage"
        ],
        "summary": "Method to retrieve the supported languages from the application.",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationLanguage"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationLanguage"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationLanguage"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationLanguage"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationLanguage"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/{org}/{app}/api/v1/applicationmetadata": {
      "get": {
        "tags": [
          "ApplicationMetadata"
        ],
        "summary": "Get the application metadata https://altinncdn.no/schemas/json/application/application-metadata.schema.v1.json\n            \nIf org and app does not match, this returns a 409 Conflict response",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "Unique identifier of the organisation responsible for the app.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "Application identifier which is unique within an organisation.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "checkOrgApp",
            "in": "query",
            "description": "Boolean get parameter to skip verification of correct org/app",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationMetadata"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationMetadata"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationMetadata"
                }
              }
            }
          }
        }
      }
    },
    "/{org}/{app}/api/v1/meta/authorizationpolicy": {
      "get": {
        "tags": [
          "ApplicationMetadata"
        ],
        "summary": "Get the application XACML policy file\n            \nIf org and app does not match, this returns a 409 Conflict response",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "Unique identifier of the organisation responsible for the app.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "Application identifier which is unique within an organisation.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/{org}/{app}/api/v1/meta/process": {
      "get": {
        "tags": [
          "ApplicationMetadata"
        ],
        "summary": "Get the application BPMN process file\n            \nIf org and app does not match, this returns a 409 Conflict response",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "Unique identifier of the organisation responsible for the app.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "Application identifier which is unique within an organisation.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/{org}/{app}/api/v1/applicationsettings": {
      "get": {
        "tags": [
          "ApplicationSettings"
        ],
        "summary": "Returns the application settings",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/{org}/{app}/api/Authentication/keepAlive": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Refreshes the AltinnStudioRuntime JwtToken when not in AltinnStudio mode.",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/{org}/{app}/api/Authentication/invalidatecookie": {
      "put": {
        "tags": [
          "Authentication"
        ],
        "summary": "Invalidates the AltinnStudioRuntime cookie.",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/{org}/{app}/api/authorization/parties/current": {
      "get": {
        "tags": [
          "Authorization"
        ],
        "summary": "Gets current party by reading cookie value and validating.",
        "parameters": [
          {
            "name": "returnPartyObject",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "org",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/{org}/{app}/instances/{instanceOwnerPartyId}/{instanceGuid}/data": {
      "post": {
        "tags": [
          "Data"
        ],
        "summary": "Creates and instantiates a data element of a given element-type. Clients can upload the data element in the request content.",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "unique identifier of the organisation responsible for the app",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "application identifier which is unique within an organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceOwnerPartyId",
            "in": "path",
            "description": "unique id of the party that this the owner of the instance",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceGuid",
            "in": "path",
            "description": "unique id to identify the instance",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "dataType",
            "in": "query",
            "description": "identifies the data element type to create",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataElement"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataElement"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataElement"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataElement"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataElement"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "patch": {
        "tags": [
          "Data"
        ],
        "summary": "Updates an existing form data element with patches to multiple data elements.",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "unique identifier of the organisation responsible for the app",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "application identifier which is unique within an organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceOwnerPartyId",
            "in": "path",
            "description": "unique id of the party that is the owner of the instance",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceGuid",
            "in": "path",
            "description": "unique id to identify the instance",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "The language selected by the user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Container object for the Json.Patch.JsonPatch and list of ignored validators",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataPatchRequestMultiple"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DataPatchRequestMultiple"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DataPatchRequestMultiple"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataPatchResponseMultiple"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataPatchResponseMultiple"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataPatchResponseMultiple"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/{org}/{app}/instances/{instanceOwnerPartyId}/{instanceGuid}/data/type/{dataType}": {
      "post": {
        "tags": [
          "Data"
        ],
        "summary": "Creates and instantiates a data element of a given element-type. Clients can upload the data element in the request content.",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "unique identifier of the organisation responsible for the app",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "application identifier which is unique within an organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceOwnerPartyId",
            "in": "path",
            "description": "unique id of the party that this the owner of the instance",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceGuid",
            "in": "path",
            "description": "unique id to identify the instance",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "dataType",
            "in": "path",
            "description": "identifies the data element type to create",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ignoredValidators",
            "in": "query",
            "description": "comma separated string of validators to ignore",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "The currently active user language",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataPostResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataPostResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataPostResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataPostErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataPostErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataPostErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/{org}/{app}/instances/{instanceOwnerPartyId}/{instanceGuid}/data/{dataGuid}": {
      "get": {
        "tags": [
          "Data"
        ],
        "summary": "Gets a data element from storage and applies business logic if necessary.",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "unique identifier of the organisation responsible for the app",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "application identifier which is unique within an organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceOwnerPartyId",
            "in": "path",
            "description": "unique id of the party that is the owner of the instance",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceGuid",
            "in": "path",
            "description": "unique id to identify the instance",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "dataGuid",
            "in": "path",
            "description": "unique id to identify the data element to get",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "dataType",
            "in": "path",
            "description": "Optional parameter, verified if pressent. Used to have different schemas for different data types in openApi spec",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeRowId",
            "in": "query",
            "description": "Whether to initialize or remove AltinnRowId fields in the model",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "The language selected by the user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Data"
        ],
        "summary": "Updates an existing data element with new content.",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "unique identifier of the organisation responsible for the app",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "application identifier which is unique within an organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceOwnerPartyId",
            "in": "path",
            "description": "unique id of the party that is the owner of the instance",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceGuid",
            "in": "path",
            "description": "unique id to identify the instance",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "dataGuid",
            "in": "path",
            "description": "unique id to identify the data element to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "dataType",
            "in": "path",
            "description": "Optional parameter, verified if pressent. Used to have different schemas for different data types in openApi spec,",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "The language selected by the user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataElement"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataElement"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataElement"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataElement"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataElement"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CalculationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalculationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalculationResult"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Data"
        ],
        "summary": "Updates an existing form data element with a patch of changes.",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "unique identifier of the organisation responsible for the app",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "application identifier which is unique within an organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceOwnerPartyId",
            "in": "path",
            "description": "unique id of the party that is the owner of the instance",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceGuid",
            "in": "path",
            "description": "unique id to identify the instance",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "dataGuid",
            "in": "path",
            "description": "unique id to identify the data element to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "The language selected by the user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Container object for the Json.Patch.JsonPatch and list of ignored validators",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataPatchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DataPatchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DataPatchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataPatchResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataPatchResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataPatchResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "delete": {
        "tags": [
          "Data"
        ],
        "summary": "Delete a data element.",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "unique identifier of the organisation responsible for the app",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "application identifier which is unique within an organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceOwnerPartyId",
            "in": "path",
            "description": "unique id of the party that is the owner of the instance",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceGuid",
            "in": "path",
            "description": "unique id to identify the instance",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "dataGuid",
            "in": "path",
            "description": "unique id to identify the data element to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "dataType",
            "in": "path",
            "description": "Optional parameter, verified if pressent. Used to have different schemas for different data types in openApi spec,",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ignoredValidators",
            "in": "query",
            "description": "comma separated string of validators to ignore",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "The currently active language",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataPostResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataPostResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataPostResponse"
                }
              }
            }
          }
        }
      }
    },
    "/{org}/{app}/api/datalists/{id}": {
      "get": {
        "tags": [
          "DataLists"
        ],
        "summary": "Api that exposes app related datalists",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The listId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "queryParams",
            "in": "query",
            "description": "Query parameteres supplied",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "The language selected by the user.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "org",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/{org}/{app}/instances/{instanceOwnerPartyId}/{instanceGuid}/datalists/{id}": {
      "get": {
        "tags": [
          "DataLists"
        ],
        "summary": "Exposes datalists related to the app and logged in user",
        "parameters": [
          {
            "name": "instanceOwnerPartyId",
            "in": "path",
            "description": "unique id of the party that is the owner of the instance",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceGuid",
            "in": "path",
            "description": "unique id to identify the instance",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The datalistId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "queryParams",
            "in": "query",
            "description": "Query parameters supplied",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "The language selected by the user.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "org",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/{org}/{app}/instances/{instanceOwnerPartyId}/{instanceGuid}/data/{dataGuid}/tags": {
      "get": {
        "tags": [
          "DataTags"
        ],
        "summary": "Retrieves all tags associated with the given data element.",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "The short name for the application owner.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "The name of the application.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceOwnerPartyId",
            "in": "path",
            "description": "The party id of the owner of the instance.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceGuid",
            "in": "path",
            "description": "The id of the instance.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "dataGuid",
            "in": "path",
            "description": "The id of the data element.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagsList"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DataTags"
        ],
        "summary": "Adds a new tag to a data element.",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "The short name for the application owner.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "The name of the application.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceOwnerPartyId",
            "in": "path",
            "description": "The party id of the owner of the instance.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceGuid",
            "in": "path",
            "description": "The id of the instance.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "dataGuid",
            "in": "path",
            "description": "The id of the data element.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The new tag to be added.",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagsList"
                }
              }
            }
          }
        }
      }
    },
    "/{org}/{app}/instances/{instanceOwnerPartyId}/{instanceGuid}/data/{dataGuid}/tags/{tag}": {
      "delete": {
        "tags": [
          "DataTags"
        ],
        "summary": "Removes a tag from a data element.",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "The short name for the application owner.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "The name of the application.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceOwnerPartyId",
            "in": "path",
            "description": "The party id of the owner of the instance.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceGuid",
            "in": "path",
            "description": "The id of the instance.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "dataGuid",
            "in": "path",
            "description": "The id of the data element.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "tag",
            "in": "path",
            "description": "The name of the tag to be removed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/{org}/{app}/api/v1/eventsreceiver": {
      "post": {
        "tags": [
          "EventsReceiver"
        ],
        "summary": "Create a new inbound event for the app to process.",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "org",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloudEvent"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CloudEvent"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CloudEvent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "425": {
            "description": "Too Early"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/{org}/{app}/instances/{instanceOwnerPartyId}/{instanceGuid}/api/external/{externalApiId}": {
      "get": {
        "tags": [
          "ExternalApi"
        ],
        "summary": "Get the data for a specific implementation of an external api, identified by externalApiId",
        "parameters": [
          {
            "name": "instanceOwnerPartyId",
            "in": "path",
            "description": "The instance owner party id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceGuid",
            "in": "path",
            "description": "The instance guid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "externalApiId",
            "in": "path",
            "description": "The id of the external api",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "queryParams",
            "in": "query",
            "description": "The query parameters to pass to the external api endpoint",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "name": "org",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/{org}/{app}/instances/{instanceOwnerPartyId}/{instanceGuid}/filescanresult": {
      "get": {
        "tags": [
          "FileScan"
        ],
        "summary": "Checks that file scan result for an instance and it's data elements.",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "Unique identifier of the organisation responsible for the app.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "Application identifier which is unique within an organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceOwnerPartyId",
            "in": "path",
            "description": "Unique id of the party that is the owner of the instance.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceGuid",
            "in": "path",
            "description": "Unique id to identify the instance",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceFileScanResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceFileScanResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceFileScanResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/{org}/{app}": {
      "get": {
        "tags": [
          "Home"
        ],
        "summary": "Returns the index view with references to the React app.",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "The application owner short name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "The name of the app",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dontChooseReportee",
            "in": "query",
            "description": "Parameter to indicate disabling of reportee selection in Altinn Portal.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/{org}/{app}/set-query-params": {
      "get": {
        "tags": [
          "Home"
        ],
        "summary": "Sets query parameters in frontend session storage for later use in prefill of stateless apps",
        "description": "Only parameters specified in [dataTypeId].prefill.json will be accepted.\nReturns an HTML document with a small javascript that will set session variables in frontend and redirect to the app.",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/{org}/{app}/instances/{instanceOwnerPartyId}/{instanceGuid}": {
      "get": {
        "tags": [
          "Instances"
        ],
        "summary": "Gets an instance object from storage.",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "unique identifier of the organisation responsible for the app",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "application identifier which is unique within an organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceOwnerPartyId",
            "in": "path",
            "description": "unique id of the party that is the owner of the instance",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceGuid",
            "in": "path",
            "description": "unique id to identify the instance",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Instance"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Instances"
        ],
        "summary": "Deletes an instance.",
        "parameters": [
          {
            "name": "instanceOwnerPartyId",
            "in": "path",
            "description": "The party id of the instance owner.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceGuid",
            "in": "path",
            "description": "The id of the instance to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "hard",
            "in": "query",
            "description": "A value indicating whether the instance should be unrecoverable.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "org",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Instance"
                }
              }
            }
          }
        }
      }
    },
    "/{org}/{app}/instances": {
      "post": {
        "tags": [
          "Instances"
        ],
        "summary": "Creates a new instance of an application in platform storage. Clients can send an instance as json or send a\nmultipart form-data with the instance in the first part named \"instance\" and the prefill data in the next parts, with\nnames that correspond to the element types defined in the application metadata.\nThe data elements are stored. Currently calculate and validate is not implemented.",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "unique identifier of the organisation responsible for the app",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "application identifier which is unique within an organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceOwnerPartyId",
            "in": "query",
            "description": "unique id of the party that is the owner of the instance",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "The currently active user language",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Instance"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/{org}/{app}/instances/create": {
      "post": {
        "tags": [
          "Instances"
        ],
        "summary": "Simplified Instanciation with support for fieldprefill",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "unique identifier of the organisation responsible for the app",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "application identifier which is unique within an organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "instansiation information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstansiationInstance"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InstansiationInstance"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InstansiationInstance"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Instance"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/{org}/{app}/instances/{instanceOwnerPartyId}/{instanceGuid}/complete": {
      "post": {
        "tags": [
          "Instances"
        ],
        "summary": "Add complete confirmation.",
        "description": "Add to an instance that a given stakeholder considers the instance as no longer needed by them. The stakeholder has\ncollected all the data and information they needed from the instance and expect no additional data to be added to it.\nThe body of the request isn't used for anything despite this being a POST operation.",
        "parameters": [
          {
            "name": "instanceOwnerPartyId",
            "in": "path",
            "description": "The party id of the instance owner.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceGuid",
            "in": "path",
            "description": "The id of the instance to confirm as complete.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "org",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Instance"
                }
              }
            }
          }
        }
      }
    },
    "/{org}/{app}/instances/{instanceOwnerPartyId}/{instanceGuid}/substatus": {
      "put": {
        "tags": [
          "Instances"
        ],
        "summary": "Allows an app owner to update the substatus of an instance.",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "unique identifier of the organisation responsible for the app",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "application identifier which is unique within an organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceOwnerPartyId",
            "in": "path",
            "description": "The party id of the instance owner.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceGuid",
            "in": "path",
            "description": "The id of the instance to update.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The new substatus of the instance.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Substatus"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Substatus"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Substatus"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Substatus"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Substatus"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/Substatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Instance"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/{org}/{app}/instances/{instanceOwnerPartyId}/active": {
      "get": {
        "tags": [
          "Instances"
        ],
        "summary": "Retrieves all active instances that fulfull the org, app, and instanceOwnerParty Id combination.",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "unique identifier of the organisation responsible for the app",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "application identifier which is unique within an organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceOwnerPartyId",
            "in": "path",
            "description": "The party id of the instance owner.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SimpleInstance"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{org}/{app}/api/v1/lookup/organisation/{orgNr}": {
      "get": {
        "tags": [
          "LookupOrganisation"
        ],
        "summary": "Allows an organisation lookup by orgNr in ER",
        "parameters": [
          {
            "name": "orgNr",
            "in": "path",
            "description": "Route param that contains the orgNr to look up in ER.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "org",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LookupOrganisationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/{org}/{app}/api/v1/lookup/person": {
      "post": {
        "tags": [
          "LookupPerson"
        ],
        "summary": "Lookup a person in Folkeregisteret (DSF)",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Payload that contains params for executing a person lookup.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LookupPersonRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LookupPersonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/{org}/{app}/api/options/{optionsId}": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Api that exposes app related options",
        "parameters": [
          {
            "name": "optionsId",
            "in": "path",
            "description": "The optionsId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "queryParams",
            "in": "query",
            "description": "Query parameters supplied",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "The language selected by the user.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "org",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/{org}/{app}/instances/{instanceOwnerPartyId}/{instanceGuid}/options/{optionsId}": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Exposes options related to the app and logged in user",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "unique identifier of the organisation responsible for the app",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "application identifier which is unique within an organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceOwnerPartyId",
            "in": "path",
            "description": "unique id of the party that is the owner of the instance",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceGuid",
            "in": "path",
            "description": "unique id to identify the instance",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "optionsId",
            "in": "path",
            "description": "The optionsId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "The language selected by the user.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "queryParams",
            "in": "query",
            "description": "Query parameteres supplied",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/{org}/{app}/instances/{instanceOwnerPartyId}/{instanceGuid}/pages/order": {
      "post": {
        "tags": [
          "Pages"
        ],
        "summary": "Get the page order based on the current state of the instance",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceOwnerPartyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "layoutSetId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currentPage",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dataTypeId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "text/json": {
              "schema": {}
            },
            "application/*+json": {
              "schema": {}
            },
            "application/xml": {
              "schema": {}
            },
            "text/xml": {
              "schema": {}
            },
            "application/*+xml": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/{org}/{app}/api/v1/parties": {
      "get": {
        "tags": [
          "Parties"
        ],
        "summary": "Gets the list of parties the user can represent",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "Unique identifier of the organisation responsible for the app.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "Application identifier which is unique within an organisation.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "allowedToInstantiateFilter",
            "in": "query",
            "description": "when set to true returns parties that are allowed to instantiate",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/{org}/{app}/api/v1/parties/validateInstantiation": {
      "post": {
        "tags": [
          "Parties"
        ],
        "summary": "Validates party and profile settings before the end user is allowed to instantiate a new app instance",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "Unique identifier of the organisation responsible for the app.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "Application identifier which is unique within an organisation.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "partyId",
            "in": "query",
            "description": "The selected partyId",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": true
      }
    },
    "/{org}/{app}/api/v1/parties/{partyId}": {
      "put": {
        "tags": [
          "Parties"
        ],
        "summary": "Updates the party the user represents",
        "parameters": [
          {
            "name": "partyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "org",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/{org}/{app}/instances/{instanceOwnerPartyId}/{instanceGuid}/payment": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Get updated payment information for the instance. Will contact the payment processor to check the status of the payment. Current task must be a payment task. See payment related documentation.",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "unique identifier of the organisation responsible for the app",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "application identifier which is unique within an organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceOwnerPartyId",
            "in": "path",
            "description": "unique id of the party that this the owner of the instance",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceGuid",
            "in": "path",
            "description": "unique id to identify the instance",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "The currently used language by the user (or null if not available)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInformation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInformation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInformation"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInformation"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInformation"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/{org}/{app}/instances/{instanceOwnerPartyId}/{instanceGuid}/payment/order-details": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Run order details calculations and return the result. Does not require the current task to be a payment task.",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "unique identifier of the organisation responsible for the app",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "application identifier which is unique within an organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceOwnerPartyId",
            "in": "path",
            "description": "unique id of the party that this the owner of the instance",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceGuid",
            "in": "path",
            "description": "unique id to identify the instance",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "The currently used language by the user (or null if not available)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/{org}/{app}/instances/{instanceOwnerPartyId}/{instanceGuid}/data/{dataGuid}/pdf/format": {
      "get": {
        "tags": [
          "Pdf"
        ],
        "summary": "Get the pdf formatting",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceOwnerPartyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "dataGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/{org}/{app}/instances/{instanceOwnerPartyId}/{instanceGuid}/process": {
      "get": {
        "tags": [
          "Process"
        ],
        "summary": "Get the process state of an instance.",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "unique identifier of the organisation responsible for the app",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "application identifier which is unique within an organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceOwnerPartyId",
            "in": "path",
            "description": "unique id of the party that is the owner of the instance",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceGuid",
            "in": "path",
            "description": "unique id to identify the instance",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppProcessState"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppProcessState"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppProcessState"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/{org}/{app}/instances/{instanceOwnerPartyId}/{instanceGuid}/process/start": {
      "post": {
        "tags": [
          "Process"
        ],
        "summary": "Starts the process of an instance.",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "unique identifier of the organisation responsible for the app",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "application identifier which is unique within an organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceOwnerPartyId",
            "in": "path",
            "description": "unique id of the party that is the owner of the instance",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceGuid",
            "in": "path",
            "description": "unique id to identify the instance",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "startEvent",
            "in": "query",
            "description": "a specific start event id to start the process, must be used if there are more than one start events",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppProcessState"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppProcessState"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppProcessState"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/{org}/{app}/instances/{instanceOwnerPartyId}/{instanceGuid}/process/next": {
      "get": {
        "tags": [
          "Process"
        ],
        "summary": "Gets a list of the next process elements that can be reached from the current process element.\nIf process is not started it returns the possible start events.",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "unique identifier of the organisation responsible for the app",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "application identifier which is unique within an organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceOwnerPartyId",
            "in": "path",
            "description": "unique id of the party that is the owner of the instance",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceGuid",
            "in": "path",
            "description": "unique id to identify the instance",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "put": {
        "tags": [
          "Process"
        ],
        "summary": "Change the instance's process state to next process element in accordance with process definition.",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "unique identifier of the organisation responsible for the app",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "application identifier which is unique within an organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceOwnerPartyId",
            "in": "path",
            "description": "unique id of the party that is the owner of the instance",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceGuid",
            "in": "path",
            "description": "unique id to identify the instance",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "elementId",
            "in": "query",
            "description": "obsolete: alias for action",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Signal the language to use for pdf generation, error messages...",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The body of the request containing possible actions to perform before advancing the process",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessNext"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessNext"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessNext"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ProcessNext"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ProcessNext"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/ProcessNext"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppProcessState"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppProcessState"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppProcessState"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/{org}/{app}/instances/{instanceOwnerPartyId}/{instanceGuid}/process/completeProcess": {
      "put": {
        "tags": [
          "Process"
        ],
        "summary": "Attemts to end the process by running next until an end event is reached.\nNotice that process must have been started.",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "unique identifier of the organisation responsible for the app",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "application identifier which is unique within an organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceOwnerPartyId",
            "in": "path",
            "description": "unique id of the party that is the owner of the instance",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceGuid",
            "in": "path",
            "description": "unique id to identify the instance",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "The currently used language by the user (or null if not available)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppProcessState"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppProcessState"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppProcessState"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/{org}/{app}/instances/{instanceOwnerPartyId}/{instanceGuid}/process/history": {
      "get": {
        "tags": [
          "Process"
        ],
        "summary": "Get the process history for an instance.",
        "parameters": [
          {
            "name": "instanceOwnerPartyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "org",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessHistoryList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessHistoryList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessHistoryList"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessHistoryList"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessHistoryList"
                }
              }
            }
          }
        }
      }
    },
    "/{org}/{app}/api/v1/profile/user": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Method that returns the user information about the user that is logged in",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/{org}/{app}/api/v1/redirect": {
      "get": {
        "tags": [
          "Redirect"
        ],
        "summary": "Validates URL used for redirection",
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "description": "Base64 encoded string of the URL to validate",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "org",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/{org}/{app}/api/jsonschema/{id}": {
      "get": {
        "tags": [
          "Resource"
        ],
        "summary": "Get the json schema for the model",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the model to fetch json schema for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "org",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/{org}/{app}/api/layouts": {
      "get": {
        "tags": [
          "Resource"
        ],
        "summary": "Get the form layout\n<param name=\"org\">Unique identifier of the organisation responsible for the app.</param><param name=\"app\">Application identifier which is unique within an organisation.</param><returns>A collection of FormLayout objects in JSON format.</returns>",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/{org}/{app}/api/layouts/{id}": {
      "get": {
        "tags": [
          "Resource"
        ],
        "summary": "Get the form layout",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "Unique identifier of the organisation responsible for the app.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "Application identifier which is unique within an organisation.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The layoutset id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/{org}/{app}/api/layoutsettings": {
      "get": {
        "tags": [
          "Resource"
        ],
        "summary": "Get the layout settings.",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "The application owner short name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "The application name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/{org}/{app}/api/layoutsettings/{id}": {
      "get": {
        "tags": [
          "Resource"
        ],
        "summary": "Get the layout settings.",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "The application owner short name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "The application name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The layoutset id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/{org}/{app}/api/layoutsets": {
      "get": {
        "tags": [
          "Resource"
        ],
        "summary": "Get the layout-sets",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "The application owner short name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "The application name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/{org}/{app}/api/rulehandler/{id}": {
      "get": {
        "tags": [
          "Resource"
        ],
        "summary": "Get the rule settings\n<param name=\"org\">Unique identifier of the organisation responsible for the app.</param><param name=\"app\">Application identifier which is unique within an organisation.</param><param name=\"id\">The layoutset id</param><returns>A collection of FormLayout objects in JSON format.</returns>",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/{org}/{app}/api/ruleconfiguration/{id}": {
      "get": {
        "tags": [
          "Resource"
        ],
        "summary": "Get the ruleconfiguration.",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "The application owner short name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "The application name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The layoutset id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/{org}/{app}/api/v1/footer": {
      "get": {
        "tags": [
          "Resource"
        ],
        "summary": "Get the footer layout",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "The application owner short name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "The application name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/{org}/{app}/api/validationconfig/{dataTypeId}": {
      "get": {
        "tags": [
          "Resource"
        ],
        "summary": "Get validation configuration file.",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "The application owner short name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "The application name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dataTypeId",
            "in": "path",
            "description": "Unique identifier of the model to fetch validations for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/{org}/{app}/v1/data": {
      "get": {
        "tags": [
          "StatelessData"
        ],
        "summary": "Create a new data object of the defined data type",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "unique identfier of the organisation responsible for the app",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "application identifier which is unique within an organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dataType",
            "in": "query",
            "description": "The data type id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "party",
            "in": "header",
            "description": "The party that should be represented with  prefix \"partyId:\", \"person:\" or \"org:\" (eg: \"partyId:123\")",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "prefill",
            "in": "query",
            "description": "Prefilled fields from query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Currently selected language by the user (if available)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataElement"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataElement"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataElement"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataElement"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataElement"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "StatelessData"
        ],
        "summary": "Create a new data object of the defined data type",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "unique identifier of the organisation responsible for the app",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "application identifier which is unique within an organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dataType",
            "in": "query",
            "description": "The data type id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "party",
            "in": "header",
            "description": "The party that should be represented with  prefix \"partyId:\", \"person:\" or \"org:\" (eg: \"partyId:123\")",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "The language selected by the user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataElement"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataElement"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataElement"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataElement"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataElement"
                }
              }
            }
          }
        }
      }
    },
    "/{org}/{app}/v1/data/anonymous": {
      "get": {
        "tags": [
          "StatelessData"
        ],
        "summary": "Create a new data object of the defined data type",
        "parameters": [
          {
            "name": "dataType",
            "in": "query",
            "description": "The data type id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "The language selected by the user.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "org",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataElement"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataElement"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataElement"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataElement"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataElement"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "StatelessData"
        ],
        "summary": "Create a new data object of the defined data type",
        "parameters": [
          {
            "name": "dataType",
            "in": "query",
            "description": "The data type id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "The language selected by the user.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "org",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataElement"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataElement"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataElement"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataElement"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataElement"
                }
              }
            }
          }
        }
      }
    },
    "/{org}/{app}/v1/pages/order": {
      "post": {
        "tags": [
          "StatelessPages"
        ],
        "summary": "Get the page order based on the current state of the instance",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layoutSetId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currentPage",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dataTypeId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "text/json": {
              "schema": {}
            },
            "application/*+json": {
              "schema": {}
            },
            "application/xml": {
              "schema": {}
            },
            "text/xml": {
              "schema": {}
            },
            "application/*+xml": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/{org}/{app}/api/v1/texts/{language}": {
      "get": {
        "tags": [
          "Texts"
        ],
        "summary": "Method to retrieve text resources",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "Unique identifier of the organisation responsible for the app.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "Application identifier which is unique within an organisation.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "path",
            "description": "The text language to use.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TextResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextResource"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextResource"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TextResource"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TextResource"
                }
              }
            }
          }
        }
      }
    },
    "/{org}/{app}/instances/{instanceOwnerPartyId}/{instanceGuid}/data/{dataGuid}/user-defined-metadata": {
      "get": {
        "tags": [
          "UserDefinedMetadata"
        ],
        "summary": "Retrieves user defined metadata associated with the given data element.",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "The short name for the application owner.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "The name of the application.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceOwnerPartyId",
            "in": "path",
            "description": "The party id of the owner of the instance.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceGuid",
            "in": "path",
            "description": "The id of the instance.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "dataGuid",
            "in": "path",
            "description": "The id of the data element.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDefinedMetadataDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "UserDefinedMetadata"
        ],
        "summary": "Update user defined metadata associated with the given data element.",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "The short name for the application owner.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "The name of the application.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceOwnerPartyId",
            "in": "path",
            "description": "The party id of the owner of the instance.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceGuid",
            "in": "path",
            "description": "The id of the instance.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "dataGuid",
            "in": "path",
            "description": "The id of the data element.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Object with a list of properties.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDefinedMetadataDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDefinedMetadataDto"
                }
              }
            }
          }
        }
      }
    },
    "/{org}/{app}/instances/{instanceOwnerPartyId}/{instanceGuid}/validate": {
      "get": {
        "tags": [
          "Validate"
        ],
        "summary": "Validate an app instance. This will validate all individual data elements, both the binary elements and the elements bound\nto a model, and then finally the state of the instance.",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "Unique identifier of the organisation responsible for the app.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "Application identifier which is unique within an organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceOwnerPartyId",
            "in": "path",
            "description": "Unique id of the party that is the owner of the instance.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceGuid",
            "in": "path",
            "description": "Unique id to identify the instance",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "ignoredValidators",
            "in": "query",
            "description": "Comma separated list of validators to ignore",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "onlyIncrementalValidators",
            "in": "query",
            "description": "Ignore validators that don't run on PATCH requests",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "The currently used language by the user (or null if not available)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationIssueWithSource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationIssueWithSource"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationIssueWithSource"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationIssueWithSource"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationIssueWithSource"
                }
              }
            }
          }
        }
      }
    },
    "/{org}/{app}/instances/{instanceOwnerId}/{instanceId}/data/{dataGuid}/validate": {
      "get": {
        "tags": [
          "Validate"
        ],
        "summary": "Validate an app instance. This will validate a single data element",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "Unique identifier of the organisation responsible for the app.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "Application identifier which is unique within an organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceOwnerId",
            "in": "path",
            "description": "Unique id of the party that is the owner of the instance.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "Unique id to identify the instance",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "dataGuid",
            "in": "path",
            "description": "Unique id identifying specific data element",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "The currently used language by the user (or null if not available)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": true
      }
    }
  },
  "components": {
    "schemas": {
      "ActionError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ActionType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "Address": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppProcessElementInfo": {
        "type": "object",
        "properties": {
          "flow": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "started": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "elementId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "altinnTaskType": {
            "type": "string",
            "nullable": true
          },
          "ended": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "validated": {
            "$ref": "#/components/schemas/ValidationStatus"
          },
          "flowType": {
            "type": "string",
            "nullable": true
          },
          "actions": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            },
            "nullable": true
          },
          "userActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserAction"
            },
            "nullable": true
          },
          "read": {
            "type": "boolean"
          },
          "write": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AppProcessState": {
        "type": "object",
        "properties": {
          "started": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "startEvent": {
            "type": "string",
            "nullable": true
          },
          "currentTask": {
            "$ref": "#/components/schemas/AppProcessElementInfo"
          },
          "ended": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endEvent": {
            "type": "string",
            "nullable": true
          },
          "processTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppProcessTaskTypeInfo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppProcessTaskTypeInfo": {
        "type": "object",
        "properties": {
          "altinnTaskType": {
            "type": "string",
            "nullable": true
          },
          "elementId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationLanguage": {
        "type": "object",
        "properties": {
          "language": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationLogic": {
        "type": "object",
        "properties": {
          "autoCreate": {
            "type": "boolean",
            "nullable": true
          },
          "classRef": {
            "type": "string",
            "nullable": true
          },
          "schemaRef": {
            "type": "string",
            "nullable": true
          },
          "allowAnonymousOnStateless": {
            "type": "boolean"
          },
          "autoDeleteOnProcessEnd": {
            "type": "boolean"
          },
          "disallowUserCreate": {
            "type": "boolean"
          },
          "disallowUserDelete": {
            "type": "boolean"
          },
          "allowInSubform": {
            "type": "boolean",
            "deprecated": true
          },
          "shadowFields": {
            "$ref": "#/components/schemas/ShadowFields"
          }
        },
        "additionalProperties": false
      },
      "ApplicationMetadata": {
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "lastChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastChangedBy": {
            "type": "string",
            "nullable": true
          },
          "versionId": {
            "type": "string",
            "nullable": true
          },
          "org": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "validFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "validTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "processId": {
            "type": "string",
            "nullable": true
          },
          "dataTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataType"
            },
            "nullable": true
          },
          "partyTypesAllowed": {
            "$ref": "#/components/schemas/PartyTypesAllowed"
          },
          "autoDeleteOnProcessEnd": {
            "type": "boolean"
          },
          "presentationFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataField"
            },
            "nullable": true
          },
          "dataFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataField"
            },
            "nullable": true
          },
          "eFormidling": {
            "$ref": "#/components/schemas/EFormidlingContract"
          },
          "onEntry": {
            "$ref": "#/components/schemas/OnEntry"
          },
          "messageBoxConfig": {
            "$ref": "#/components/schemas/MessageBoxConfig"
          },
          "copyInstanceSettings": {
            "$ref": "#/components/schemas/CopyInstanceSettings"
          },
          "storageAccountNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "disallowUserInstantiation": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "features": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            },
            "nullable": true
          },
          "logo": {
            "$ref": "#/components/schemas/Logo"
          },
          "altinnNugetVersion": {
            "type": "string",
            "nullable": true
          },
          "externalApiIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": {}
      },
      "CalculationResult": {
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "lastChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastChangedBy": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "instanceGuid": {
            "type": "string",
            "nullable": true
          },
          "dataType": {
            "type": "string",
            "nullable": true
          },
          "filename": {
            "type": "string",
            "nullable": true
          },
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "blobStoragePath": {
            "type": "string",
            "nullable": true
          },
          "selfLinks": {
            "$ref": "#/components/schemas/ResourceLinks"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "contentHash": {
            "type": "string",
            "nullable": true
          },
          "locked": {
            "type": "boolean"
          },
          "refs": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "isRead": {
            "type": "boolean"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "userDefinedMetadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValueEntry"
            },
            "nullable": true
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValueEntry"
            },
            "nullable": true
          },
          "deleteStatus": {
            "$ref": "#/components/schemas/DeleteStatus"
          },
          "fileScanResult": {
            "$ref": "#/components/schemas/FileScanResult"
          },
          "references": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Reference"
            },
            "nullable": true
          },
          "changedFields": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CardDetails": {
        "type": "object",
        "properties": {
          "maskedPan": {
            "type": "string",
            "nullable": true
          },
          "expiryDate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClientAction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CloudEvent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "specversion": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "alternativesubject": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "nullable": true
          },
          "dataschema": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "contenttype": {
            "$ref": "#/components/schemas/ContentType"
          }
        },
        "additionalProperties": false
      },
      "CompleteConfirmation": {
        "type": "object",
        "properties": {
          "stakeholderId": {
            "type": "string",
            "nullable": true
          },
          "confirmedOn": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ContentType": {
        "type": "object",
        "properties": {
          "boundary": {
            "type": "string",
            "nullable": true
          },
          "charSet": {
            "type": "string",
            "nullable": true
          },
          "mediaType": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CopyInstanceSettings": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "excludedDataTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "excludedDataFields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataElement": {
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "lastChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastChangedBy": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "instanceGuid": {
            "type": "string",
            "nullable": true
          },
          "dataType": {
            "type": "string",
            "nullable": true
          },
          "filename": {
            "type": "string",
            "nullable": true
          },
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "blobStoragePath": {
            "type": "string",
            "nullable": true
          },
          "selfLinks": {
            "$ref": "#/components/schemas/ResourceLinks"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "contentHash": {
            "type": "string",
            "nullable": true
          },
          "locked": {
            "type": "boolean"
          },
          "refs": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "isRead": {
            "type": "boolean"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "userDefinedMetadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValueEntry"
            },
            "nullable": true
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValueEntry"
            },
            "nullable": true
          },
          "deleteStatus": {
            "$ref": "#/components/schemas/DeleteStatus"
          },
          "fileScanResult": {
            "$ref": "#/components/schemas/FileScanResult"
          },
          "references": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Reference"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataElementFileScanResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the data element id",
            "nullable": true
          },
          "fileScanResult": {
            "$ref": "#/components/schemas/FileScanResult"
          }
        },
        "additionalProperties": false,
        "description": "File scan result for an individual data element."
      },
      "DataField": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "dataTypeId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataModelPairResponse": {
        "required": [
          "data",
          "dataElementId"
        ],
        "type": "object",
        "properties": {
          "dataElementId": {
            "type": "string",
            "description": "The guid of the DataElement",
            "format": "uuid"
          },
          "data": {
            "description": "The form data of the data element"
          }
        },
        "additionalProperties": false,
        "description": "Pair of Guid and data object."
      },
      "DataPatchRequest": {
        "required": [
          "patch"
        ],
        "type": "object",
        "properties": {
          "patch": {
            "$ref": "#/components/schemas/JsonPatch"
          },
          "ignoredValidators": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of validators to ignore during the patch operation.\nIssues from these validators will not be run during the save operation, but the validator will run on process/next",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the request to patch data on the Altinn.App.Api.Controllers.DataController."
      },
      "DataPatchRequestMultiple": {
        "required": [
          "patches"
        ],
        "type": "object",
        "properties": {
          "patches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PatchListItem"
            },
            "description": "The Patch operations to perform."
          },
          "ignoredValidators": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of validators to ignore during the patch operation.\nIssues from these validators will not be run during the save operation, but the validator will run on process/next",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the request to patch data on the Altinn.App.Api.Controllers.DataController in the\nversion that supports multiple data models in the same request."
      },
      "DataPatchResponse": {
        "required": [
          "instance",
          "newDataModel",
          "validationIssues"
        ],
        "type": "object",
        "properties": {
          "validationIssues": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ValidationIssueWithSource"
              }
            },
            "description": "The validation issues that were found during the patch operation.",
            "nullable": true
          },
          "newDataModel": {
            "description": "The current data model after the patch operation.",
            "nullable": true
          },
          "instance": {
            "$ref": "#/components/schemas/Instance"
          }
        },
        "additionalProperties": false,
        "description": "Represents the response from a data patch operation on the Altinn.App.Api.Controllers.DataController."
      },
      "DataPatchResponseMultiple": {
        "required": [
          "instance",
          "newDataModels",
          "validationIssues"
        ],
        "type": "object",
        "properties": {
          "validationIssues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationSourcePair"
            },
            "description": "The validation issues that were found during the patch operation."
          },
          "newDataModels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataModelPairResponse"
            },
            "description": "The current data in all data models updated by the patch operation."
          },
          "instance": {
            "$ref": "#/components/schemas/Instance"
          }
        },
        "additionalProperties": false,
        "description": "Represents the response from a data patch operation on the Altinn.App.Api.Controllers.DataController."
      },
      "DataPostErrorResponse": {
        "required": [
          "uploadValidationIssues"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "uploadValidationIssues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationIssueWithSource"
            },
            "description": "List of the validators that reported to have relevant changes after a new data element was added",
            "readOnly": true
          }
        },
        "additionalProperties": {},
        "description": "Extension of ProblemDetails to include Validation issues from the file upload."
      },
      "DataPostResponse": {
        "required": [
          "instance",
          "newDataElementId",
          "newDataModels",
          "validationIssues"
        ],
        "type": "object",
        "properties": {
          "newDataElementId": {
            "type": "string",
            "description": "The Id of the created data element",
            "format": "uuid"
          },
          "instance": {
            "$ref": "#/components/schemas/Instance"
          },
          "validationIssues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationSourcePair"
            },
            "description": "List of validation issues that reported to have relevant changes after a new data element was added"
          },
          "newDataModels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataModelPairResponse"
            },
            "description": "List of updated DataModels caused by dataProcessing"
          }
        },
        "additionalProperties": false,
        "description": "Response object for POST to /org/app/instances/{instanceOwnerPartyId:int}/{instanceGuid:guid}/data/{dataType}"
      },
      "DataType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "allowedContentTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "allowedContributers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "appLogic": {
            "$ref": "#/components/schemas/ApplicationLogic"
          },
          "taskId": {
            "type": "string",
            "nullable": true
          },
          "maxSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxCount": {
            "type": "integer",
            "format": "int32",
            "default": 1
          },
          "minCount": {
            "type": "integer",
            "format": "int32",
            "default": 1
          },
          "grouping": {
            "type": "string",
            "nullable": true
          },
          "enablePdfCreation": {
            "type": "boolean"
          },
          "enableFileScan": {
            "type": "boolean"
          },
          "validationErrorOnPendingFileScan": {
            "type": "boolean"
          },
          "enabledFileAnalysers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "enabledFileValidators": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "allowedKeysForUserDefinedMetadata": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeleteStatus": {
        "type": "object",
        "properties": {
          "isHardDeleted": {
            "type": "boolean"
          },
          "hardDeleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EFormidlingContract": {
        "type": "object",
        "properties": {
          "serviceId": {
            "type": "string",
            "nullable": true
          },
          "dpfShipmentType": {
            "type": "string",
            "nullable": true
          },
          "receiver": {
            "type": "string",
            "nullable": true
          },
          "sendAfterTaskId": {
            "type": "string",
            "nullable": true
          },
          "process": {
            "type": "string",
            "nullable": true
          },
          "standard": {
            "type": "string",
            "nullable": true
          },
          "typeVersion": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "securityLevel": {
            "type": "integer",
            "format": "int32"
          },
          "dataTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FileScanResult": {
        "enum": [
          "NotApplicable",
          "Pending",
          "Clean",
          "Infected"
        ],
        "type": "string"
      },
      "HideSettings": {
        "type": "object",
        "properties": {
          "hideAlways": {
            "type": "boolean"
          },
          "hideOnTask": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Instance": {
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "lastChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastChangedBy": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "instanceOwner": {
            "$ref": "#/components/schemas/InstanceOwner"
          },
          "appId": {
            "type": "string",
            "nullable": true
          },
          "org": {
            "type": "string",
            "nullable": true
          },
          "selfLinks": {
            "$ref": "#/components/schemas/ResourceLinks"
          },
          "dueBefore": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "visibleAfter": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "process": {
            "$ref": "#/components/schemas/ProcessState"
          },
          "status": {
            "$ref": "#/components/schemas/InstanceStatus"
          },
          "completeConfirmations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompleteConfirmation"
            },
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataElement"
            },
            "nullable": true
          },
          "presentationTexts": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "dataValues": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InstanceFileScanResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Instance id",
            "nullable": true,
            "readOnly": true
          },
          "fileScanResult": {
            "$ref": "#/components/schemas/FileScanResult"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataElementFileScanResult"
            },
            "description": "File scan result for individual data elements.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Light weight model representing an instance and it's file scan result status."
      },
      "InstanceOwner": {
        "type": "object",
        "properties": {
          "partyId": {
            "type": "string",
            "nullable": true
          },
          "personNumber": {
            "type": "string",
            "nullable": true
          },
          "organisationNumber": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InstanceSelection": {
        "type": "object",
        "properties": {
          "rowsPerPageOptions": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "defaultRowsPerPage": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "defaultSelectedOption": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InstanceStatus": {
        "type": "object",
        "properties": {
          "isArchived": {
            "type": "boolean"
          },
          "archived": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isSoftDeleted": {
            "type": "boolean"
          },
          "softDeleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isHardDeleted": {
            "type": "boolean"
          },
          "hardDeleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "readStatus": {
            "$ref": "#/components/schemas/ReadStatus"
          },
          "substatus": {
            "$ref": "#/components/schemas/Substatus"
          }
        },
        "additionalProperties": false
      },
      "InstansiationInstance": {
        "type": "object",
        "properties": {
          "instanceOwner": {
            "$ref": "#/components/schemas/InstanceOwner"
          },
          "dueBefore": {
            "type": "string",
            "description": "Gets or sets the due date to submit the instance to application owner.",
            "format": "date-time",
            "nullable": true
          },
          "visibleAfter": {
            "type": "string",
            "description": "Gets or sets date and time for when the instance should first become visible for the instance owner.",
            "format": "date-time",
            "nullable": true
          },
          "prefill": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Gets or sets the prefill values for the instance.",
            "nullable": true
          },
          "sourceInstanceId": {
            "type": "string",
            "description": "Gets or sets the id of the instance to use as a source for the new instance.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Specialized model for instansiation of instances"
      },
      "InvoiceDetails": {
        "type": "object",
        "properties": {
          "invoiceNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JsonNode": {
        "type": "object",
        "properties": {
          "options": {
            "$ref": "#/components/schemas/JsonNodeOptions"
          },
          "parent": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "root": {
            "$ref": "#/components/schemas/JsonNode"
          }
        },
        "additionalProperties": false
      },
      "JsonNodeOptions": {
        "type": "object",
        "properties": {
          "propertyNameCaseInsensitive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "JsonPatch": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PatchOperation"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "KeyValueEntry": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Logo": {
        "type": "object",
        "properties": {
          "displayAppOwnerNameInHeader": {
            "type": "boolean"
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LookupOrganisationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether a person was found or not."
          },
          "organisationDetails": {
            "$ref": "#/components/schemas/OrganisationDetails"
          }
        },
        "additionalProperties": false,
        "description": "Contains the result of an organisation lookup."
      },
      "LookupPersonRequest": {
        "required": [
          "lastName",
          "socialSecurityNumber"
        ],
        "type": "object",
        "properties": {
          "socialSecurityNumber": {
            "type": "string",
            "description": "The social security number of the person to search for.",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "The last name of the person to search for.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data transfer object for the request to search for a person."
      },
      "LookupPersonResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether a person was found or not."
          },
          "personDetails": {
            "$ref": "#/components/schemas/PersonDetails"
          }
        },
        "additionalProperties": false,
        "description": "Contains the result of a person search request."
      },
      "MessageBoxConfig": {
        "type": "object",
        "properties": {
          "hideSettings": {
            "$ref": "#/components/schemas/HideSettings"
          }
        },
        "additionalProperties": false
      },
      "OnEntry": {
        "type": "object",
        "properties": {
          "show": {
            "type": "string",
            "nullable": true
          },
          "instanceSelection": {
            "$ref": "#/components/schemas/InstanceSelection"
          }
        },
        "additionalProperties": false
      },
      "OnEntryConfig": {
        "type": "object",
        "properties": {
          "show": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OperationType": {
        "enum": [
          "Unknown",
          "add",
          "remove",
          "replace",
          "move",
          "copy",
          "test"
        ],
        "type": "string"
      },
      "OrderDetails": {
        "required": [
          "currency",
          "orderLines",
          "paymentProcessorId",
          "receiver"
        ],
        "type": "object",
        "properties": {
          "paymentProcessorId": {
            "type": "string",
            "nullable": true
          },
          "receiver": {
            "$ref": "#/components/schemas/PaymentReceiver"
          },
          "payer": {
            "$ref": "#/components/schemas/Payer"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "orderLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentOrderLine"
            },
            "nullable": true
          },
          "allowedPayerTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PayerType"
            },
            "nullable": true
          },
          "orderReference": {
            "type": "string",
            "nullable": true
          },
          "totalPriceExVat": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalVat": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalPriceIncVat": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "OrganisationDetails": {
        "required": [
          "name",
          "orgNr"
        ],
        "type": "object",
        "properties": {
          "orgNr": {
            "type": "string",
            "description": "The organisation number",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The full name",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Contains details about an organisation"
      },
      "PartyTypesAllowed": {
        "type": "object",
        "properties": {
          "bankruptcyEstate": {
            "type": "boolean"
          },
          "organisation": {
            "type": "boolean"
          },
          "person": {
            "type": "boolean"
          },
          "subUnit": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PatchListItem": {
        "type": "object",
        "properties": {
          "dataElementId": {
            "type": "string",
            "description": "The guid for the data element this patch applies to",
            "format": "uuid"
          },
          "patch": {
            "$ref": "#/components/schemas/JsonPatch"
          }
        },
        "additionalProperties": false,
        "description": "Item class for the list of patches with Id"
      },
      "PatchOperation": {
        "type": "object",
        "properties": {
          "op": {
            "$ref": "#/components/schemas/OperationType"
          },
          "from": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "path": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "value": {
            "$ref": "#/components/schemas/JsonNode"
          }
        },
        "additionalProperties": false
      },
      "Payer": {
        "type": "object",
        "properties": {
          "privatePerson": {
            "$ref": "#/components/schemas/PayerPrivatePerson"
          },
          "company": {
            "$ref": "#/components/schemas/PayerCompany"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/Address"
          }
        },
        "additionalProperties": false
      },
      "PayerCompany": {
        "type": "object",
        "properties": {
          "organisationNumber": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "contactPerson": {
            "$ref": "#/components/schemas/PayerPrivatePerson"
          }
        },
        "additionalProperties": false
      },
      "PayerPrivatePerson": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "$ref": "#/components/schemas/PhoneNumber"
          }
        },
        "additionalProperties": false
      },
      "PayerType": {
        "enum": [
          "Person",
          "Company"
        ],
        "type": "string"
      },
      "PaymentDetails": {
        "required": [
          "paymentId"
        ],
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "redirectUrl": {
            "type": "string",
            "nullable": true
          },
          "payer": {
            "$ref": "#/components/schemas/Payer"
          },
          "paymentType": {
            "type": "string",
            "nullable": true
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "nullable": true
          },
          "chargedDate": {
            "type": "string",
            "nullable": true
          },
          "invoiceDetails": {
            "$ref": "#/components/schemas/InvoiceDetails"
          },
          "cardDetails": {
            "$ref": "#/components/schemas/CardDetails"
          }
        },
        "additionalProperties": false
      },
      "PaymentInformation": {
        "required": [
          "orderDetails",
          "status",
          "taskId"
        ],
        "type": "object",
        "properties": {
          "taskId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/PaymentStatus"
          },
          "orderDetails": {
            "$ref": "#/components/schemas/OrderDetails"
          },
          "paymentDetails": {
            "$ref": "#/components/schemas/PaymentDetails"
          }
        },
        "additionalProperties": false
      },
      "PaymentOrderLine": {
        "required": [
          "id",
          "name",
          "priceExVat",
          "vatPercent"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "textResourceKey": {
            "type": "string",
            "nullable": true
          },
          "priceExVat": {
            "type": "number",
            "format": "double"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "vatPercent": {
            "type": "number",
            "format": "double"
          },
          "unit": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentReceiver": {
        "type": "object",
        "properties": {
          "organisationNumber": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "postalAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "bankAccountNumber": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "$ref": "#/components/schemas/PhoneNumber"
          }
        },
        "additionalProperties": false
      },
      "PaymentStatus": {
        "enum": [
          "Uninitialized",
          "Created",
          "Paid",
          "Failed",
          "Cancelled",
          "Skipped"
        ],
        "type": "string"
      },
      "PersonDetails": {
        "required": [
          "lastName",
          "name",
          "ssn"
        ],
        "type": "object",
        "properties": {
          "ssn": {
            "type": "string",
            "description": "The social security number",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The full name",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "The first name",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "description": "The middle name",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "The last name",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Contains details about a person"
      },
      "PhoneNumber": {
        "type": "object",
        "properties": {
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {}
      },
      "ProcessElementInfo": {
        "type": "object",
        "properties": {
          "flow": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "started": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "elementId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "altinnTaskType": {
            "type": "string",
            "nullable": true
          },
          "ended": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "validated": {
            "$ref": "#/components/schemas/ValidationStatus"
          },
          "flowType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProcessHistoryItem": {
        "type": "object",
        "properties": {
          "eventType": {
            "type": "string",
            "nullable": true
          },
          "elementId": {
            "type": "string",
            "nullable": true
          },
          "occured": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "started": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ended": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "performedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProcessHistoryList": {
        "type": "object",
        "properties": {
          "processHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessHistoryItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProcessNext": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "Action performed",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Model for process next body"
      },
      "ProcessState": {
        "type": "object",
        "properties": {
          "started": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "startEvent": {
            "type": "string",
            "nullable": true
          },
          "currentTask": {
            "$ref": "#/components/schemas/ProcessElementInfo"
          },
          "ended": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endEvent": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReadStatus": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Reference": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "relation": {
            "$ref": "#/components/schemas/RelationType"
          },
          "valueType": {
            "$ref": "#/components/schemas/ReferenceType"
          }
        },
        "additionalProperties": false
      },
      "ReferenceType": {
        "enum": [
          "DataElement",
          "Task"
        ],
        "type": "string"
      },
      "RelationType": {
        "enum": [
          "GeneratedFrom"
        ],
        "type": "string"
      },
      "ResourceLinks": {
        "type": "object",
        "properties": {
          "apps": {
            "type": "string",
            "nullable": true
          },
          "platform": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShadowFields": {
        "type": "object",
        "properties": {
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "saveToDataType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SimpleInstance": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The instance identifier formated as {instanceOwner.partyId}/{instanceGuid}.",
            "nullable": true
          },
          "presentationTexts": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Presentation texts from the instance",
            "nullable": true
          },
          "dueBefore": {
            "type": "string",
            "description": "Gets or sets the due date to submit the instance to application owner.",
            "format": "date-time",
            "nullable": true
          },
          "lastChanged": {
            "type": "string",
            "description": "Last changed date time in UTC format.",
            "format": "date-time",
            "nullable": true
          },
          "lastChangedBy": {
            "type": "string",
            "description": "Full name of user to last change the instance.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A simplified instance model used for presentation of key instance information."
      },
      "Substatus": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TagsList": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of tags represented as sting values.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the response from an API endpoint providing a list of tags."
      },
      "TextResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "org": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TextResourceElement"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TextResourceElement": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "variables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TextResourceVariable"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TextResourceVariable": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "dataSource": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserAction": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "authorized": {
            "type": "boolean"
          },
          "type": {
            "$ref": "#/components/schemas/ActionType"
          }
        },
        "additionalProperties": false
      },
      "UserActionRequest": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "Action performed",
            "nullable": true
          },
          "buttonId": {
            "type": "string",
            "description": "The id of the button that was clicked",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional metadata for the action",
            "nullable": true
          },
          "ignoredValidators": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Ignored validators that should not be evauated as part of this action",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request model for user action"
      },
      "UserActionResponse": {
        "required": [
          "instance"
        ],
        "type": "object",
        "properties": {
          "instance": {
            "$ref": "#/components/schemas/Instance"
          },
          "updatedDataModels": {
            "type": "object",
            "additionalProperties": {},
            "description": "Data models that have been updated",
            "nullable": true
          },
          "updatedValidationIssues": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ValidationIssueWithSource"
                }
              }
            },
            "description": "Gets a dictionary of updated validation issues. The first key is the data model id, the second key is the validator id\nValidators that are not listed in the dictionary are assumed to have not been executed",
            "nullable": true
          },
          "clientActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientAction"
            },
            "description": "Actions the client should perform after action has been performed backend",
            "nullable": true
          },
          "error": {
            "$ref": "#/components/schemas/ActionError"
          },
          "redirectUrl": {
            "type": "string",
            "description": "If the action requires the client to redirect to another url, this property should be set",
            "format": "uri",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response object from action endpoint"
      },
      "UserDefinedMetadataDto": {
        "type": "object",
        "properties": {
          "userDefinedMetadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValueEntry"
            },
            "description": "A list of properties represented as key-value pairs.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the response from an API endpoint providing a list of key-value properties."
      },
      "ValidationIssueSeverity": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "ValidationIssueWithSource": {
        "required": [
          "code",
          "description",
          "severity",
          "source"
        ],
        "type": "object",
        "properties": {
          "severity": {
            "$ref": "#/components/schemas/ValidationIssueSeverity"
          },
          "dataElementId": {
            "type": "string",
            "nullable": true
          },
          "field": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "minLength": 1,
            "type": "string"
          },
          "noIncrementalUpdates": {
            "type": "boolean"
          },
          "customTextKey": {
            "type": "string",
            "nullable": true
          },
          "customTextParams": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidationSourcePair": {
        "required": [
          "issues",
          "source"
        ],
        "type": "object",
        "properties": {
          "source": {
            "minLength": 1,
            "type": "string"
          },
          "issues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationIssueWithSource"
            }
          }
        },
        "additionalProperties": false
      },
      "ValidationStatus": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "canCompleteTask": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      }
    }
  }
}
name: Code test and analysis
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]
  workflow_dispatch:
jobs:
  analyze:
    if: |
     github.repository_owner == 'Altinn' &&
     (github.event_name != 'pull_request' && github.event.repository.fork == false) ||
     (github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == false)
    name: Static code analysis
    runs-on: windows-latest
    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4
        with:
          dotnet-version: |
            8.0.x
      - name: Set up JDK 11
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4
        with:
          distribution: 'zulu'
          java-version: 17
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@2f8e54208210a422b2efd51efaa6bd6d7ca8920f # v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@2f8e54208210a422b2efd51efaa6bd6d7ca8920f # v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build & Test
        run: |
           dotnet test Altinn.FileAnalyzers.sln -v m
      - name: Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"Altinn_fileanalyzers-lib-dotnet" /o:"altinn" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vstest.reportsPaths="**/*.trx" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"

          dotnet build Altinn.FileAnalyzers.sln
          dotnet test Altinn.FileAnalyzers.sln `
          --no-build `
          --results-directory TestResults/ `
          --collect:"XPlat Code Coverage" `
          -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover

          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

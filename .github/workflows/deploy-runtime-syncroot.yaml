name: Runtime - deploy syncroot

on:
  push:
    branches:
      - main
    paths:
      - infra/runtime/syncroot/**
      - .github/workflows/deploy-runtime-syncroot.yaml
  workflow_dispatch:
    inputs:
      rings:
        description: 'Rings to tag the artifact with. Format of the input object is [{"ring": "at_ring1", "environment": "dev"}].'
        required: false
        default: '[{"ring": "at_ring1", "environment": "runtime_at_ring1"}]'

permissions:
  id-token: write
  contents: read
  actions: write

jobs:
  get-short-sha:
    uses: ./.github/workflows/template-short-sha.yaml

  construct-rings-array:
    runs-on: ubuntu-latest
    env:
      default-rings: >-
        [{"ring": "at_ring1", "environment": "runtime_at_ring1"},{"ring": "at_ring2", "environment": "runtime_at_ring2"},{"ring": "tt_ring1", "environment": "runtime_tt_ring1"},{"ring": "tt_ring2", "environment": "runtime_tt_ring2"},{"ring": "prod_ring1", "environment": "runtime_prod_ring1"},{"ring": "prod_ring2", "environment": "runtime_prod_ring2"}]
    outputs:
      ringsjson: ${{ steps.construct-rings.outputs.ringsjson }}
    steps:
      - name: Construct rings array
        id: construct-rings
        run: |
          rings='${{ github.event.inputs.rings }}'
          if [ -z "$rings" ]; then
            rings='${{ env.default-rings }}'
          fi
          echo "Raw rings input: $rings"
          echo "ringsjson=${rings}" >> $GITHUB_OUTPUT

  push-syncroot-artifact:
    name: Push syncroot as OCI artifact
    needs: get-short-sha
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      id-token: write # Require write permission to Fetch an OIDC token.
    outputs:
      short-sha: ${{ needs.get-short-sha.outputs.short-sha }}
    defaults:
      run:
        working-directory: ./infra/runtime
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          fetch-depth: 0 # Shallow clone

      - name: az login
        uses: azure/login@a457da9ea143d694b1b9c7c869ebb04ebe844ef5 # v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID_FC }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID_FC }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID_FC }}

      - name: az acr login
        run: az acr login --name altinncr

      - name: flux install
        uses: fluxcd/flux2/action@6bf37f6a560fd84982d67f853162e4b3c2235edb # v2.6.4

      - name: push artifact
        run: |
          cd syncroot/
          flux push artifact oci://altinncr.azurecr.io/studio-apps/syncroot:${{ needs.get-short-sha.outputs.short-sha }} \
            --provider=generic \
            --reproducible \
            --path="." \
            --source="$(git config --get remote.origin.url)" \
            --revision="$(git branch --show-current)/$(git rev-parse HEAD)"

  tag-syncroot:
    name: Tag syncroot
    needs: [push-syncroot-artifact, construct-rings-array]
    runs-on: ubuntu-latest
    environment: ${{ matrix.environment }}
    permissions:
      id-token: write # Require write permission to Fetch an OIDC token.
    strategy:
      matrix:
        include: ${{ fromJson(needs.construct-rings-array.outputs.ringsjson) }}
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          fetch-depth: 0 # Shallow clone

      - name: az login
        uses: azure/login@a457da9ea143d694b1b9c7c869ebb04ebe844ef5 # v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID_FC }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID_FC }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID_FC }}

      - name: az acr login
        run: az acr login --name altinncr

      - name: flux install
        uses: fluxcd/flux2/action@6bf37f6a560fd84982d67f853162e4b3c2235edb # v2.6.4

      - name: tag artifact
        run: |
          flux tag artifact oci://altinncr.azurecr.io/studio-apps/syncroot:${{ needs.push-syncroot-artifact.outputs.short-sha }} \
            --tag ${{ matrix.ring }}

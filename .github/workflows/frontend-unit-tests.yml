name: Frontend Tests

on:
  push:
    paths:
      - 'frontend/**'
      - 'testdata/**'
      - '.github/workflows/frontend-unit-tests.yml'
      - 'package.json'

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  CYPRESS_INSTALL_BINARY: 0

jobs:
  codeql:
    name: 'CodeQL'
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: 'Checking Out Code'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 'Initialize CodeQL'
        uses: github/codeql-action/init@v2
        with:
          languages: javascript
          queries: +security-and-quality

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: '/language:javascript'

  typecheck:
    name: 'Typechecking and linting'
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: 'Checking Out Code'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 'Installing Dependencies'
        uses: ./.github/actions/yarn-install

      - name: 'Doing the typecheck'
        run: yarn typecheck

      - name: 'Running Eslint'
        run: yarn lint

  test:
    name: 'Testing'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checking Out Code'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 'Installing Dependencies'
        uses: ./.github/actions/yarn-install

      - name: 'Running Unit Tests'
        run: yarn test:ci

      - name: Fix code coverage paths
        run: sed -i 's@'$GITHUB_WORKSPACE'@/github/workspace/@g' frontend/coverage/lcov.info

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
          projectBaseDir: frontend
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    name: 'Building'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checking Out Code'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 'Installing Dependencies'
        uses: ./.github/actions/yarn-install

      - name: 'Building'
        run: yarn build

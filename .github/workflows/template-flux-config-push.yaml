name: Flux config push workflow

on:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string
      registry-name:
        required: true
        type: string
      environment:
        required: true
        type: string
      config-chart-name:
        required: true
        type: string
      artifact-name:
        required: true
        type: string

    secrets:
      client-id:
        required: true
      tenant-id:
        required: true
      subscription-id:
        required: true
      flux-set-arguments:
        required: false

jobs:
  oci-config-artifact-push:
    name: Flux config push
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4


      # - name: 'Azure login'
      #   uses: azure/login@v2
      #   with:
      #       client-id: ${{ secrets.client-id }}
      #       tenant-id: ${{ secrets.tenant-id }}
      #       subscription-id: ${{ secrets.subscription-id }}

      # - name: Log in to Container registry
      #   run: |
      #     az acr login --name ${{ inputs.registry-name }} \
      #     --expose-token --output tsv \
      #     --query accessToken \
      #     --subscription ${{ secrets.subscription-id }} \
      #     --only-show-errors |  docker login ${{ inputs.registry-name }} \
      #                           --username 00000000-0000-0000-0000-000000000000 \
      #                           --password-stdin

      - name: Setup Flux CLI
        uses: fluxcd/flux2/action@v2.3.0

      - name: Generate cofiguration file
        run: |
          mkdir ${{ inputs.config-chart-name }}-rendered

          arguments=""

          for setarg in $(echo ${{ secrets.flux-set-arguments }} | tr ',' '\n'); do
            arguments+=" --set $setarg"
          done

          helm template charts/${{ inputs.config-chart-name }} $arguments > ${{ inputs.config-chart-name }}-rendered/helm-release.yaml
          cat ${{ inputs.config-chart-name }}-rendered/helm-release.yaml

      # - name: Push config artifact
      #   run: |
      #     flux push artifact oci://${{ inputs.registry-name }}/configs/${{ inputs.artifact-name }}-${{ inputs.environment }}:${{ inputs.tag }} \
      #     --path="./${{ inputs.config-chart-name }}-rendered" \
      #     --source="$(git config --get remote.origin.url)" \
      #     --revision="$(git branch --show-current)/$(git rev-parse HEAD)"

      # - name: Tag artifact as latest
      #   run: |
      #     flux tag artifact oci://${{ inputs.registry-name }}/configs/${{ inputs.artifact-name }}-${{ inputs.environment }}:${{ inputs.tag }} --tag latest


name: Flux config push workflow

on:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string
      registry-name:
        required: true
        type: string
      environment:
        required: true
        type: string
      artifact-environment:
        required: false
        type: string
      config-chart-name:
        required: true
        type: string
      artifact-name:
        required: true
        type: string
      helm-set-arguments:
        required: false
        type: string
      trace-workflow:
        required: false
        type: boolean
        default: false
      trace-team-name:
        required: false
        type: string
        default: ''


    secrets:
      client-id:
        required: true
      tenant-id:
        required: true
      subscription-id:
        required: true
      trace-connection-string:
        required: false
      trace-repo-token:
        required: false

jobs:
  config-oci-artifact-push:
    name: Flux config push
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: 'Azure login'
        uses: azure/login@a457da9ea143d694b1b9c7c869ebb04ebe844ef5 # v2
        with:
            client-id: ${{ secrets.client-id }}
            tenant-id: ${{ secrets.tenant-id }}
            subscription-id: ${{ secrets.subscription-id }}

      - name: Log in to Container registry
        run: |
          az acr login --name ${{ inputs.registry-name }} \
          --expose-token --output tsv \
          --query accessToken \
          --subscription ${{ secrets.subscription-id }} \
          --only-show-errors |  docker login ${{ inputs.registry-name }} \
                                --username 00000000-0000-0000-0000-000000000000 \
                                --password-stdin

      - name: Setup Flux CLI
        uses: fluxcd/flux2/action@6bf37f6a560fd84982d67f853162e4b3c2235edb # v2.6.4

      - name: Generate cofiguration file
        run: |
          mkdir ${{ inputs.config-chart-name }}-rendered

          arguments=""

          for setarg in $(echo ${{ inputs.helm-set-arguments }} | tr ',' '\n'); do
            arguments+=" --set $setarg"
          done

          helm template charts/${{ inputs.config-chart-name }} $arguments > ${{ inputs.config-chart-name }}-rendered/helm-release.yaml

      - name: Push config artifact
        run: |
          artifact_env=${{ inputs.artifact-environment || inputs.environment }}
          flux push artifact oci://${{ inputs.registry-name }}/configs/${{ inputs.artifact-name }}-${artifact_env}:${{ inputs.tag }} \
          --path="./${{ inputs.config-chart-name }}-rendered" \
          --source="$(git config --get remote.origin.url)" \
          --revision="$(git branch --show-current)/$(git rev-parse HEAD)"

      - name: Tag artifact as latest
        run: |
          artifact_env=${{ inputs.artifact-environment || inputs.environment }}
          flux tag artifact oci://${{ inputs.registry-name }}/configs/${{ inputs.artifact-name }}-${artifact_env}:${{ inputs.tag }} --tag latest

      - name: Send Trace to Azure Monitor
        if: ${{ inputs.trace-workflow }}
        uses: altinn/altinn-platform/actions/send-ci-cd-trace@cc4b775eb4d7015674bfcaac762e40f270afab87 # v1.0.1
        with:
            connection_string: ${{ secrets.trace-connection-string }}
            app: "${{ inputs.artifact-name }}"
            team: "${{ inputs.trace-team-name }}"
            repo_token: ${{ secrets.trace-repo-token }}
            environment: ${{ inputs.artifact-environment || inputs.environment }}

name: Runtime - deploy studio-gateway

on:
  push:
    branches:
      - main
    paths:
      - src/Runtime/StudioGateway/**
      - .github/workflows/deploy-runtime-studio-gateway.yaml
  workflow_dispatch:

jobs:
  push-studio-gateway-artifact:
    name: Push studio-gateway as OCI artifact
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      id-token: write # Require write permission to Fetch an OIDC token.
    defaults:
      run:
        working-directory: src/Runtime/StudioGateway
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          fetch-depth: 0 # Shallow clone

      - name: set vars
        id: vars
        run: |
          echo "registry_name=altinncr" >> $GITHUB_OUTPUT
          echo "image_repo=altinncr.azurecr.io/studio-apps/runtime-gateway:$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "config_repo=altinncr.azurecr.io/studio-apps/runtime-gateway-repo:$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "tag=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: az login
        uses: azure/login@a457da9ea143d694b1b9c7c869ebb04ebe844ef5 # v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID_FC }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID_FC }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID_FC }}

      - name: az acr login
        run: az acr login --name ${{ steps.vars.outputs.registry_name }}

      - name: flux install
        uses: fluxcd/flux2/action@6bf37f6a560fd84982d67f853162e4b3c2235edb # v2.6.4

      - name: docker build
        run: docker build -t ${{ steps.vars.outputs.image_repo }} -f Dockerfile .

      - name: scan image
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8 # 0.33.1
        with:
          image-ref: '${{ steps.vars.outputs.image_repo }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: push image
        run: docker push ${{ steps.vars.outputs.image_repo }}

      - name: get image digest
        id: digest
        run: |
          IMAGE_DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ steps.vars.outputs.image_repo }})
          echo "image_digest=${IMAGE_DIGEST}" >> $GITHUB_OUTPUT

      - name: yq install
        uses: mikefarah/yq@6251e95af8df3505def48c71f3119836701495d6 # v4.47.2

      - name: patch base with image digest
        working-directory: src/Runtime/StudioGateway/infra/kustomize
        run: |
          export IMAGE_DIGEST="${{ steps.digest.outputs.image_digest }}"
          export IMAGE_TAG="${{ steps.vars.outputs.tag }}"
          yq -i '.spec.template.spec.containers[0].image = env(IMAGE_DIGEST)' deployment.yaml
          yq -i '.metadata.annotations["altinn.studio/image"] = env(IMAGE_DIGEST)' deployment.yaml
          yq -i '.metadata.annotations["altinn.studio/image-tag"] = env(IMAGE_TAG)' deployment.yaml

      - name: push artifact
        working-directory: src/Runtime/StudioGateway/infra/kustomize
        run: |
          flux push artifact oci://${{ steps.vars.outputs.config_repo }} \
            --provider=azure \
            --reproducible \
            --path="." \
            --source="$(git config --get remote.origin.url)" \
            --revision="$(git branch --show-current)/$(git rev-parse HEAD)"

      - name: tag artifact at_ring1 (ttd/at22)
        run: |
          flux tag artifact oci://${{ steps.vars.outputs.config_repo }} --tag at_ring1

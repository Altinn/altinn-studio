<!DOCTYPE html>
<html lang="no">
<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->

  <title>@ViewBag.Org- @ViewBag.App</title>

  <link rel="icon" href="https://altinncdn.no/favicon.ico">

  <!-- Third Party CSS -->
  <link rel="stylesheet" href="https://altinncdn.no/toolkits/fortawesome/altinn-no-bold/0.1/css/embedded-woff.css">
  <link rel="stylesheet" href="https://altinncdn.no/toolkits/fortawesome/altinn-no-regular/0.1/css/embedded-woff.css">
  <link rel="stylesheet" href="https://altinncdn.no/toolkits/fortawesome/altinn-studio/0.1/css/embedded-woff.css">

  <!-- Fonts -->
  <link href="https://altinncdn.no/fonts/altinn-din/altinn-din.css" rel="stylesheet">

  <!-- Runtime CSS -->
  <link rel="stylesheet" type="text/css" href="https://altinncdn.no/toolkits/altinn-app-frontend/3/altinn-app-frontend.css">

  <style>
    html, body {
      height: 100%;
    }
  </style>
</head>
<body>
  <div class="flex-column d-flex media-body">
    <script>
      function loadScript() {
        var appId = window.location.pathname.split('/');
        window.reportee = document.cookie.replace(/(?:(?:^|.*;\s*)AltinnPartyId\s*\=\s*([^;]*).*$)|^.*$/, "$1");;
        window.org = appId[1];
        window.app = appId[2];
      }
      
      // TODO: Remove when devtools supports setting permissions
      async function waitForSelector(selector) {
        while ( document.querySelector(selector) === null) {
          await new Promise( resolve => requestAnimationFrame(resolve) )
        }
        return document.querySelector(selector);
      };

      function updatePermission() {
        const write = document.querySelector("#writePermission").checked;
        const confirm = document.querySelector("#confirmPermission").checked;
        const sign = document.querySelector("#signPermission").checked;
        const reject = document.querySelector("#rejectPermission").checked;

        localStorage.setItem("writePermission", write);
        localStorage.setItem("confirmPermission", confirm);
        localStorage.setItem("signPermission", sign);
        localStorage.setItem("rejectPermission", reject);

        const permissions = {
          read: true,
          write,
          actions: {
            instantiate: true,
            confirm,
            sign,
            reject,
          },
        };

        const { taskType, taskId } = window.reduxStore.getState().process;

        if (taskId) {
          window.reduxStore.dispatch({
            type: 'process/getFulfilled',
            payload: {
              taskType,
              taskId,
              ...permissions
            },
          });
          window.reduxStore.dispatch({
            type: 'formLayout/updateLayouts',
            payload: {}
          });
        }
      }

    </script>
    <div id="root" class="media-body flex-column d-flex"></div>
    <div id="permissionContainer" style="display: none; margin: 0 auto 50px auto;">
      <span>Set permissions:</span>
      <input id="writePermission" type="checkbox" onchange="updatePermission()">
      <label for="writePermission">Write</label>
      <input id="confirmPermission" type="checkbox" onchange="updatePermission()">
      <label for="confirmPermission">Confirm</label>
      <input id="signPermission" type="checkbox" onchange="updatePermission()">
      <label for="signPermission">Sign</label>
      <input id="rejectPermission" type="checkbox" onchange="updatePermission()">
      <label for="rejectPermission">Reject</label>
    </div>
    <script>
      loadScript();

      // TODO: Remove when devtools supports setting permissions
      if (document.location.host === "local.altinn.cloud" && false) { // Remove '&& false' to enable local "devtools"
        document.querySelector("#permissionContainer").style.display = "block";
        
        document.querySelector("#writePermission").checked = localStorage.getItem('writePermission') === "true" ?? true;
        document.querySelector("#confirmPermission").checked = localStorage.getItem('confirmPermission') === "true" ?? true;
        document.querySelector("#signPermission").checked = localStorage.getItem('signPermission') === "true" ?? true;
        document.querySelector("#rejectPermission").checked = localStorage.getItem('rejectPermission') === "true" ?? true;

        var prevPermissionValue = 0;
        waitForSelector('#readyForPrint').then((selector) => {
          if (window.reduxStore.getState().process.taskId) {
            updatePermission();
          }
          window.reduxStore.subscribe(() => {
            const {taskId, read} = window.reduxStore.getState().process;
            if (taskId && read !== true && read !== false) {
              updatePermission();
            }
            prevPermissionValue = read;
          })
        });
      }
    </script>
  </div>
  <script src="https://altinncdn.no/toolkits/altinn-app-frontend/3/altinn-app-frontend.js"></script>
</body>
</html>
